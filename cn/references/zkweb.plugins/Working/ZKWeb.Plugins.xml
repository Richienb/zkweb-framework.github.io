<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>ZKWeb.Plugins</name>
  </assembly>
  <members>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Components.ExtraConfigKeys.ArticleExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.CMS.Article.src.Components.ExtraConfigKeys.ArticleExtraConfigKeys.ArticleApiInfoCacheTime">
      <summary>
            文章信息的缓存时间，单位是秒
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.CMS.Article.src.Components.ExtraConfigKeys.ArticleExtraConfigKeys.ArticleSearchResultCacheTime">
      <summary>
            文章搜索结果的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Components.GenericConfigs.ArticleListSettings">
      <summary>
            文章列表设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Components.GenericConfigs.ArticleListSettings.ArticlesPerPage">
      <summary>
            每页显示的文章数量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Components.GenericConfigs.ArticleListSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleApiController">
      <summary>
            Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleApiController.ArticleClassTree">
      <summary>
            获取文章分类树
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleApiController.ArticleClassName">
      <summary>
            获取指定文章分类的信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleApiController.ArticleInfo">
      <summary>
            获取指定文章的信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleApiController.ArticleSearch">
      <summary>
            搜索文章列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleClassController">
      <summary>
            文章分类
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleController">
      <summary>
            文章控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleController.View">
      <summary>
            前台文章详情页
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleController.List">
      <summary>
            前台文章列表页
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController">
      <summary>
            文章管理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.TableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form">
      <summary>
            添加和编辑使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.Summary">
      <summary>
            摘要
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.ArticleClass">
      <summary>
            文章分类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.ArticleTag">
      <summary>
            文章标签
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.Contents">
      <summary>
            内容
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.OnBind(ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleCrudController.Form.OnSubmit(ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleImageBrowserController">
      <summary>
            文章图片浏览器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleListSettingsForm">
      <summary>
            商品列表设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleListSettingsForm.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleListSettingsForm.Form.ArticlesPerPage">
      <summary>
            每页显示的商品数量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleListSettingsForm.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleListSettingsForm.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Controllers.ArticleTagController">
      <summary>
            文章标签
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article">
      <summary>
            文章
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Id">
      <summary>
            文章Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Title">
      <summary>
            文章标题
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Summary">
      <summary>
            文章摘要
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Contents">
      <summary>
            文章内容，格式是Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Author">
      <summary>
            发布人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Remark">
      <summary>
            备注，格式是Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Classes">
      <summary>
            关联的分类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Tags">
      <summary>
            关联的标签
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Domain.Repositories.ArticleRepository">
      <summary>
            文章的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager">
      <summary>
            文章管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.ArticleApiInfoCacheTime">
      <summary>
            文章信息的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.ArticleApiInfoCache">
      <summary>
            文章信息的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.ArticleSearchResultCacheTime">
      <summary>
            文章搜索结果的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.ArticleSearchResultCache">
      <summary>
            文章搜索结果的缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.GetArticleApiInfo(System.Guid)">
      <summary>
            获取文章信息
            结果会按文章Id和当前登录用户缓存一定时间
            </summary>
      <param name="articleId">文章Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.GetArticleSearchResponseFromHttpRequest">
      <summary>
            根据当前http请求获取搜索结果
            结果会按请求参数和当前登录用户缓存一定时间
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.SelectOneVisibleArticleId">
      <summary>
            选择一个可见的文章Id
            返回的Id不固定，也可能返回Guid.Empty
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.Domain.Services.ArticleManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.Article.src.UIComponents.StaticTableHandlers.ArticleTableHandler">
      <summary>
            前台文章列表使用的文章表格的回调
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.UIComponents.StaticTableHandlers.ArticleTableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.UIComponents.StaticTableHandlers.ArticleTableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.Article.src.UIComponents.StaticTableHandlers.ArticleTableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.CMS.Article.src.Domain.Entities.Article}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.CKEditor.src.Components.Translates.ja_JP">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.CKEditor.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.CKEditor.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.CKEditor.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.CKEditor.src.UIComponents.FormFieldHandlers.CKEditor">
      <summary>
            CKEditor编辑器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.CKEditor.src.UIComponents.FormFieldHandlers.CKEditor.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.CKEditor.src.UIComponents.FormFieldHandlers.CKEditor.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.ExtraConfigKeys.ImageBrowserExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.ExtraConfigKeys.ImageBrowserExtraConfigKeys.ImageNamesCacheTime">
      <summary>
            同一类别下的图片名的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase">
      <summary>
            图片浏览器的控制器基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Category">
      <summary>
            图片类别
            保存到文件系统时使用小写
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Url">
      <summary>
            基础Url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.SearchUrl">
      <summary>
            搜索图片的Url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.UploadUrl">
      <summary>
            上传图片的Url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.RemoveUrl">
      <summary>
            删除图片的Url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.TableId">
      <summary>
            表格Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.TemplatePath">
      <summary>
            模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.AjaxTableTemplatePath">
      <summary>
            Ajax图片列表使用的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.RequiredUserType">
      <summary>
            默认需要管理员权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.RequiredPrivileges">
      <summary>
            默认需要按类别生成的权限
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.GetForm">
      <summary>
            获取图片上传表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Action">
      <summary>
            浏览图片
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.SearchAction">
      <summary>
            搜索图片
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.UploadAction">
      <summary>
            上传图片
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.RemoveAction">
      <summary>
            删除图片
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.GetPrivileges">
      <summary>
            获取权限列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Form">
      <summary>
            图片上传表单
            需要支持直接上传，这里不开启CSRF校验（上面会检查是否ajax请求）
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Form.Image">
      <summary>
            图片文件
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Form.CustomName">
      <summary>
            自定义名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Form.Category">
      <summary>
            图片类别
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Form.#ctor(System.String,ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderFieldAttribute,System.String)">
      <summary>
            初始化
            </summary>
      <param name="category">图片类别</param>
      <param name="uploadAttribute">上传属性</param>
      <param name="uploadUrl">上传地址</param>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases.ImageBrowserControllerBase.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager">
      <summary>
            图片管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ImageQuality">
      <summary>
            图片保存质量，默认是90
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ImageExtension">
      <summary>
            图片后缀，默认是.jpg
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ImageThumbnailExtension">
      <summary>
            图片缩略图的后缀，默认是.thumb.jpg
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ImageBasePathFormat">
      <summary>
            图片基础路径的格式
            参数: 类别
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ImageThumbnailSize">
      <summary>
            图片缩略图的大小，默认是135x135
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ImageNamesCacheTime">
      <summary>
            同一类别下的图片名的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ImageNamesCache">
      <summary>
            同一类别下的图片名的缓存
            { 类别: [图片名, ...], ... }
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.GetImageStorageDirectory(System.String)">
      <summary>
            获取图片的储存文件夹
            </summary>
      <param name="category">图片类别</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.GetImageStorageFile(System.String,System.String,System.String)">
      <summary>
            获取图片的储存文件
            </summary>
      <param name="category">图片类别</param>
      <param name="name">名称，不应该带后缀名</param>
      <param name="extensions">后缀名</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.Exists(System.String,System.String)">
      <summary>
            判断图片是否存在
            </summary>
      <param name="category">图片类别</param>
      <param name="name">名称，不应该带后缀名</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.GetImageWebPath(System.String,System.String,System.String)">
      <summary>
            获取图片的网页路径
            </summary>
      <param name="category">图片类别</param>
      <param name="name">名称，不应该带后缀名</param>
      <param name="extensions">后缀名</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.Save(System.IO.Stream,System.String,System.String)">
      <summary>
            保存图片文件
            </summary>
      <param name="imageStream">读取图片的数据流</param>
      <param name="category">类别</param>
      <param name="name">名称，不应该带后缀名</param>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.Remove(System.String,System.String)">
      <summary>
            删除图片文件
            </summary>
      <param name="category">类别</param>
      <param name="name">名称，不应该带后缀名</param>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.Query(System.String)">
      <summary>
            查询类别下的图片名称列表
            按最后修改的时间排序
            返回的结果仅图片名称，不带路径和后缀
            </summary>
      <param name="category">图片类别</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services.ImageManager.ClearCache">
      <summary>
            清除缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.AdminSettingsApiController">
      <summary>
            后台设置的Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.AdminSettingsApiController.AdminSettingsMenuGroups">
      <summary>
            获取后台设置的菜单项分组列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.AdminSettingsController">
      <summary>
            后台设置
            默认允许管理员或合作伙伴访问
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.CrudAdminSettingsControllerBase`2">
      <summary>
            支持增删查改数据的后台页面控制器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.CrudAdminSettingsControllerBase`2.RequiredUserType">
      <summary>
            默认需要管理员权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.CrudAdminSettingsControllerBase`2.ListTemplatePath">
      <summary>
            列表页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.CrudAdminSettingsControllerBase`2.AddTemplatePath">
      <summary>
            添加页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.CrudAdminSettingsControllerBase`2.EditTemplatePath">
      <summary>
            编辑页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.CrudAdminSettingsControllerBase`2.ConcernEntityOwnership">
      <summary>
            默认不需要按实体的所属用户进行隔离
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.FormAdminSettingsControllerBase">
      <summary>
            带单个表单的后台设置页面控制器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.FormAdminSettingsControllerBase.Privilege">
      <summary>
            使用的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.FormAdminSettingsControllerBase.RequiredUserType">
      <summary>
            默认需要管理员权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.FormAdminSettingsControllerBase.RequiredPrivileges">
      <summary>
            默认需要使用的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.FormAdminSettingsControllerBase.TemplatePath">
      <summary>
            模板路径
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.SimpleAdminSettingsControllerBase">
      <summary>
            简单的后台设置页面控制器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.SimpleAdminSettingsControllerBase.Privilege">
      <summary>
            使用的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.SimpleAdminSettingsControllerBase.RequiredUserType">
      <summary>
            默认需要管理员权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases.SimpleAdminSettingsControllerBase.RequiredPrivileges">
      <summary>
            默认需要使用的权限
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.LocaleSettingsController">
      <summary>
            语言设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.LocaleSettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.LocaleSettingsController.Form.DefaultLanguage">
      <summary>
            默认语言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.LocaleSettingsController.Form.DefaultTimezone">
      <summary>
            默认时区
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.LocaleSettingsController.Form.AllowDetectLanguageFromBrowser">
      <summary>
            是否允许自动检测浏览器语言
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.LocaleSettingsController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.LocaleSettingsController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController">
      <summary>
            网站设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.WebsiteName">
      <summary>
            网站名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.DocumentTitleFormat">
      <summary>
            网页标题的默认格式
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.CopyrightText">
      <summary>
            版权信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.PageKeywords">
      <summary>
            页面关键词
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.PageDescription">
      <summary>
            页面描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.FrontPageLogo">
      <summary>
            前台Logo
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.AdminPanelLogo">
      <summary>
            后台Logo
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.Favicon">
      <summary>
            页面图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.RestoreDefaultFrontPageLogo">
      <summary>
            恢复默认前台Logo
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.RestoreDefaultAdminPanelLogo">
      <summary>
            恢复默认后台Logo
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.RestoreDefaultFavicon">
      <summary>
            恢复默认页面图标
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.OnBind">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.WebsiteSettingsController.Form.OnSubmit">
      <summary>
            绑定表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.UIComponents.ListItemProviders.LanguageListItemProvider">
      <summary>
            语言列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.AdminSettings.src.UIComponents.ListItemProviders.LanguageListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.UIComponents.ListItemProviders.TimezoneListItemProvider">
      <summary>
            时区列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.AdminSettings.src.UIComponents.ListItemProviders.TimezoneListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.AdminSettings.src.UIComponents.MenuPages.Interfaces.IAdminSettingsMenuProvider">
      <summary>
            后台管理菜单项的提供器接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckOwnerAttribute">
      <summary>
            自动检查和设置实体的所属用户
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckOwnerAttribute.Filter(System.Func{ZKWeb.Web.IActionResult})">
      <summary>
            启用所属用户使用的查询和操作过滤器 
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckPrivilegeAttribute">
      <summary>
            用于检查权限的属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckPrivilegeAttribute.RequiredUserType">
      <summary>
            要求的用户类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckPrivilegeAttribute.Privileges">
      <summary>
            要求的权限列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckPrivilegeAttribute.HttpMethod">
      <summary>
            Http方法
            如果等于空则所有Http方法都会检查
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckPrivilegeAttribute.#ctor(System.Type,System.String[])">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.CheckPrivilegeAttribute.Filter(System.Func{ZKWeb.Web.IActionResult})">
      <summary>
            执行前检查权限
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.TransactionalAttribute">
      <summary>
            启用事务的属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.TransactionalAttribute.IsolationLevel">
      <summary>
            隔离等级
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.TransactionalAttribute.#ctor(System.Nullable{System.Data.IsolationLevel})">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.TransactionalAttribute.Filter(System.Func{ZKWeb.Web.IActionResult})">
      <summary>
            运行时包装在事务内
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.TransparentActionFilter">
      <summary>
            透明的的Action过滤器
            返回原Action
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters.TransparentActionFilter.Filter(System.Func{ZKWeb.Web.IActionResult})">
      <summary>
            返回原Action
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.EntityOperationHandlers.CheckUsernameDuplicate">
      <summary>
            注册用户时检测用户名是否重复
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.EntityOperationHandlers.PreventDeleteSelf">
      <summary>
            防止删除自身
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ExtraConfigKeys.AdminExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Components.ExtraConfigKeys.AdminExtraConfigKeys.SessionExpireDaysWithRememebrLogin">
      <summary>
            记住登陆时，保留会话的天数
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Components.ExtraConfigKeys.AdminExtraConfigKeys.SessionExpireDaysWithoutRememberLogin">
      <summary>
            不记住登陆时，保留会话的天数
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Components.ExtraConfigKeys.AdminExtraConfigKeys.AvatarWidth">
      <summary>
            头像宽度
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Components.ExtraConfigKeys.AdminExtraConfigKeys.AvatarHeight">
      <summary>
            头像高度
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeProviders.IPrivilegesProvider">
      <summary>
            权限提供器
            推荐使用的权限字符串的格式
            - Group:Name
            例如
            - AdminManage:View
            - AdminManage:Edit
            - AdminManage:Delete
            - AdminManage:DeleteForever
            不使用此格式时权限会被归到"其他"分组下
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeProviders.IPrivilegesProvider.GetPrivileges">
      <summary>
            获取权限列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeTranslators.DefaultPrivilegeTranslator">
      <summary>
            默认的权限翻译器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeTranslators.DefaultPrivilegeTranslator.Translate(System.String)">
      <summary>
            获取权限的本地化名称
            </summary>
      <param name="privilege">权限</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeTranslators.Interfaces.IPrivilegeTranslator">
      <summary>
            权限名称翻译器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeTranslators.Interfaces.IPrivilegeTranslator.Translate(System.String)">
      <summary>
            获取权限的本地化名称
            </summary>
      <param name="privilege">权限</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionAttribute">
      <summary>
            ScaffoldController中使用的Action属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionAttribute.PathProperty">
      <summary>
            保存了路径的成员名称
            成员类型应该是string
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionAttribute.HttpMethod">
      <summary>
            Http方法
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="pathProperty">保存了路径的成员名称</param>
      <param name="httpMethod">Http方法</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionAttribute.GetPath(ZKWeb.Web.IController)">
      <summary>
            获取路径
            </summary>
      <param name="controller">控制器的实例</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionFilterAttribute">
      <summary>
            ScaffoldController使用的Action过滤器属性的基类
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionFilterAttribute.GetFilter(ZKWeb.Web.IController)">
      <summary>
            获取实际的Action过滤器
            </summary>
      <param name="controller">控制器的实例</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckOwnerAttribute">
      <summary>
            ScaffoldController中使用的CheckOwner属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckOwnerAttribute.EnableProperty">
      <summary>
            保存了是否启用CheckOwner的成员
            成员类型应该是bool
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckOwnerAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="enableProperty">保存了是否启用CheckOwner的成员</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckOwnerAttribute.GetFilter(ZKWeb.Web.IController)">
      <summary>
            获取实际的Action过滤器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckPrivilegeAttribute">
      <summary>
            ScaffoldController使用的CheckPrivilege属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckPrivilegeAttribute.RequiredUserTypeProperty">
      <summary>
            保存要求的用户类型的成员
            类型应该是Type
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckPrivilegeAttribute.RequiredPrivilegesProperty">
      <summary>
            保存要求的权限列表的成员
            类型应该是string[]
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckPrivilegeAttribute.HttpMethod">
      <summary>
            Http方法
            如果等于空则所有Http方法都会检查
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckPrivilegeAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldCheckPrivilegeAttribute.GetFilter(ZKWeb.Web.IController)">
      <summary>
            获取实际的Action过滤器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldTransactionalAttribute">
      <summary>
            ScaffoldController中使用的Transactional属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldTransactionalAttribute.EnableProperty">
      <summary>
            保存了是否启用Transactional的成员
            成员类型应该是bool
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldTransactionalAttribute.IsolationLevelProperty">
      <summary>
            保存了隔离等级的成员
            成员类型应该是IsolationLevel?
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldTransactionalAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="enableProperty">保存了是否启用Transactional的成员</param>
      <param name="isolationLevelProperty">保存了隔离等级的成员</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldTransactionalAttribute.GetFilter(ZKWeb.Web.IController)">
      <summary>
            获取实际的Action过滤器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Components.UserLoginHandlers.Interfaces.IUserLoginHandler">
      <summary>
            用户登录处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.UserLoginHandlers.Interfaces.IUserLoginHandler.FindUser(System.String)">
      <summary>
            根据用户名查找用户
            不支持此函数或没有查找到时返回null
            </summary>
      <param name="username">用户名</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.UserLoginHandlers.Interfaces.IUserLoginHandler.BeforeLogin(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            登陆前的处理
            </summary>
      <param name="user">用户</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Components.UserLoginHandlers.Interfaces.IUserLoginHandler.AfterLogin(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            登陆后的处理
            </summary>
      <param name="user">用户</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminApiController">
      <summary>
            管理员使用的Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminApiController.ClearCache">
      <summary>
            清理缓存
            要求本地访问或管理员登陆
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminApiController.AppGroups">
      <summary>
            获取后台应用的分组列表
            只返回当前用户可以查看的应用
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminController">
      <summary>
            后台的控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminController.Admin">
      <summary>
            后台首页
            显示应用列表，会根据当前用户权限进行过滤
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminController.Login">
      <summary>
            后台登陆页
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminController.Logout">
      <summary>
            退出后台登陆
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminController.Workspace">
      <summary>
            工作区
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminController.AboutMe">
      <summary>
            关于我
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminController.AboutWebsite">
      <summary>
            关于网站
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController">
      <summary>
            管理员管理
            要求超级管理员
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和批量操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.BaseForm">
      <summary>
            添加和编辑共用的编辑表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.BaseForm.Password">
      <summary>
            密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.BaseForm.ConfirmPassword">
      <summary>
            确认密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.BaseForm.IsSuperAdmin">
      <summary>
            是否超级管理员
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.BaseForm.Roles">
      <summary>
            角色
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.BaseForm.OnBind(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.BaseForm.OnSubmit(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.AddForm">
      <summary>
            添加表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.AddForm.Username">
      <summary>
            用户名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.AddForm.OnSubmit(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.EditForm">
      <summary>
            编辑表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.EditForm.Username">
      <summary>
            用户名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.AdminCrudController.EditForm.OnBind(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2">
      <summary>
            增删查改使用的后台控制器的基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.Group">
      <summary>
            分组名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.GroupIconClass">
      <summary>
            分组图标的css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.TileClass">
      <summary>
            格子的css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.IconClass">
      <summary>
            图标的css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.RequiredUserType">
      <summary>
            默认需要管理员权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.RequiredPrivileges">
      <summary>
            默认需要查看权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.ListTemplatePath">
      <summary>
            列表页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.AddTemplatePath">
      <summary>
            添加页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.EditTemplatePath">
      <summary>
            编辑页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.ConcernEntityOwnership">
      <summary>
            管理员操作数据默认不考虑所属用户
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudAdminAppControllerBase`2.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2">
      <summary>
            用于增删查改数据的控制器的基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.Url">
      <summary>
            基础链接
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.SearchUrl">
      <summary>
            获取搜索结果的Url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.AddUrl">
      <summary>
            添加数据的Url
            返回空值时表示不支持添加数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.EditUrl">
      <summary>
            编辑数据的Url
            返回空值时表示不支持编辑数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.BatchUrl">
      <summary>
            批量操作的Url
            返回空值时表示不支持批量操作数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.RequiredUserType">
      <summary>
            增删查改操作需要的用户类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.ViewPrivileges">
      <summary>
            查看需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.EditPrivileges">
      <summary>
            编辑需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.DeletePrivileges">
      <summary>
            删除需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.DeleteForeverPrivileges">
      <summary>
            永久删除需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.AllowDeleteRecover">
      <summary>
            是否允许标记已删除或未删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.AllowDeleteForever">
      <summary>
            是否允许永久删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.EntityType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.EntityTypeName">
      <summary>
            数据类型的名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.ListTableId">
      <summary>
            列表页中使用的表格Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.ListTemplatePath">
      <summary>
            列表页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.AddTemplatePath">
      <summary>
            添加页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.EditTemplatePath">
      <summary>
            编辑页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.IncludeCss">
      <summary>
            传给模板页的引用的样式文件列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.IncludeJs">
      <summary>
            传给模板页的引用的脚本文件列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.ExtraTemplateArguments">
      <summary>
            传给模板页的附加数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.BatchActions">
      <summary>
            批量操作对应的函数和权限列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.UseTransaction">
      <summary>
            是否在增删查改操作中使用事务
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.UseIsolationLevel">
      <summary>
            使用事务时的隔离等级
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.ConcernEntityOwnership">
      <summary>
            是否关心实体的所属用户
            等于true时会启用所属用户使用的查询和保存过滤器，并且在批量操作时进行检查
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.GetTableHandler">
      <summary>
            获取表格处理器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.GetAddForm">
      <summary>
            获取添加数据使用的表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.GetEditForm">
      <summary>
            获取编辑数据使用的表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.Action">
      <summary>
            列表页的处理函数
            默认即使设置了UseTransaction也不启用事务
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.SearchAction">
      <summary>
            搜索请求的处理函数
            默认即使设置了UseTransaction也不启用事务
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.AddAction">
      <summary>
            添加页和添加请求的处理函数
            提交时额外需要编辑权限
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.EditAction">
      <summary>
            编辑页和编辑请求的处理函数
            提交时额外需要编辑权限
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.BatchAction">
      <summary>
            批量操作请求的处理函数
            具体权限在里面检查
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.GetBatchActionIds">
      <summary>
            获取批量操作的数据Id列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.BatchActionForDelete">
      <summary>
            批量删除
            在这里标记过滤器属性不会起作用
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.BatchActionForRecover">
      <summary>
            批量恢复
            在这里标记过滤器属性不会起作用
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.BatchActionForDeleteForever">
      <summary>
            批量永久删除
            在这里标记过滤器属性不会起作用
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.CrudControllerBase`2.GetPrivileges">
      <summary>
            获取权限列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.ScaffoldControllerBase">
      <summary>
            用于自动生成页面的控制器的基类
            Url和需要的权限可以从控制器的成员得到
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.ScaffoldControllerBase.RegisterScaffoldAction(ZKWeb.Web.ControllerManager,System.Func{ZKWeb.Web.IActionResult},System.Collections.Generic.IEnumerable{ZKWeb.Web.ActionFilterAttribute},System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionAttribute},System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes.ScaffoldActionFilterAttribute})">
      <summary>
            注册这个控制器中的Action函数
            </summary>
      <param name="controllerManager">控制器管理器</param>
      <param name="action">Action函数</param>
      <param name="actionFilterAttributes">Action过滤器属性</param>
      <param name="scaffoldActionAttributes">ScaffoldAction属性，Url由成员获取</param>
      <param name="scaffoldActionFilterAttributes">ScaffoldActionFilter属性，实际的过滤器根据成员生成</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.ScaffoldControllerBase.OnWebsiteStart">
      <summary>
            网站启动时注册这个类中带ScaffoldAction属性的函数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase">
      <summary>
            简单的后台控制器的基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.Group">
      <summary>
            分组名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.GroupIconClass">
      <summary>
            分组图标的css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.Name">
      <summary>
            应用名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.Url">
      <summary>
            url地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.TileClass">
      <summary>
            格式的css类名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.IconClass">
      <summary>
            图标的css类名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.RequiredUserType">
      <summary>
            显示此应用要求的用户类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.RequiredPrivileges">
      <summary>
            显示此应用要求的权限列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.Action">
      <summary>
            对应的处理函数，会自动进行权限检查
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases.SimpleAdminAppControllerBase.GetPrivileges">
      <summary>
            获取权限列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.Extensions.IAdminAppControllerExtensions">
      <summary>
            后台应用的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Extensions.IAdminAppControllerExtensions.ToTileHtml(ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController)">
      <summary>
            生成后台应用的格子的html
            </summary>
      <param name="app">后台应用</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.Extensions.IAdminAppControllerExtensions.IsAccessableFormUser(ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController,ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            判断后台应用是否可以被指定的用户查看
            </summary>
      <param name="app">后台应用</param>
      <param name="user">用户</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController">
      <summary>
            后台应用控制器的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.Group">
      <summary>
            分组名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.GroupIconClass">
      <summary>
            分组图标的css类
            分组下有多个应用时，只使用第一个图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.Name">
      <summary>
            应用名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.Url">
      <summary>
            url地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.TileClass">
      <summary>
            格子的css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.IconClass">
      <summary>
            图标的css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.RequiredUserType">
      <summary>
            显示此应用要求的用户类型
            例如typeof(IAmAdmin)
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.IAdminAppController.RequiredPrivileges">
      <summary>
            显示此应用要求的权限列表
            一般是查看权限
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController">
      <summary>
            用于增删查改的控制器接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.Url">
      <summary>
            基础链接
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.SearchUrl">
      <summary>
            获取搜索结果的Url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.AddUrl">
      <summary>
            添加数据的Url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.EditUrl">
      <summary>
            编辑数据的Url
            返回空值时表示不支持编辑数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.BatchUrl">
      <summary>
            批量操作的Url
            返回空值时表示不支持批量操作数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.RequiredUserType">
      <summary>
            增删查改操作需要的用户类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.ViewPrivileges">
      <summary>
            查看需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.EditPrivileges">
      <summary>
            编辑需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.DeletePrivileges">
      <summary>
            删除需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.DeleteForeverPrivileges">
      <summary>
            永久删除需要的权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.AllowDeleteRecover">
      <summary>
            是否允许标记已删除或未删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.AllowDeleteForever">
      <summary>
            是否允许永久删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.EntityType">
      <summary>
            实体类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.EntityTypeName">
      <summary>
            实体类型的名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.ListTableId">
      <summary>
            列表页中使用的表格Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.ListTemplatePath">
      <summary>
            列表页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.AddTemplatePath">
      <summary>
            添加页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces.ICrudController.EditTemplatePath">
      <summary>
            编辑页的模板路径
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserApiController">
      <summary>
            用户使用的Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserApiController.UserLoginInfo">
      <summary>
            获取当前登陆的用户信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserController">
      <summary>
            用户控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserController.Reg">
      <summary>
            注册用户
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserController.Login">
      <summary>
            登陆用户
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserController.Logout">
      <summary>
            退出登录
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserController.Home">
      <summary>
            用户中心
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController">
      <summary>
            用户管理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和批量操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm">
      <summary>
            添加和编辑共用的基础表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm.Password">
      <summary>
            密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm.ConfirmPassword">
      <summary>
            确认密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm.Avatar">
      <summary>
            头像
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm.DeleteAvatar">
      <summary>
            删除头像
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm.OnSubmit(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm.OnSubmitSaved(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            保存头像
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.AddForm">
      <summary>
            添加表单，允许设置用户名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.AddForm.OnBind(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.AddForm.OnSubmit(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.EditForm">
      <summary>
            编辑表单，用户名只读
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.EditForm.OnBind(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController">
      <summary>
            角色管理
            要求超级管理员
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和批量操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.Form">
      <summary>
            添加和编辑表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.Form.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.Form.Privileges">
      <summary>
            权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.Form.OnBind(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Controllers.UserRoleCrudController.Form.OnSubmit(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IAmAdmin">
      <summary>
            标记用户类型是管理员
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IAmAnonymouseUser">
      <summary>
            标记用户是匿名用户
            这个应该用于表示用户未登录，不存在于数据库中
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IAmCooperationPartner">
      <summary>
            标记用户类型是合作伙伴
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IAmSuperAdmin">
      <summary>
            标记用户类型是超级管理员
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IAmUser">
      <summary>
            标记用户类型是用户
            除了匿名用户之外其他用户类型都应该继承这个接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.ICanUseAdminPanel">
      <summary>
            标记用户类型可以使用管理后台
            默认管理员和合作伙伴可以使用管理后台
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IHaveOwner">
      <summary>
            包含所属的用户
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IHaveOwner.Owner">
      <summary>
            所属的用户
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IUserType">
      <summary>
            用户类型的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces.IUserType.Type">
      <summary>
            类型
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.TypeTraits.OwnerTypeTrait`1">
      <summary>
            判断类型是否有所属的用户
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.TypeTraits.OwnerTypeTrait`1.HaveOwner">
      <summary>
            判断结果
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User">
      <summary>
            用户
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Id">
      <summary>
            用户Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Type">
      <summary>
            用户类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Username">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Password">
      <summary>
            密码信息，json
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Items">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Roles">
      <summary>
            关联的用户角色
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.ToString">
      <summary>
            显示用户名
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole">
      <summary>
            用户角色
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.Id">
      <summary>
            角色Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.Name">
      <summary>
            角色名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.Privileges">
      <summary>
            权限列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.ToString">
      <summary>
            显示角色名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserRole})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserTypes.AdminUserType">
      <summary>
            用户类型: 管理员
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserTypes.AnonymouseUserType">
      <summary>
            匿名用户
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserTypes.CooperationPartner">
      <summary>
            用户类型: 合作伙伴
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserTypes.NormalUserType">
      <summary>
            用户类型: 普通用户
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserTypes.SuperAdminUserType">
      <summary>
            用户类型: 超级管理员
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions.SessionExtensions">
      <summary>
            会话的扩展函数
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions.SessionExtensions.SessionUserKey">
      <summary>
            当前会话对应的用户
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions.SessionExtensions.GetUser(ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session)">
      <summary>
            获取会话对应的用户
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions.UserExtensions">
      <summary>
            用户的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions.UserExtensions.SetPassword(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User,System.String)">
      <summary>
            设置密码
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions.UserExtensions.CheckPassword(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User,System.String)">
      <summary>
            检查密码
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions.UserExtensions.GetUserType(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            获取用户类型对象
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter">
      <summary>
            根据数据所属用户过滤查询和操作
            这个过滤器默认不启用，有需要请手动启用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter.ExceptedOwnerId">
      <summary>
            数据应当属于的用户Id
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter.#ctor">
      <summary>
            初始化
            数据应当属于的用户Id默认等于当前登录用户Id
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter.#ctor(System.Guid)">
      <summary>
            初始化
            </summary>
      <param name="exceptedOwnerId">数据应当属于的用户Id</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityQueryFilter#FilterQuery``2(System.Linq.IQueryable{``0})">
      <summary>
            过滤查询
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityQueryFilter#FilterPredicate``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
            过滤查询条件
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterSave``2(``0)">
      <summary>
            保存时检查所属用户
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Filters.OwnerFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterDelete``2(``0)">
      <summary>
            删除时检查所属用户
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Repositories.UserRepository">
      <summary>
            用户的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Repositories.UserRoleRepository">
      <summary>
            用户角色的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Services.AdminManager">
      <summary>
            管理员管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.AdminManager.HaveNoAdmin">
      <summary>
            判断系统是否没有管理员
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.AdminManager.Login(System.String,System.String,System.Boolean)">
      <summary>
            登陆管理员
            登陆失败时会抛出例外
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.AdminManager.GetLoginWarning">
      <summary>
            获取登录管理员时的警告信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.AdminManager.GetUrlRedirectAfterLogin">
      <summary>
            获取登录后应该跳转到的url
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager">
      <summary>
            Logo管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.FrontPageLogoPath">
      <summary>
            前台Logo的路径
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.AdminPanelLogoPath">
      <summary>
            后台Logo的路径
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.FaviconPath">
      <summary>
            页面图标
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.LogoImageQuality">
      <summary>
            Logo图片质量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.SaveFrontPageLogo(System.IO.Stream)">
      <summary>
            保存前台Logo
            </summary>
      <param name="stream">图片的数据流</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.SaveAdminPanelLogo(System.IO.Stream)">
      <summary>
            保存后台Logo
            </summary>
      <param name="stream">图片的数据流</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.SaveFavicon(System.IO.Stream)">
      <summary>
            保存页面图标
            </summary>
      <param name="stream">图片的数据流</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.RestoreDefaultFrontPageLogo">
      <summary>
            恢复默认的前台Logo
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.RestoreDefaultAdminPageLogo">
      <summary>
            恢复默认的后台Logo
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.LogoManager.RestoreDefaultFavicon">
      <summary>
            恢复默认的页面图标
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Services.PrivilegeManager">
      <summary>
            权限管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.PrivilegeManager.GetPrivileges">
      <summary>
            获取网站中注册的所有权限，并且去除重复项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.PrivilegeManager.Check(System.Type,System.String[])">
      <summary>
            检查当前的用户类型是否继承了指定的类型，且是否拥有指定的权限
            如果用户类型不匹配且当前请求是get则跳转到登陆页面，否则抛出403错误
            </summary>
      <param name="userType">用户类型，例如typeof(IAmAdmin)</param>
      <param name="privileges">要求的权限列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.PrivilegeManager.HasUserType(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User,System.Type)">
      <summary>
            判断用户是否拥有指定的用户类型
            </summary>
      <param name="user">用户</param>
      <param name="userType">用户类型的接口或基础类</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.PrivilegeManager.HasPrivileges(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User,System.String[])">
      <summary>
            判断用户是否拥有指定的权限
            </summary>
      <param name="user">用户</param>
      <param name="privileges">权限列表</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager">
      <summary>
            用户管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.SessionExpireDaysWithRememebrLogin">
      <summary>
            记住登陆时，保留会话的天数
            默认30天，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.SessionExpireDaysWithoutRememberLogin">
      <summary>
            不记住登陆时，保留会话的天数
            默认1天，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.AvatarWidth">
      <summary>
            头像宽度
            默认150，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.AvatarHeight">
      <summary>
            头像高度
            默认150，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.AvatarImageQuality">
      <summary>
            头像图片质量，默认90
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.Reg(System.String,System.String,System.Action{ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User})">
      <summary>
            注册用户
            注册失败时会抛出例外
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.FindUser(System.String)">
      <summary>
            根据用户名查找用户
            找不到时返回null
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.Login(System.String,System.String,System.Boolean)">
      <summary>
            登陆用户
            登陆失败时会抛出例外
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.LoginWithUser(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User,System.Boolean)">
      <summary>
            以指定用户登录
            跳过密码等检查
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.Logout">
      <summary>
            退出登录
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.GetUrlRedirectAfterLogin">
      <summary>
            获取登录后应该跳转到的url
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.GetAvatarWebPath(System.Guid)">
      <summary>
            获取用户头像的网页图片路径，不存在时返回默认图片路径
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.GetAvatarStorageFile(System.Guid)">
      <summary>
            获取用户头像的储存路径，文件不一定存在
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.SaveAvatar(System.Guid,System.IO.Stream)">
      <summary>
            保存头像，返回是否成功和错误信息
            </summary>
      <param name="userId">用户Id</param>
      <param name="imageStream">图片数据流</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.DeleteAvatar(System.Guid)">
      <summary>
            删除头像
            </summary>
      <param name="userId">用户Id</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserManager.ChangePassword(System.Guid,System.String,System.String)">
      <summary>
            修改密码
            </summary>
      <param name="userId">用户Id</param>
      <param name="oldPassword">原密码</param>
      <param name="newPassword">新密码</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Services.UserRoleManager">
      <summary>
            角色管理器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Domain.Structs.UserItems">
      <summary>
            用户的附加数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions">
      <summary>
            Ajax表格操作列的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddEditAction(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加查看按钮
            点击后弹出编辑数据的模态框
            </summary>
      <param name="column">操作列</param>
      <param name="typeName">类型名称</param>
      <param name="editUrl">编辑使用的Url</param>
      <param name="name">名称，不指定时使用默认值</param>
      <param name="buttonClass">按钮的Css类，不指定时使用默认值</param>
      <param name="iconClass">图标的Css类，不指定时使用默认值</param>
      <param name="titleTemplate">标题的模板，格式是underscore.js的格式，参数传入row</param>
      <param name="urlTemplate">编辑Url的模板，格式是underscore.js的格式，参数传入row</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddEditActionFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加查看按钮
            点击后弹出编辑数据的模态框
            根据增删查改的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddDeleteAction(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加删除按钮
            点击后弹出确认框，确认后把json=[数据Id]提交到删除url
            </summary>
      <param name="column">操作列</param>
      <param name="typeName">类型名称</param>
      <param name="deleteUrl">删除使用的Url</param>
      <param name="name">名称，不指定时使用默认值</param>
      <param name="buttonClass">按钮的Css类，不指定时使用默认值</param>
      <param name="iconClass">图标的Css类，不指定时使用默认值</param>
      <param name="titleTemplate">标题的模板，格式是underscore.js的格式，参数传入rows</param>
      <param name="urlTemplate">编辑Url的模板，格式是underscore.js的格式，参数传入rows</param>
      <param name="primaryKey">数据Id保存的名称，不指定时使用默认值</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddDeleteActionFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加删除按钮
            根据增删查改的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddRecoverAction(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加恢复按钮
            点击后弹出确认框，确认后把json=[数据Id]提交到恢复url
            </summary>
      <param name="column">操作列</param>
      <param name="typeName">类型名称</param>
      <param name="recoverUrl">恢复使用的Url</param>
      <param name="name">名称，不指定时使用默认值</param>
      <param name="buttonClass">按钮的Css类，不指定时使用默认值</param>
      <param name="iconClass">图标的Css类，不指定时使用默认值</param>
      <param name="titleTemplate">标题的模板，格式是underscore.js的格式，参数传入rows</param>
      <param name="urlTemplate">编辑Url的模板，格式是underscore.js的格式，参数传入rows</param>
      <param name="primaryKey">数据Id保存的名称，不指定时使用默认值</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddRecoverActionFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加恢复按钮
            根据增删查改的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddDeleteForeverAction(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加永久删除按钮
            点击后弹出确认框，确认后把json=[数据Id]提交到永久删除url
            </summary>
      <param name="column">操作列</param>
      <param name="typeName">类型名称</param>
      <param name="deleteForeverUrl">永久删除使用的Url</param>
      <param name="name">名称，不指定时使用默认值</param>
      <param name="buttonClass">按钮的Css类，不指定时使用默认值</param>
      <param name="iconClass">图标的Css类，不指定时使用默认值</param>
      <param name="titleTemplate">标题的模板，格式是underscore.js的格式，参数传入rows</param>
      <param name="urlTemplate">编辑Url的模板，格式是underscore.js的格式，参数传入rows</param>
      <param name="primaryKey">数据Id保存的名称，不指定时使用默认值</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddDeleteForeverActionFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加永久删除按钮
            根据增删查改的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.StandardSetupFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest)">
      <summary>
            对增删查改页面使用的Ajax表格操作列进行标准的设置
            添加以下按钮
            - 查看（如果编辑Url不是空，且数据未删除）
            - 删除（如果批量Url不是空，且数据未删除）
            - 恢复（如果批量Url不是空，且数据已删除）
            - 永久删除（如果批量Url不是空，且数据已删除）
            </summary>
      <typeparam name="TCrudController">控制器的类型</typeparam>
      <param name="column">操作列</param>
      <param name="request">搜索请求</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableBuilderExtensions">
      <summary>
            Ajax表格构建器的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableBuilderExtensions.StandardSetupFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder)">
      <summary>
            对增删查改页面使用的表格构建器进行标准的设置
            添加以下菜单项
            - 编辑菜单（如果编辑Url不是空）
            - 添加菜单（如果添加Url不是空）
            </summary>
      <typeparam name="TCrudController">构建器的类型</typeparam>
      <param name="table">Ajax表格</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions">
      <summary>
            Ajax表格列的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddEditColumn(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.String)">
      <summary>
            添加用于编辑数据的列
            点击后弹出编辑数据的模态框
            </summary>
      <param name="columns">列列表</param>
      <param name="nameMember">名称成员</param>
      <param name="idMember">Id成员</param>
      <param name="typeName">类型名称</param>
      <param name="editUrl">编辑使用的Url</param>
      <param name="titleTemplate">标题的模板，格式是underscore.js的格式，参数传入row</param>
      <param name="urlTemplate">编辑Url的模板，格式是underscore.js的格式，参数传入row</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
      <param name="width">宽度</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddEditColumnFor``1(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String,System.String,System.String,System.Object,System.String)">
      <summary>
            添加用于编辑数据的列
            点击后弹出编辑数据的模态框
            根据增删查改页面的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器的类型</typeparam>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions">
      <summary>
            Ajax表格Id列的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions.AddDeleteActions(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Type,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>
            添加删除相关的按钮
            如果数据类型可以回收，则添加批量删除或批量恢复和永久删除
            如果数据类型不可以回收，则添加批量永久删除
            </summary>
      <param name="column">Id列</param>
      <param name="request">搜索请求</param>
      <param name="dataType">数据类型</param>
      <param name="typeName">类型名称</param>
      <param name="batchUrl">批量操作使用的Url</param>
      <param name="primaryKey">主键名称，不传入时使用默认</param>
      <param name="allowDeleteRecover">是否允许删除恢复，不传入时使用默认</param>
      <param name="allowDeleteForever">是否允许永久删除，不传入时使用默认</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions.AddDeleteActionsFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest)">
      <summary>
            添加删除相关的按钮
            如果数据类型可以回收，则添加批量删除或批量恢复和永久删除
            如果数据类型不可以回收，则添加批量永久删除
            根据增删查改页面的控制器自动生成
            </summary>
      <typeparam name="TCrudController">控制器的类型</typeparam>
      <param name="column">Id列</param>
      <param name="request">搜索请求</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions.StandardSetupFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest)">
      <summary>
            对增删查改页面使用的Ajax表格Id列进行标准的设置
            添加以下菜单项
            - 删除菜单（如果批量操作Url不是空）
            </summary>
      <typeparam name="TCrudController">后台应用类型</typeparam>
      <param name="column">Id列</param>
      <param name="request">搜索请求</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableSearchBarBuilderExtensions">
      <summary>
            Ajax表格搜索栏构建器的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions.AjaxTableSearchBarBuilderExtensions.StandardSetupFor``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder,System.String)">
      <summary>
            对增删查改页面使用的搜索栏构建器进行标准的设置
            添加以下菜单项
            - 回收站（如果数据支持回收）
            - 添加菜单（如果添加Url不是空）
            添加以下按钮
            - 添加按钮（如果添加Url不是空）
            </summary>
      <typeparam name="TCrudController">控制器的类型</typeparam>
      <param name="searchBar">搜索栏构建器</param>
      <param name="keywordPlaceHolder">关键词的预留文本，传入后会自动翻译，可传入原文</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm">
      <summary>
            后台"关于我"的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.Username">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.Roles">
      <summary>
            角色
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.SuperAdmin">
      <summary>
            超级管理员
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.Privileges">
      <summary>
            权限
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.OldPassword">
      <summary>
            原密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.Password">
      <summary>
            密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.ConfirmPassword">
      <summary>
            确认密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.Avatar">
      <summary>
            头像
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.DeleteAvatar">
      <summary>
            删除头像
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminAboutMeForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm">
      <summary>
            管理员登陆
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm.Username">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm.Password">
      <summary>
            密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm.Captcha">
      <summary>
            验证码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm.RememberLogin">
      <summary>
            记住登陆
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm.RedirectAfterLogin">
      <summary>
            登陆后跳转到的地址
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm.OnBind">
      <summary>
            绑定
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.AdminLoginForm.OnSubmit">
      <summary>
            提交
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm">
      <summary>
            用户登录
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm.Username">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm.Password">
      <summary>
            密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm.Captcha">
      <summary>
            验证码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm.RememberLogin">
      <summary>
            记住登陆
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm.RedirectAfterLogin">
      <summary>
            登陆后跳转到的地址
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm.OnBind">
      <summary>
            绑定
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserLoginForm.OnSubmit">
      <summary>
            登陆用户
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserRegForm">
      <summary>
            用户注册
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserRegForm.Username">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserRegForm.Password">
      <summary>
            密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserRegForm.ConfirmPassword">
      <summary>
            确认密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserRegForm.Captcha">
      <summary>
            验证码
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserRegForm.OnBind">
      <summary>
            绑定
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms.UserRegForm.OnSubmit">
      <summary>
            注册用户，成功后自动登陆
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions">
      <summary>
            Html项列表的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions.AddAddAction(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加添加按钮
            点击后弹出添加数据的模态框
            </summary>
      <param name="items">html项列表</param>
      <param name="typeName">类型名称</param>
      <param name="addUrl">添加使用的Url</param>
      <param name="name">显示名称，不指定时使用默认值</param>
      <param name="iconClass">图标的Css类，不指定时使用默认值</param>
      <param name="btnClass">按钮的Css类，不指定时使用默认值</param>
      <param name="title">标题，不指定时使用默认值</param>
      <param name="url">添加使用的Url，和addUrl是同一个参数</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions.AddAddActionFor``1(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem},System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加添加按钮
            点击后弹出添加数据的模态框
            根据增删查改页面的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器的类型</typeparam>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.ListItemProviders.PrivilegesListItemGroupsProvider">
      <summary>
            权限的选项分组列表提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.ListItemProviders.PrivilegesListItemGroupsProvider.GetGroups">
      <summary>
            获取分组列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Admin.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions">
      <summary>
            菜单项列表的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddRecycleBin(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String)">
      <summary>
            添加回收站选项
            </summary>
      <param name="items">菜单项列表</param>
      <param name="name">名称</param>
      <param name="iconClass">图标的Css类</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddEditAction(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加编辑项
            点击后弹出编辑右键选中数据的模态框
            </summary>
      <param name="items">菜单项列表</param>
      <param name="typeName">类型名称</param>
      <param name="editUrl">编辑使用的Url</param>
      <param name="name">显示名称，不指定时使用默认值</param>
      <param name="iconClass">图标的Css类，不指定时使用默认值</param>
      <param name="titleTemplate">标题的模板，格式是underscore.js的格式，参数传入row</param>
      <param name="urlTemplate">编辑Url的模板，格式是underscore.js的格式，参数传入row</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddEditActionFor``1(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加编辑项
            点击后弹出编辑右键选中数据的模态框
            根据增删查改页面的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器的类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddAddAction(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加添加项
            点击后弹出添加数据的模态框
            </summary>
      <param name="items">菜单项列表</param>
      <param name="typeName">类型名称</param>
      <param name="addUrl">添加使用的Url</param>
      <param name="name">显示名称，不指定时使用默认值</param>
      <param name="iconClass">图标的Css类，不指定时使用默认值</param>
      <param name="title">标题，不指定时使用默认值</param>
      <param name="url">添加使用的Url，和addUrl是同一个参数</param>
      <param name="dialogParameters">弹出框的参数，不指定时使用默认值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Admin.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddAddActionFor``1(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加添加项
            点击后弹出添加数据的模态框
            根据增删查改页面的控制器自动生成，各个参数如不指定则使用默认值
            </summary>
      <typeparam name="TCrudController">控制器的类型</typeparam>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.CacheIsolationPolicies.CacheIsolateByIdent">
      <summary>
            按当前登录用户隔离缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.CacheIsolationPolicies.CacheIsolateByIdent.GetIsolationKey">
      <summary>
            获取隔离键
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.CsrfTokenCookieStore">
      <summary>
            使用Cookie获取和保存CSRF校验值
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.CsrfTokenCookieStore.CsrfTokenCookieKey">
      <summary>
            储存CSRF校验到Cookie时使用的键
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.CsrfTokenCookieStore.GetCsrfToken">
      <summary>
            获取CSRF校验
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.CsrfTokenCookieStore.SetCsrfToken(System.String)">
      <summary>
            设置CSRF校验
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.CsrfTokenCookieStore.RemoveCsrfToken">
      <summary>
            删除CSRF校验
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.Interfaces.ICsrfTokenStore">
      <summary>
            CSRF校验的储存接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.Interfaces.ICsrfTokenStore.GetCsrfToken">
      <summary>
            获取CSRF校验
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.Interfaces.ICsrfTokenStore.SetCsrfToken(System.String)">
      <summary>
            设置CSRF校验
            </summary>
      <param name="token">CSRF校验</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.Interfaces.ICsrfTokenStore.RemoveCsrfToken">
      <summary>
            删除CSRF校验
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.DatabaseInitializeHandler.DatabaseInitializeHandler">
      <summary>
            添加表前缀
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Exceptions.BadRequestException">
      <summary>
            请求参数有误的错误
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.Exceptions.BadRequestException.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="message">错误消息</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Exceptions.ForbiddenException">
      <summary>
            无权访问的错误
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.Exceptions.ForbiddenException.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="message">错误消息</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Exceptions.NotFoundException">
      <summary>
            页面或资源无法找到的错误
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.Exceptions.NotFoundException.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="message">错误消息</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.Attributes.GenericConfigAttribute">
      <summary>
            通用配置的属性，用于指定所属插件和配置键名
            通过配置管理器管理的配置都应该添加这个属性
            这个属性不继承，可以使用新的继承类指定和原来的类不相同的插件和配置键
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.Attributes.GenericConfigAttribute.Key">
      <summary>
            配置键名
            格式应该使用"插件.配置键"
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.Attributes.GenericConfigAttribute.CacheTime">
      <summary>
            缓存时间（秒），默认是0
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.Attributes.GenericConfigAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="key">配置键名</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.LocaleSettings">
      <summary>
            语言时区设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.LocaleSettings.DefaultLanguage">
      <summary>
            默认语言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.LocaleSettings.DefaultTimezone">
      <summary>
            默认时区
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.LocaleSettings.AllowDetectLanguageFromBrowser">
      <summary>
            是否允许自动检测浏览器语言
            默认不允许
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.WebsiteSettings">
      <summary>
            网站设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.WebsiteSettings.WebsiteName">
      <summary>
            网站名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.WebsiteSettings.DocumentTitleFormat">
      <summary>
            网页标题的默认格式，默认是 {title} - {websiteName}
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.WebsiteSettings.PageKeywords">
      <summary>
            页面关键词
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.WebsiteSettings.PageDescription">
      <summary>
            页面描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.WebsiteSettings.CopyrightText">
      <summary>
            版权信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.WebsiteSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.HttpRequestHandlers.LocaleHandler">
      <summary>
            设置语言和时区
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.HttpRequestHandlers.LocaleHandler.OnRequest">
      <summary>
            处理请求
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.HttpRequestHandlers.StaticHandler">
      <summary>
            静态文件处理器
            路径规则
            /static/{路径}
            返回文件
            fileStorage.GetResourceFile("static", 路径);
            文件不存在时抛出404例外
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Components.HttpRequestHandlers.StaticHandler.Prefix">
      <summary>
            路径前缀
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.HttpRequestHandlers.StaticHandler.OnRequest">
      <summary>
            处理请求
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Arabic">
      <summary>
            阿拉伯语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Chinese">
      <summary>
            中文
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Czech">
      <summary>
            捷克语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.English">
      <summary>
            英语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.French">
      <summary>
            法语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.German">
      <summary>
            德语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Greek">
      <summary>
            希腊语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Italian">
      <summary>
            意大利语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Japanese">
      <summary>
            日语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Korean">
      <summary>
            韩语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Polish">
      <summary>
            波兰语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Russian">
      <summary>
            俄语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Spanish">
      <summary>
            西班牙语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.Thai">
      <summary>
            泰语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Languages.TraditionalChinese">
      <summary>
            繁体中文
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Mscorlib.Extensions.StringExtensions">
      <summary>
            字符串的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.Mscorlib.Extensions.StringExtensions.TruncateWithSuffix(System.String,System.Int32,System.String)">
      <summary>
            获取最大长度的字符串
            字符串长度超过最大长度时截取字符串并在后面添加后缀
            后缀suffix的默认值是"..."
            </summary>
      <param name="str">字符串</param>
      <param name="maxLength">最大长度</param>
      <param name="suffix">后缀，默认值是"..."</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Mscorlib.Utils.NetworkUtils">
      <summary>
            网络相关的工具类
            TODO: ZKWeb 1.7以后移除这里
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.Mscorlib.Utils.NetworkUtils.GetClientIpAddress">
      <summary>
            获取客户端的Ip地址
            Http请求存在时返回远程地址，不存在时返回本机地址
            如果本机在LAN中会返回LAN中的地址，不会返回公网IP
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.Interfaces.IScheduledTaskExecutor">
      <summary>
            定时任务执行器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.Interfaces.IScheduledTaskExecutor.Key">
      <summary>
            任务键名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.Interfaces.IScheduledTaskExecutor.ShouldExecuteNow(System.DateTime)">
      <summary>
            判断是否应该立刻执行任务
            </summary>
      <param name="lastExecuted">最后一次执行任务的时间，首次调用是DateTime.MinValue</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.Interfaces.IScheduledTaskExecutor.Execute">
      <summary>
            执行任务
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.LogCleaner">
      <summary>
            日志清理器
            每小时删除一次旧的日志
            日志保留时间
            	Debug 3天
            	Info 3天
            	Error 30天
            	Transaction 30天
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.LogCleaner.Key">
      <summary>
            任务键名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.LogCleaner.ShouldExecuteNow(System.DateTime)">
      <summary>
            每小时执行一次
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.LogCleaner.Execute">
      <summary>
            删除过期的日志
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.SessionCleaner">
      <summary>
            会话清理器
            每小时删除一次过期的会话
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.SessionCleaner.Key">
      <summary>
            任务键名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.SessionCleaner.ShouldExecuteNow(System.DateTime)">
      <summary>
            每小时执行一次
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.SessionCleaner.Execute">
      <summary>
            删除过期的会话
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.SessionIdStore.Interfaces.ISessionIdStore">
      <summary>
            会话Id的储存接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.SessionIdStore.Interfaces.ISessionIdStore.GetSessionId">
      <summary>
            获取会话Id
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.SessionIdStore.Interfaces.ISessionIdStore.SetSessionId(System.Guid,System.Nullable{System.DateTime})">
      <summary>
            设置会话Id
            </summary>
      <param name="id">会话Id</param>
      <param name="expires">过期时间</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.SessionIdStore.Interfaces.ISessionIdStore.RemoveSessionId">
      <summary>
            删除会话Id
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.SessionIdSources.SessionIdCookieStore">
      <summary>
            使用Cookie获取和保存会话Id
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Components.SessionIdSources.SessionIdCookieStore.SessionCookieKey">
      <summary>
            储存会话Id到Cookie时使用的键
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.SessionIdSources.SessionIdCookieStore.GetSessionId">
      <summary>
            获取会话Id
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.SessionIdSources.SessionIdCookieStore.SetSessionId(System.Guid,System.Nullable{System.DateTime})">
      <summary>
            设置会话Id
            </summary>
      <param name="sessionId">会话Id</param>
      <param name="expires">过期时间</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.SessionIdSources.SessionIdCookieStore.RemoveSessionId">
      <summary>
            删除会话Id
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Translates.en_US">
      <summary>
            英文翻译
            用于把"CamelCaseWord"转换为"Camel Case Word"
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Components.UrlFilters.Interfaces.IUrlFilter">
      <summary>
            全局Url过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Components.UrlFilters.Interfaces.IUrlFilter.Filter(System.String@)">
      <summary>
            过滤Url
            </summary>
      <param name="url">url</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Controllers.ActionResults.StaticTableExportResult">
      <summary>
            静态表格的导出结果
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Controllers.ActionResults.StaticTableExportResult.Table">
      <summary>
            静态表格
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Controllers.ActionResults.StaticTableExportResult.FilenameWithoutExtensions">
      <summary>
            不带后缀的文件名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.ActionResults.StaticTableExportResult.#ctor(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder,System.String)">
      <summary>
            初始化
            </summary>
      <param name="table">静态表格</param>
      <param name="filenameWithoutExtensions">不带后缀的文件名</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.ActionResults.StaticTableExportResult.WriteResponse(ZKWebStandard.Web.IHttpResponse)">
      <summary>
            写入到Http回应
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Controllers.BaseApiController">
      <summary>
            基础Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.BaseApiController.ExportAjaxTable">
      <summary>
            导出Ajax表格的数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Controllers.Bases.ControllerBase">
      <summary>
            控制器的基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Controllers.Bases.ControllerBase.Context">
      <summary>
            当前的Http上下文
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Controllers.Bases.ControllerBase.Request">
      <summary>
            当前的Http请求
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Controllers.Bases.ControllerBase.Response">
      <summary>
            当前的Http回应
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IControllerExtensions">
      <summary>
            控制器的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IControllerExtensions.RequireAjaxRequest(ZKWeb.Web.IController,System.String)">
      <summary>
            要求当前请求是ajax请求
            非ajax请求时抛出403错误，通常用于防止跨站攻击
            </summary>
      <param name="controller">控制器</param>
      <param name="errorMessage">错误信息，没有时使用默认信息</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IHttpContextExtensions">
      <summary>
            Http上下文的扩展函数
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IHttpContextExtensions.IsEditingPageKey">
      <summary>
            储存是否正在编辑页面使用的键
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IHttpContextExtensions.SetIsEditingPage(ZKWebStandard.Web.IHttpContext,System.Boolean)">
      <summary>
            设置是否正在编辑页面
            如果正在编辑页面可以做出一些特殊的处理，例如不跳转
            </summary>
      <param name="context">Http上下文</param>
      <param name="value">是否正在编辑页面</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IHttpContextExtensions.GetIsEditingPage(ZKWebStandard.Web.IHttpContext)">
      <summary>
            获取是否正在编辑页面
            如果正在编辑页面可以做出一些特殊的处理，例如不跳转
            </summary>
      <param name="context">Http上下文</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IHttpContextExtensions.IncludeCssLater(ZKWebStandard.Web.IHttpContext,System.String)">
      <summary>
            延迟引用css文件
            仅在控制器返回模板结果并且使用了render_included_css标签时有效
            </summary>
      <param name="context">Http上下文</param>
      <param name="path">css文件路径</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions.IHttpContextExtensions.IncludeJsLater(ZKWebStandard.Web.IHttpContext,System.String)">
      <summary>
            延迟引用js文件
            仅在控制器返回模板结果并且使用了render_included_js标签时有效
            </summary>
      <param name="context">Http上下文</param>
      <param name="path">js文件路径</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Controllers.IndexController">
      <summary>
            首页控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Controllers.IndexController.Index">
      <summary>
            首页
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Extensions.SessionExtensions">
      <summary>
            会话的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Extensions.SessionExtensions.ReGenerateId(ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session)">
      <summary>
            重新生成Id
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Extensions.SessionExtensions.SetExpiresAtLeast(ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session,System.TimeSpan)">
      <summary>
            设置会话最少在指定的时间后过期
            当前会话的过期时间比指定的时间要晚时不更新当前的过期时间
            </summary>
      <param name="session">会话</param>
      <param name="span">最少在这个时间后过期</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.GenericConfig">
      <summary>
            通用配置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.GenericConfig.Id">
      <summary>
            主键，配置名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.GenericConfig.Value">
      <summary>
            配置值（json）
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.GenericConfig.CreateTime">
      <summary>
            创建时间
            20170225: 之前忘记添加这个字段，会导致旧记录显示创建时间是初始值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.GenericConfig.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Entities.GenericConfig.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.Base.src.Domain.Entities.GenericConfig})">
      <summary>
            配置的数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Interfaces.IHaveCreateTime">
      <summary>
            包含创建时间的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Interfaces.IHaveCreateTime.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Interfaces.IHaveDeleted">
      <summary>
            包含标记删除的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Interfaces.IHaveDeleted.Deleted">
      <summary>
            标记已删除
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Interfaces.IHaveUpdateTime">
      <summary>
            包含更新时间的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Interfaces.IHaveUpdateTime.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.ScheduledTask">
      <summary>
            定时任务
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.ScheduledTask.Id">
      <summary>
            主键，任务键名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.ScheduledTask.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.ScheduledTask.UpdateTime">
      <summary>
            最后一次执行的时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Entities.ScheduledTask.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.Base.src.Domain.Entities.ScheduledTask})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session">
      <summary>
            会话
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.Id">
      <summary>
            会话Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.ReleatedId">
      <summary>
            关联Id
            一般是用户Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.Items">
      <summary>
            会话数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.IpAddress">
      <summary>
            会话对应的Ip地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.RememberLogin">
      <summary>
            是否记住登录
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.Expires">
      <summary>
            过期时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.ExpiresUpdated">
      <summary>
            过期时间是否已更新
            这个值只用于检测是否应该把新的过期时间发送到客户端
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.TypeTraits.CreateTimeTypeTrait`1">
      <summary>
            判断类型是否包含创建时间
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Domain.Entities.TypeTraits.CreateTimeTypeTrait`1.HaveCreateTime">
      <summary>
            判断结果
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.TypeTraits.DeletedTypeTrait`1">
      <summary>
            判断类型是否包含删除标记
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Domain.Entities.TypeTraits.DeletedTypeTrait`1.HaveDeleted">
      <summary>
            判断结果
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Entities.TypeTraits.UpdateTimeTypeTrait`1">
      <summary>
            判断类型是否有更新时间
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Domain.Entities.TypeTraits.UpdateTimeTypeTrait`1.HaveUpdateTime">
      <summary>
            判断结果
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Filters.CreateTimeFilter">
      <summary>
            自动设置实体的创建时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.CreateTimeFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterSave``2(``0)">
      <summary>
            自动设置实体的创建时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.CreateTimeFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterDelete``2(``0)">
      <summary>
            不需要处理删除
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Filters.DeletedFilter">
      <summary>
            根据删除状态过滤查询
            字段没有删除状态时返回原查询
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Filters.DeletedFilter.Deleted">
      <summary>
            true: 查询已删除的对象
            false: 查询未删除的对象
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.DeletedFilter.#ctor">
      <summary>
            初始化
            默认查询未删除的对象
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.DeletedFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityQueryFilter#FilterQuery``2(System.Linq.IQueryable{``0})">
      <summary>
            过滤查询
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.DeletedFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityQueryFilter#FilterPredicate``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
            过滤查询条件
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Filters.GuidEntityFilter">
      <summary>
            自动设置Guid主键值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.GuidEntityFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterSave``2(``0)">
      <summary>
            自动设置Guid主键值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.GuidEntityFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterDelete``2(``0)">
      <summary>
            不需要处理删除
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityOperationFilter">
      <summary>
            操作过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityOperationFilter.FilterSave``2(``0)">
      <summary>
            过滤保存
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="entity">实体对象</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityOperationFilter.FilterDelete``2(``0)">
      <summary>
            过滤删除
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="entity">实体对象</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityQueryFilter">
      <summary>
            查询过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityQueryFilter.FilterQuery``2(System.Linq.IQueryable{``0})">
      <summary>
            过滤查询
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="query">查询对象</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityQueryFilter.FilterPredicate``2(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
            过滤查询条件
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="predicate">查询条件</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Filters.UpdateTimeFilter">
      <summary>
            自动设置实体的更新时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.UpdateTimeFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterSave``2(``0)">
      <summary>
            自动设置实体的更新时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Filters.UpdateTimeFilter.ZKWeb#Plugins#Common#Base#src#Domain#Filters#Interfaces#IEntityOperationFilter#FilterDelete``2(``0)">
      <summary>
            不需要处理删除
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2">
      <summary>
            仓储的基础类
            提供一系列基础操作
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.UnitOfWork">
      <summary>
            获取工作单元
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.Query">
      <summary>
            查询实体
            受这些过滤器的影响: 查询过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            获取符合条件的单个实体
            受这些过滤器的影响: 查询过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            计算符合条件的实体数量
            受这些过滤器的影响: 查询过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.Save(`0@,System.Action{`0})">
      <summary>
            添加或更新实体
            受这些过滤器的影响: 操作过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.Delete(`0)">
      <summary>
            删除实体
            受这些过滤器的影响: 操作过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.BatchSave(System.Collections.Generic.IEnumerable{`0}@,System.Action{`0})">
      <summary>
            批量保存实体
            受这些过滤器的影响: 操作过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.BatchUpdate(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Action{`0})">
      <summary>
            批量更新实体
            受这些过滤器的影响: 查询过滤器, 操作过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases.RepositoryBase`2.BatchDelete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Action{`0})">
      <summary>
            批量删除实体
            受这些过滤器的影响: 查询过滤器, 操作过滤器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.GenericConfigRepository">
      <summary>
            通用配置的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2">
      <summary>
            仓储的接口
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.Query">
      <summary>
            查询实体
            受这些过滤器的影响: 查询过滤器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            获取符合条件的单个实体
            受这些过滤器的影响: 查询过滤器
            </summary>
      <param name="predicate">条件</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            计算符合条件的实体数量
            受这些过滤器的影响: 查询过滤器
            </summary>
      <param name="predicate">条件</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.Save(`0@,System.Action{`0})">
      <summary>
            添加或更新实体
            受这些过滤器的影响: 操作过滤器
            </summary>
      <param name="entity">实体</param>
      <param name="update">更新函数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.Delete(`0)">
      <summary>
            删除实体
            受这些过滤器的影响: 操作过滤器
            </summary>
      <param name="entity">实体</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.BatchSave(System.Collections.Generic.IEnumerable{`0}@,System.Action{`0})">
      <summary>
            批量保存实体
            受这些过滤器的影响: 操作过滤器
            </summary>
      <param name="entities">实体列表</param>
      <param name="update">更新函数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.BatchUpdate(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Action{`0})">
      <summary>
            批量更新实体
            受这些过滤器的影响: 查询过滤器, 操作过滤器
            </summary>
      <param name="predicate">更新条件</param>
      <param name="update">更新函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces.IRepository`2.BatchDelete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Action{`0})">
      <summary>
            批量删除实体
            受这些过滤器的影响: 查询过滤器, 操作过滤器
            </summary>
      <param name="predicate">删除条件</param>
      <param name="beforeDelete">删除前的函数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.ScheduledTaskRepository">
      <summary>
            定时任务的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.SessionRepository">
      <summary>
            会话的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase">
      <summary>
            领域服务的基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase.UnitOfWork">
      <summary>
            获取工作单元
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2">
      <summary>
            领域服务的基础类
            提供一系列基础功能
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.Repository">
      <summary>
            获取仓储
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.Get(`1)">
      <summary>
            根据主键获取实体
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            根据条件获取实体
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.GetMany(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            根据条件获取实体列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.GetMany``1(System.Func{System.Linq.IQueryable{`0},``0})">
      <summary>
            根据过滤函数获取实体列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            计算符合条件的实体数量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.Save(`0@,System.Action{`0})">
      <summary>
            保存实体
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.Delete(`1)">
      <summary>
            根据主键删除实体
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.Delete(`0)">
      <summary>
            删除实体
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.BatchSetDeleted(System.Collections.Generic.IEnumerable{`1},System.Boolean)">
      <summary>
            批量标记已删除或未删除
            返回标记的数量，不会实际删除
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases.DomainServiceBase`2.BatchDeleteForever(System.Collections.Generic.IEnumerable{`1})">
      <summary>
            批量永久删除
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager">
      <summary>
            通用配置管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.AttributeCache">
      <summary>
            配置属性的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.ConfigValueCache">
      <summary>
            配置值的缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.GetConfigAttribute``1">
      <summary>
            获取类型标记的配置属性
            </summary>
      <typeparam name="T">类型</typeparam>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.PutData``1(``0)">
      <summary>
            储存配置值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.GetData``1">
      <summary>
            获取配置值，没有找到时返回新的值
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.RemoveData``1">
      <summary>
            删除配置值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.GenericConfigManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService">
      <summary>
            领域服务的接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2">
      <summary>
            领域服务的接口
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.Get(`1)">
      <summary>
            根据主键获取实体
            </summary>
      <param name="id">主键值</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            根据条件获取实体
            </summary>
      <param name="predicate">条件</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.GetMany(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            根据条件获取实体列表
            </summary>
      <param name="predicate">条件，等于null时获取所有实体</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.GetMany``1(System.Func{System.Linq.IQueryable{`0},``0})">
      <summary>
            根据查询函数获取实体列表
            </summary>
      <param name="fetch">查询函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
      <summary>
            计算符合条件的实体数量
            </summary>
      <param name="predicate">条件</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.Save(`0@,System.Action{`0})">
      <summary>
            保存实体
            </summary>
      <param name="entity">实体</param>
      <param name="update">更新函数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.Delete(`1)">
      <summary>
            根据主键删除实体
            返回是否找到并删除了实体
            </summary>
      <param name="id">主键值</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.Delete(`0)">
      <summary>
            删除实体
            </summary>
      <param name="entity">实体</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.BatchSetDeleted(System.Collections.Generic.IEnumerable{`1},System.Boolean)">
      <summary>
            批量标记已删除或未删除
            返回标记的数量，不会实际删除
            </summary>
      <param name="ids">实体Id列表</param>
      <param name="deleted">是否已删除</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces.IDomainService`2.BatchDeleteForever(System.Collections.Generic.IEnumerable{`1})">
      <summary>
            批量永久删除
            返回实际删除的数量
            </summary>
      <param name="ids">批量永久删除</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Services.ScheduledTaskManager">
      <summary>
            定时任务管理器
            流程
            收集所有IScheduledTaskExecutor
            每分钟
            - 获取数据库中的最后执行时间
            - 调用ShouldExecuteNow函数
            - 以事务更新数据库中的最后执行时间
            - 更新成功时调用Execute
            - Execute抛出例外时记录到日志
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Domain.Services.ScheduledTaskManager.Executors">
      <summary>
            定时任务执行器的列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.ScheduledTaskManager.#ctor">
      <summary>
            创建执行定时任务的线程
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.ScheduledTaskManager.HandleTask(ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.Interfaces.IScheduledTaskExecutor)">
      <summary>
            处理单个定时任务
            </summary>
      <param name="executor">定时任务执行器</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Services.SessionManager">
      <summary>
            会话管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.Domain.Services.SessionManager.SessionContextKey">
      <summary>
            用于在当前Http请求保存会话
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.SessionManager.GetSession">
      <summary>
            获取当前Http请求对应的会话
            当前没有会话时返回新的会话
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.SessionManager.SaveSession">
      <summary>
            添加或更新当前的会话
            必要时发送会话Id到客户端
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.SessionManager.RemoveSession(System.Boolean)">
      <summary>
            删除当前会话
            </summary>
      <param name="removeClient">是否同时删除客户端中的会话Id</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Services.SessionManager.RemoveExpiredSessions">
      <summary>
            删除所有已过期的会话
            返回删除的会话数量
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Structs.SessionItems">
      <summary>
            会话数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions">
      <summary>
            工作单元的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.WrapUpdateMethod``2(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,System.Action{``0})">
      <summary>
            包装更新函数
            应用工作单元中的过滤器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="uow">工作单元</param>
      <param name="update">更新函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.WrapBeforeDeleteMethod``2(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,System.Action{``0})">
      <summary>
            包装删除前的函数
            应用工作单元中的过滤器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="uow">工作单元</param>
      <param name="beforeDelete">删除前的函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.WrapQuery``2(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,System.Linq.IQueryable{``0})">
      <summary>
            包装查询
            应用工作单元中的过滤器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="uow">工作单元</param>
      <param name="query">查询</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.WrapPredicate``2(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>
            包装查询条件
            应用工作单元中的过滤器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="uow">工作单元</param>
      <param name="predicate">查询条件</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.DisableQueryFilter(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,System.Type)">
      <summary>
            在一定范围内禁用指定类型的查询过滤器
            </summary>
      <param name="uow">工作单元</param>
      <param name="filterType">查询过滤器类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.DisableAllQueryFilters(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork)">
      <summary>
            在一定范围内禁用所有查询过滤器
            </summary>
      <param name="uow">工作单元</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.DisableOperationFilter(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,System.Type)">
      <summary>
            在一定范围内禁用指定类型的操作过滤器
            </summary>
      <param name="uow">工作单元</param>
      <param name="filterType">过滤器类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.DisableAllOperationFilters(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork)">
      <summary>
            在一定范围内禁用所有操作过滤器
            </summary>
      <param name="uow">工作单元</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.EnableQueryFilter(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityQueryFilter)">
      <summary>
            在一定范围内启用指定的查询过滤器
            </summary>
      <param name="uow">工作单元</param>
      <param name="filter">查询过滤器</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions.IUnitOfWorkExtensions.EnableOperationFilter(ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork,ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces.IEntityOperationFilter)">
      <summary>
            在一定范围内启用指定的操作过滤器
            </summary>
      <param name="uow">工作单元</param>
      <param name="filter">操作过滤器</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork">
      <summary>
            工作单元的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork.Context">
      <summary>
            当前的数据库上下文
            不存在时抛出错误
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork.QueryFilters">
      <summary>
            当前的查询过滤器列表
            不存在时抛出错误
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork.OperationFilters">
      <summary>
            当前的操作过滤器列表
            不存在时抛出错误
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces.IUnitOfWork.Scope">
      <summary>
            在指定的范围内使用工作单元
            工作单元中可以使用相同的上下文和过滤器，并且和其他工作单元隔离
            这个函数可以嵌套使用，嵌套使用时都使用最上层的数据库上下文
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork">
      <summary>
            工作单元
            工作单元用于在一个区域中共享数据库上下文和事务
            工作单元支持过滤器，这是对框架中的数据事件的补充，但不同的是
            - 工作单元过滤器用于处理拥有某一特征(例如有创建时间)的所有实体，可以在一定的范围内启用和禁用
            - 数据事件用于处理某一类型的实体，全局一直有效且不能禁用
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.ScopeData">
      <summary>
            同一个工作单元区域使用的数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.ScopeData.Context">
      <summary>
            数据库上下文
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.ScopeData.QueryFilters">
      <summary>
            默认的查询过滤器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.ScopeData.OperationFilters">
      <summary>
            默认的操作过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.ScopeData.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.ScopeData.Finalize">
      <summary>
            释放数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.ScopeData.Dispose">
      <summary>
            释放数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.Data">
      <summary>
            同一个工作单元区域使用的数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.Context">
      <summary>
            当前的数据库上下文
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.QueryFilters">
      <summary>
            当前的查询过滤器列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.OperationFilters">
      <summary>
            当前的保存过滤器列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Domain.Uow.UnitOfWork.Scope">
      <summary>
            在指定的范围内使用工作单元
            最外层的工作单元负责创建和销毁数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder">
      <summary>
            Ajax表格构建器
            这个类可以通过Ioc替换，使用时注意要通过Ioc获取
            </summary>
      <example>
            var table = Application.Ioc.Resolve[AjaxTableBuilder]();
            table.Id = "TestList";
            table.Target = "/test/search";
            return new TemplateResult("test_table.html", new { table });
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.MenuIdSuffix">
      <summary>
            表格菜单Id的后缀，表格菜单Id = 表格Id + 后缀
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.Id">
      <summary>
            表格Id，必填
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.Target">
      <summary>
            获取表格数据的url，必填
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.Template">
      <summary>
            使用的模板，不设置时使用默认
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.MenuItems">
      <summary>
            右键菜单项列表，默认包含刷新和全屏
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.ExtraOptions">
      <summary>
            附加选项
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许直接描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder.ToString">
      <summary>
            获取表格html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn">
      <summary>
            表格列信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn.Key">
      <summary>
            列的识别键
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn.Width">
      <summary>
            宽度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn.HeadTemplate">
      <summary>
            生成头部Html的模板代码
            格式是underscore.js的默认格式
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn.CellTemplate">
      <summary>
            生成单元格Html的模板代码
            格式是underscore.js的默认格式
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn.CssClass">
      <summary>
            添加到th或者td的css类名
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder">
      <summary>
            Ajax表格搜索栏构建器
            这个类可以通过Ioc替换，使用时注意要通过Ioc获取
            </summary>
      <example>
            var searchBar = Application.Ioc.Resolve[AjaxTableSearchBarBuilder]();
            searchBar.TableId = "TestList";
            searchBar.Conditions.Add(new FormField(new TextBoxFieldAttribute("TestCondition")));
            return new TemplateResult("test_table.html", new { table, searchBar });
            </example>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.TableId">
      <summary>
            表格Id，必填
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.KeywordPlaceHolder">
      <summary>
            关键字的预留文本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.MenuItems">
      <summary>
            菜单项列表，默认包含刷新，全屏，操作和页面设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.Conditions">
      <summary>
            高级搜索框的条件项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.BeforeItems">
      <summary>
            显示在搜索框之前的项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.AfterItems">
      <summary>
            显示在搜索框之后的项
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许直接描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder.ToString">
      <summary>
            获取表格html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest">
      <summary>
            Ajax表格数据的搜索请求
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest.FromJson(System.String)">
      <summary>
            从json反序列化到搜索请求
            </summary>
      <param name="json">json文本</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse">
      <summary>
            Ajax表格数据的搜索回应
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse.Columns">
      <summary>
            表格列列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases.AjaxTableHandlerBase`2">
      <summary>
            Ajax表格处理器的基础类
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases.AjaxTableHandlerBase`2.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases.AjaxTableHandlerBase`2.WrapQueryMethod``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Func{``0})">
      <summary>
            包装查询函数
            默认根据搜索参数中的Deleted过滤已删除或未删除的对象
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases.AjaxTableHandlerBase`2.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            过滤数据
            默认不过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases.AjaxTableHandlerBase`2.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            排序数据
            默认创建时间或Id倒序排列
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases.AjaxTableHandlerBase`2.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{`0}})">
      <summary>
            选择需要的字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases.AjaxTableHandlerBase`2.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和批量处理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn">
      <summary>
            操作列，包含操作按钮
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn.ActionTemplates">
      <summary>
            操作按钮的模板列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn.CellTemplate">
      <summary>
            单元格模板字符串
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions">
      <summary>
            Ajax表格操作列的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddHtmlAction(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String)">
      <summary>
            添加操作的Html代码
            由当前行的指定成员获取Html
            </summary>
      <param name="column">操作列</param>
      <param name="member">成员名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddButtonForClickEvent(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String)">
      <summary>
            添加点击事件按钮
            </summary>
      <param name="column">操作列</param>
      <param name="name">显示名称</param>
      <param name="buttonClass">按钮Css类</param>
      <param name="iconClass">图标Css类</param>
      <param name="onClick">点击时执行的Javascript代码</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddButtonForOpenLink(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            添加点击打开链接的按钮
            可以指定按钮的生成链接的模板
            </summary>
      <param name="column">操作列</param>
      <param name="name">显示名称</param>
      <param name="buttonClass">按钮Css类</param>
      <param name="iconClass">图标Css类</param>
      <param name="linkTemplate">链接的模板，格式是underscore.js的默认格式，参数传入row</param>
      <param name="target">打开目标，默认是_self</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.MakeLastActionOptional(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String)">
      <summary>
            让最后一个添加的操作只在满足指定条件时显示
            </summary>
      <param name="column">操作列</param>
      <param name="showIf">显示条件，参数传入row</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddRemoteModalForBelongedRow(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加使用模态框弹出指定指定页面的按钮
            链接模板传入按钮所在行的数据
            支持在数据改变后模态框关闭时刷新Ajax表格
            </summary>
      <param name="column">操作列</param>
      <param name="name">显示名称</param>
      <param name="buttonClass">按钮Css类</param>
      <param name="iconClass">图标Css类</param>
      <param name="titleTemplate">模态框标题的模板，格式是underscore.js的默认格式，参数传入row</param>
      <param name="urlTemplate">远程链接的模板，格式是underscore.js的默认格式，参数传入row</param>
      <param name="dialogParameters">用于覆盖传入给BootstrapDialog的参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumnExtensions.AddConfirmActionForBelongedRow(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableActionColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加对按钮所在行的数据进行的需要确认的批量操作菜单项
            确认时会使用模态框
            </summary>
      <param name="column">操作列</param>
      <param name="name">显示名称</param>
      <param name="buttonClass">按钮Css类</param>
      <param name="iconClass">图标Css类</param>
      <param name="titleTemplate">标题栏的模板，格式是underscore.js的默认格式，参数传入rows</param>
      <param name="messageTemplate">消息内容的模板，格式是underscore.js的默认格式，参数传入rows</param>
      <param name="callback">回调，可以使用变量table和rows，result等于true是代表用户点击了确认</param>
      <param name="dialogParameters">用于覆盖传入给BootstrapDialog的参数</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions">
      <summary>
            Ajax表格列的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddIdColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String)">
      <summary>
            添加Id列（多选框+批量操作菜单）
            默认添加全选/取消全选的菜单项
            </summary>
      <param name="columns">列列表</param>
      <param name="member">成员名称</param>
      <param name="width">宽度</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.GetIdColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn})">
      <summary>
            获取Id列
            </summary>
      <param name="columns">列列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddNoColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String)">
      <summary>
            添加序号列（从1开始递增，不涉及到数据）
            </summary>
      <param name="columns">列列表</param>
      <param name="width">宽度</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddMemberColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String)">
      <summary>
            添加成员列
            </summary>
      <param name="columns">列列表</param>
      <param name="member">成员</param>
      <param name="width">宽度</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddHtmlColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String)">
      <summary>
            添加Html成员列
            成员值会作为Html嵌入到页面中，请做好安全处理
            </summary>
      <param name="columns">列列表</param>
      <param name="member">成员</param>
      <param name="width">宽度</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddEnumLabelColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.Type,System.String)">
      <summary>
            添加显示枚举值的标签列
            </summary>
      <param name="columns">列列表</param>
      <param name="member">成员</param>
      <param name="enumType">枚举类型</param>
      <param name="width">宽度</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddImageColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String,System.String,System.String)">
      <summary>
            添加图片列
            </summary>
      <param name="columns">列列表</param>
      <param name="member">成员</param>
      <param name="width">宽度</param>
      <param name="imageWidth">图片宽度</param>
      <param name="imageHeight">图片高度</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddTreeNodeColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String,System.String,System.String)">
      <summary>
            添加树节点列
            </summary>
      <param name="columns">列列表</param>
      <param name="nameMember">名称成员</param>
      <param name="levelMember">层次成员，开始值是0</param>
      <param name="noChildsMember">判断是否没有子节点的成员</param>
      <param name="width">宽度</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddOnClickColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String,System.String)">
      <summary>
            添加点击时执行指定代码的列
            </summary>
      <param name="columns">列列表</param>
      <param name="member">成员</param>
      <param name="onClick">点击时执行的代码</param>
      <param name="width">宽度</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddRemoteModalColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String,System.String,System.String,System.Object,System.String)">
      <summary>
            添加显示远程内容的模态框的列
            </summary>
      <param name="columns">列列表</param>
      <param name="nameMember">名称成员</param>
      <param name="titleTemplate">模态框标题的模板，格式是underscore.js的默认格式，参数传入row</param>
      <param name="urlTemplate">远程链接的模板，格式是underscore.js的默认格式，参数传入row</param>
      <param name="dialogParameters">用于覆盖传入给BootstrapDialog的参数</param>
      <param name="width">宽度</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.AddActionColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},System.String)">
      <summary>
            添加操作列
            </summary>
      <param name="columns">列列表</param>
      <param name="width">宽度</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.GetActionColumn(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn})">
      <summary>
            获取操作列
            </summary>
      <param name="columns">列列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.MoveAfter(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn,System.String)">
      <summary>
            移动列到指定的列后面
            </summary>
      <param name="columns">列列表</param>
      <param name="column">需要移动的列</param>
      <param name="key">指定的列的识别键</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableColumnsExtensions.MoveBefore(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn},ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableColumn,System.String)">
      <summary>
            移动列到指定的列前面
            </summary>
      <param name="columns">列列表</param>
      <param name="column">需要移动的列</param>
      <param name="key">指定的列的识别键</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn">
      <summary>
            Id列（多选框+批量操作菜单）
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn.ActionTemplates">
      <summary>
            菜单项的模板列表，ul中的li
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn.HeadTemplate">
      <summary>
            头部模板字符串
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions">
      <summary>
            Ajax表格Id列的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions.AddItemForClickEvent(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn,System.String,System.String,System.String)">
      <summary>
            添加点击事件菜单项
            </summary>
      <param name="column">Id列</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标Css类</param>
      <param name="onClick">点击时执行的Javascript代码</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions.AddDivider(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn)">
      <summary>
            添加分割线菜单项
            </summary>
      <param name="column">Id列</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions.AddSelectOrUnselectAll(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn)">
      <summary>
            添加全选/取消全选菜单项
            </summary>
      <param name="column">Id列</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumnExtensions.AddConfirmActionForMultiChecked(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableIdColumn,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加对多选框选中的数据进行的需要确认的批量操作菜单项
            确认时会使用模态框
            </summary>
      <param name="column">Id列</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标Css类</param>
      <param name="nonCheckedMessage">没有选中数据时的提示消息</param>
      <param name="titleTemplate">标题栏的模板，格式是underscore.js的默认格式，参数传入rows</param>
      <param name="messageTemplate">消息内容的模板，格式是underscore.js的默认格式，参数传入rows</param>
      <param name="callback">回调，可以使用变量table和rows，result等于true是代表用户点击了确认</param>
      <param name="dialogParameters">用于覆盖传入给BootstrapDialog的参数</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableSearchRequestExtensions">
      <summary>
            Ajax表格数据的搜索请求的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableSearchRequestExtensions.BuildResponse``2(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler{``0,``1}})">
      <summary>
            从领域服务提供的数据构建搜索回应
            支持自动分页和配合表格处理器设置结果
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="request">搜索请求</param>
      <param name="handlers">表格处理器</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableSearchResponseExtensions">
      <summary>
            Ajax表格数据的搜索回应的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.AjaxTableSearchResponseExtensions.ToTableBuilder(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            把Ajax表格数据的搜索回应转换为静态表格构建器
            </summary>
      <param name="response">搜索回应</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.IAjaxTableHandlerExtensions">
      <summary>
            Ajax表格处理器的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions.IAjaxTableHandlerExtensions.WithExtraHandlers``2(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler{``0,``1})">
      <summary>
            根据指定的表格处理器获取它的所有扩展处理器
            并合并到一个列表返回，列表包含 [ 原始处理器, 扩展处理器... ]
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="handler">原始的表格处理器</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableExtraHandler`3">
      <summary>
            Ajax表格的扩展处理器
            可以用于扩展原有的处理器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <typeparam name="TOriginalHandler">原有的处理器</typeparam>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler`2">
      <summary>
            Ajax表格处理器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler`2.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格时的处理
            这个函数与搜索无关，仅在显示表格和搜索栏时调用
            </summary>
      <param name="table">表格</param>
      <param name="searchBar">搜索栏</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler`2.WrapQueryMethod``1(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Func{``0})">
      <summary>
            包装查询函数
            可以在这里控制使用的过滤器等
            </summary>
      <param name="request">搜索请求</param>
      <param name="queryMethod">查询函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler`2.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            过滤数据
            </summary>
      <param name="request">搜索请求</param>
      <param name="query">查询对象</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler`2.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            排序数据
            </summary>
      <param name="request">搜索请求</param>
      <param name="query">查询对象</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler`2.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{`0}})">
      <summary>
            选择需要的字段
            这个函数不传入数据库上下文，因为仍未分页原来的数据库上下文不能用于查询其他数据
            </summary>
      <param name="request">搜索请求</param>
      <param name="pairs">对象和需要字段的组合列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces.IAjaxTableHandler`2.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和批量处理
            </summary>
      <param name="request">搜索请求</param>
      <param name="response">搜索回应</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest">
      <summary>
            表格数据的搜索请求的基础类
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest.MaxPageSize">
      <summary>
            最大允许的每页显示数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest.PageNo">
      <summary>
            请求的页面序号，从1开始
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest.PageSize">
      <summary>
            每页显示数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest.Keyword">
      <summary>
            搜索关键字
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest.Conditions">
      <summary>
            搜索条件
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchResponse">
      <summary>
            表格数据的搜索回应的基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchResponse.PageNo">
      <summary>
            返回的页面序号，从1开始
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchResponse.PageSize">
      <summary>
            每页显示数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchResponse.Pagination">
      <summary>
            分页信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchResponse.Rows">
      <summary>
            数据列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchResponse.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchResponse.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow`1">
      <summary>
            转换实体对象到表格行时使用的类
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow`1.Entity">
      <summary>
            实体对象
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow`1.Row">
      <summary>
            表格行
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow`1.#ctor(`0)">
      <summary>
            初始化
            </summary>
      <param name="entity">
      </param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions.PaginationExtensions">
      <summary>
            分页信息的扩展函数
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions.PaginationExtensions.AjaxTablePaginationLinkRangeKey">
      <summary>
            Ajax表格搜索请求中，指定分页链接范围时使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions.PaginationExtensions.AjaxTableRequireTotalCountKey">
      <summary>
            Ajax表格搜索请求中，需要获取总数量时使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions.PaginationExtensions.LastPageNo">
      <summary>
            最后一页的值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions.PaginationExtensions.UpdateLinks(ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination,System.Int32,System.Int32)">
      <summary>
            更新分页信息中的链接列表
            </summary>
      <param name="pagination">分页信息</param>
      <param name="pageNo">当前页的序号，从1开始</param>
      <param name="linkRange">分页链接的范围，范围等于2且当前页等于2时显示1~5</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions.PaginationExtensions.Paging``1(ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination,System.Int32@,System.Int32,System.Linq.IQueryable{``0},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
      <summary>
            对数据进行分页并设置分页信息
            返回分页后的数据
            </summary>
      <typeparam name="TData">数据类型</typeparam>
      <param name="pagination">分页信息</param>
      <param name="pageNo">页面序号，从1开始</param>
      <param name="pageSize">每页数量</param>
      <param name="query">需要分页的数据</param>
      <param name="linkRange">分页链接的范围，默认等于2, 当前页等于2时显示0~4</param>
      <param name="requireTotalCount">是否需要获取总数量，默认等于false，对性能有影响</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions.PaginationExtensions.Paging``1(ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination,ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.BaseTableSearchRequest,System.Linq.IQueryable{``0})">
      <summary>
            对数据进行分页并设置分页信息
            返回分页后的数据
            </summary>
      <typeparam name="TData">数据类型</typeparam>
      <param name="pagination">分页信息</param>
      <param name="request">表格的搜索请求</param>
      <param name="query">需要分页的数据</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination">
      <summary>
            分页信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.ReachableLastPageNo">
      <summary>
            可到达的最后一页
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.ReachableLastPageIsLastPage">
      <summary>
            可到达的最后一页是否真正的最后一页
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.TotalCount">
      <summary>
            总数量
            因为影响性能，不一定会获取
            不获取时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Links">
      <summary>
            分页栏的链接列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Link">
      <summary>
            分页栏中的页面链接
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Link.PageNo">
      <summary>
            页面序号
            从1开始
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Link.Name">
      <summary>
            页面名称
            如果是数字，从1开始（需要显示序号+1）
            可能是: ["首页", "上一页", "1", "...", "下一页", "末页"]
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Link.State">
      <summary>
            链接状态
            可能是: ["enabled", "disabled", "active", "ellipsis"]
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Link.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Link.#ctor(System.Int32,System.String,System.String)">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Pagination.Link.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.Attributes.LabelCssClassAttribute">
      <summary>
            显示为标签文本时使用的css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.Attributes.LabelCssClassAttribute.CssClass">
      <summary>
            css类
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.Attributes.LabelCssClassAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="cssClass">css类，例如"label label-success"</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.EnumBool">
      <summary>
            布尔值的枚举
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.EnumBool.True">
      <summary>
            是
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.EnumBool.False">
      <summary>
            否
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.EnumBool.Empty">
      <summary>
            空
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.EnumDeleted">
      <summary>
            是否已删除的枚举
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.EnumDeleted.None">
      <summary>
            未删除
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.EnumDeleted.Deleted">
      <summary>
            已删除
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.AlertHtmlFieldAttribute">
      <summary>
            显示提示Html的属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.AlertHtmlFieldAttribute.Type">
      <summary>
            提示类型，例如primary或info
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.AlertHtmlFieldAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">属性名称</param>
      <param name="type">提示类型，例如primary或info</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxFieldAttribute">
      <summary>
            勾选框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupFieldAttribute">
      <summary>
            勾选框分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupFieldAttribute.Source">
      <summary>
            选项来源，必须继承IListItemProvider
            如果不指定, 值的类型必须是ListItemValueWithProvider
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupFieldAttribute.#ctor(System.String,System.Type)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="source">选项来源，必须继承IListItemProvider</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupsFieldAttribute">
      <summary>
            勾选框分组列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupsFieldAttribute.Source">
      <summary>
            选项来源，必须继承IListItemGroupsProvider
            如果不指定, 值的类型必须是ListItemValueWithProvider
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupsFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxGroupsFieldAttribute.#ctor(System.String,System.Type)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="source">选项来源，必须继承IListItemGroupsProvider</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxTreeFieldAttribute">
      <summary>
            勾选框树
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxTreeFieldAttribute.Source">
      <summary>
            选项来源，必须继承IListItemTreeProvider
            如果不指定, 值的类型必须是ListItemValueWithProvider
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxTreeFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.CheckBoxTreeFieldAttribute.#ctor(System.String,System.Type)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="source">选项来源，必须继承IListItemProvider</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.DropdownListFieldAttribute">
      <summary>
            下拉列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.DropdownListFieldAttribute.Source">
      <summary>
            选项来源，必须继承IListItemProvider
            如果不指定, 值的类型必须是ListItemValueWithProvider
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.DropdownListFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.DropdownListFieldAttribute.#ctor(System.String,System.Type)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="source">选项来源，必须继承IListItemProvider</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderAsUrlFieldAttribute">
      <summary>
            文件上传, 以url的形式自动保存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderAsUrlFieldAttribute.UploadDirectory">
      <summary>
            上传目录
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderAsUrlFieldAttribute.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderFieldAttribute">
      <summary>
            文件上传
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderFieldAttribute.Extensions">
      <summary>
            允许的文件后缀
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderFieldAttribute.MaxContentsLength">
      <summary>
            允许上传的最大长度，单位是字节
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderFieldAttribute.#ctor(System.String,System.String,System.Int32)">
      <summary>
            初始化
            </summary>
      <param name="name">字段类型</param>
      <param name="extensions">允许的文件后缀，默认是图片后缀</param>
      <param name="maxContentsLength">允许上传的最大长度，单位是字节，默认是1MB</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute">
      <summary>
            表单属性
            用于指定表单名称，可省略
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.Name">
      <summary>
            表单名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.Action">
      <summary>
            提交到的url
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.Method">
      <summary>
            提交类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.SubmitButtonText">
      <summary>
            提交按钮的文本，默认等于"Submit"
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.SubmitButtonCssClass">
      <summary>
            提交按钮的css类，默认是btn btn-submit
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.EnableAjaxSubmit">
      <summary>
            启用Ajax提交，默认等于true
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.EnableCsrfToken">
      <summary>
            启用Csrf校验，默认等于true
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.CssClass">
      <summary>
            表单的css类，默认是form-horizontal
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">表单名称</param>
      <param name="action">提交到的url，默认和请求的url相同</param>
      <param name="method">提交类型，默认是POST</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormFieldAttribute">
      <summary>
            表单字段的属性
            用于标记模型中的成员是表单字段
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormFieldAttribute.Name">
      <summary>
            字段名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormFieldAttribute.Group">
      <summary>
            字段所属的分组
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.HiddenFieldAttribute">
      <summary>
            隐藏字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.HiddenFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.HtmlFieldAttribute">
      <summary>
            直接显示Html内容的字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.HtmlFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称，目前不会用上但是需要预留</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.JsonFieldAttribute">
      <summary>
            Json字段
            这个字段储存的值会在绑定时序列化
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.JsonFieldAttribute.FieldType">
      <summary>
            字段类型，序列化和反序列化时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.JsonFieldAttribute.#ctor(System.String,System.Type)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="fieldType">字段类型，序列化和反序列化时使用</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.LabelFieldAttribute">
      <summary>
            只读文本
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.LabelFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.PasswordFieldAttribute">
      <summary>
            密码框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.PasswordFieldAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="placeHolder">预置文本</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RadioButtonsFieldAttribute">
      <summary>
            单选按钮列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RadioButtonsFieldAttribute.Source">
      <summary>
            选项来源，必须继承IListItemProvider
            如果不指定, 值的类型必须是ListItemValueWithProvider
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RadioButtonsFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RadioButtonsFieldAttribute.#ctor(System.String,System.Type)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="sources">选项来源，必须继承IListItemProvider</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RichTextEditorAttribute">
      <summary>
            富文本编辑器的属性
            这个属性需要其他插件实现，请注意引用实现的插件
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RichTextEditorAttribute.Config">
      <summary>
            自定义配置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RichTextEditorAttribute.ImageBrowserUrl">
      <summary>
            图片管理器地址，指定时可以启用图片上传功能
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RichTextEditorAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="config">自定义配置，格式是Json</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.SearchableDropdownListFieldAttribute">
      <summary>
            可搜索的下拉列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.SearchableDropdownListFieldAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.SearchableDropdownListFieldAttribute.#ctor(System.String,System.Type)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="source">选项来源，必须继承IListItemProvider</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TemplateHtmlFieldAttribute">
      <summary>
            显示模板Html的属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TemplateHtmlFieldAttribute.Path">
      <summary>
            模板路径
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TemplateHtmlFieldAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">属性名称</param>
      <param name="path">模板路径</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TextAreaFieldAttribute">
      <summary>
            多行文本框
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TextAreaFieldAttribute.Rows">
      <summary>
            行数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TextAreaFieldAttribute.#ctor(System.String,System.Int32,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="rows">行数</param>
      <param name="placeHolder">预置文本</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TextBoxFieldAttribute">
      <summary>
            文本框
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TextBoxFieldAttribute.PlaceHolder">
      <summary>
            预置文本
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.TextBoxFieldAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="placeHolder">预置文本</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3">
      <summary>
            用于编辑实体的表单
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <typeparam name="TForm">继承类自身的类型</typeparam>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.ExtraHandlers">
      <summary>
            扩展列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.#ctor(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder)">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.OnBind(`0)">
      <summary>
            绑定实体到表单
            </summary>
      <param name="bindFrom">来源的实体</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.OnSubmit(`0)">
      <summary>
            保存表单到实体，返回处理结果
            </summary>
      <param name="saveTo">保存到的实体</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.OnSubmitSaved(`0)">
      <summary>
            实体保存后的处理，用于添加关联实体等
            </summary>
      <param name="saved">已保存的实体，Id已分配</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.GetRequestId">
      <summary>
            获取传入参数请求的实体Id
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.OnBind">
      <summary>
            绑定时的处理
            支持通过扩展修改表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.EntityFormBuilder`3.OnSubmit">
      <summary>
            提交时的处理，返回处理结果
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FileUploaderFieldAttributeExtensions">
      <summary>
            文件上传字段属性的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FileUploaderFieldAttributeExtensions.Check(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FileUploaderFieldAttribute,ZKWebStandard.Web.IHttpPostedFile)">
      <summary>
            检查上传的文件
            </summary>
      <param name="attribute">上传属性</param>
      <param name="file">文件对象</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FormBuilderExtensions">
      <summary>
            表单构建器的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FormBuilderExtensions.BindValues(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            绑定表单字段的值
            </summary>
      <param name="builder">表单构建器</param>
      <param name="values">来源的值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FormBuilderExtensions.BindValuesFromAnonymousObject(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder,System.Object)">
      <summary>
            绑定表单字段的值
            根据匿名对象，例如new { Username = "", Password = "" }
            </summary>
      <param name="builder">表单构建器</param>
      <param name="obj">对象</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FormBuilderExtensions.ParseValues(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
      <summary>
            解析提交上来的值
            同时检查CSRF校验和值是否符合验证器的规则
            </summary>
      <param name="builder">表单构建器</param>
      <param name="submitValues">提交上来的值</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FormFieldExtensions">
      <summary>
            表单字段的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.FormFieldExtensions.WrapFieldHtml(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>
            包装表单字段的Html
            包装后包含: 名称，控件，验证文本
            </summary>
      <param name="field">表单字段</param>
      <param name="htmlAttributes">属性列表</param>
      <param name="fieldHtml">表单字段的Html</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.IModelFormBuilderExtensions">
      <summary>
            模型表单构建器的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.IModelFormBuilderExtensions.SaveSuccess(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder)">
      <summary>
            返回保存成功
            </summary>
      <param name="form">表单</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.IModelFormBuilderExtensions.SaveSuccessAndCloseModal(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder)">
      <summary>
            返回保存成功，关闭模态框并且通知Ajax表格更新数据
            </summary>
      <param name="form">表单</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.IModelFormBuilderExtensions.SaveSuccessAndRefreshModal(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder)">
      <summary>
            返回保存成功，刷新模态框并通知Ajax表格更新数据
            </summary>
      <param name="form">表单</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions.IModelFormBuilderExtensions.SaveSuccessAndRefreshPage(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder,System.Int32)">
      <summary>
            返回保存成功，并在一定时间后刷新当前页面
            </summary>
      <param name="form">表单</param>
      <param name="milliseconds">刷新延迟</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FieldsOnlyFormBuilder">
      <summary>
            只包含字段内容的表单构建器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FieldsOnlyFormBuilder.ToString">
      <summary>
            获取表单html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FieldsOnlyModelFormBuilder">
      <summary>
            只包含字段内容的表单构建器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FieldsOnlyModelFormBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FieldsOnlyModelFormBuilder.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FieldsOnlyModelFormBuilder.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder">
      <summary>
            表单构建器
            这个类可以通过Ioc替换，使用时注意要通过Ioc获取
            </summary>
      <example>
            // 创建
            var form = Application.Ioc.Resolve[FormBuilder]();
            form.Attribute = new FormAttribute() { Name = "TestForm" };
            form.Fields.Add(new FormField(new TextBoxFieldAttribute("Username")));
            form.Fields.Add(new FormField(new PasswordFieldAttribute("Password")));
            // 绑定
            form.BindValuesFromAnonymousObject(new { Username = "TestUser", Password = "TestPassword" });
            return new TemplateResult("test_form.html", new { form });
            // 提交
            var values = form.ParseValues(HttpManager.CurrentContext.Request.GetParams());
            var username = values.GetOrDefault[string]("Username");
            var password = values.GetOrDefault[string]("Password");
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.CsrfTokenFieldName">
      <summary>
            Csrf校验值的表单字段名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.Attribute">
      <summary>
            表单属性，可省略
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.Fields">
      <summary>
            表单字段列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.CsrfToken">
      <summary>
            当前客户端使用的csrf校验值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.RenderFormBeginTag(System.Text.StringBuilder)">
      <summary>
            描画表单的开始标签
            </summary>
      <param name="html">html构建器</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.RenderFormEndTag(System.Text.StringBuilder)">
      <summary>
            描画表单的结束标签
            </summary>
      <param name="html">html构建器</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.RenderFormField(System.Text.StringBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField)">
      <summary>
            描画表单字段
            </summary>
      <param name="html">html构建器</param>
      <param name="field">表单字段</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.RenderCsrfToken(System.Text.StringBuilder)">
      <summary>
            描画csrf校验值
            </summary>
      <param name="html">html构建器</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.RenderSubmitButton(System.Text.StringBuilder)">
      <summary>
            描画提交按钮
            </summary>
      <param name="html">html构建器</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许直接描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder.ToString">
      <summary>
            获取表单html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField">
      <summary>
            表单字段
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField.Attribute">
      <summary>
            表单字段的属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField.ValidationAttributes">
      <summary>
            验证表单的属性列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField.Value">
      <summary>
            字段的值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField.#ctor(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.FormFieldAttribute)">
      <summary>
            初始化
            </summary>
      <param name="attribute">表单字段的属性</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许直接描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField.ToString">
      <summary>
            获取表单字段的html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.AlertHtmlFieldHandler">
      <summary>
            显示提示的Html处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.AlertHtmlFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.AlertHtmlFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxFieldHandler">
      <summary>
            勾选框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxGroupFieldHandler">
      <summary>
            勾选框分组
            显示结构
            ▢ 全选
            　▢ 多选框A ▢ 多选框B ▢ 多选框C
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxGroupFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxGroupFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxGroupsFieldHandler">
      <summary>
            勾选框分组列表
            显示结构
            ▢ 全选
            　▢ 分组A
            　　▢ 多选框AA ▢ 多选框AB ▢ 多选框AC
            　▢ 分组B
            　　▢ 多选框BA ▢ 多选框BB ▢ 多选框BC
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxGroupsFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxGroupsFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxTreeFieldHandler">
      <summary>
            勾选框树
            显示结构
            ▢ 节点A
            　▢ 节点AA
            　　▢ 节点AAA
            　▢ 节点AB
            ▢ 节点B
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxTreeFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.CheckBoxTreeFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.DropdownListFieldHandler">
      <summary>
            下拉列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.DropdownListFieldHandler.BuildSelectHtml(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.DropdownListFieldAttribute,System.Collections.Generic.IDictionary{System.String,System.String},System.Object)">
      <summary>
            构建Select元素的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.DropdownListFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.DropdownListFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.FileUploaderAsUrlFieldHandler">
      <summary>
            文件上传
            自动保存文件并返回Url
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.FileUploaderAsUrlFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.FileUploaderAsUrlFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.FileUploaderFieldHandler">
      <summary>
            文件上传
            字段类型必须是IHttpPostedFile
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.FileUploaderFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.FileUploaderFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.HiddenFieldHandler">
      <summary>
            隐藏字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.HiddenFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.HiddenFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.HtmlFieldHandler">
      <summary>
            直接显示Html内容的字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.HtmlFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.HtmlFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.JsonFieldHandler">
      <summary>
            经过Json序列化的隐藏字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.JsonFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.JsonFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.LabelFieldHandler">
      <summary>
            只读文本
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.LabelFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.LabelFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值，只读文本没有提交值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.PasswordFieldHandler">
      <summary>
            密码框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.PasswordFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.PasswordFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.RadioButtonsFieldHandler">
      <summary>
            单选按钮组
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.RadioButtonsFieldHandler.BuildRadioButtonsHtml(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes.RadioButtonsFieldAttribute,System.Collections.Generic.IDictionary{System.String,System.String},System.Object)">
      <summary>
            构建单选按钮组的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.RadioButtonsFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.RadioButtonsFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.SearchableDropdownListFieldHandler">
      <summary>
            可搜索的下拉列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.SearchableDropdownListFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.SearchableDropdownListFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TemplateHtmlFieldHandler">
      <summary>
            显示模板的Html处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TemplateHtmlFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TemplateHtmlFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TextAreaFieldHandler">
      <summary>
            多行文本框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TextAreaFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TextAreaFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TextBoxFieldHandler">
      <summary>
            文本框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TextBoxFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers.TextBoxFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IEntityFormExtraHandler`3">
      <summary>
            实体表单使用的附加处理器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <typeparam name="TForm">表单类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IEntityFormExtraHandler`3.OnCreated(`2)">
      <summary>
            表单创建时的处理
            </summary>
      <param name="form">表单</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IEntityFormExtraHandler`3.OnBind(`2,`0)">
      <summary>
            绑定数据到表单的处理，这个函数会在原表单绑定后调用
            </summary>
      <param name="form">表单</param>
      <param name="bindFrom">来源的实体</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IEntityFormExtraHandler`3.OnSubmit(`2,`0)">
      <summary>
            保存表单到数据，这个函数会在原表单保存后调用
            </summary>
      <param name="form">表单</param>
      <param name="saveTo">保存到的实体</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IEntityFormExtraHandler`3.OnSubmitSaved(`2,`0)">
      <summary>
            数据保存后的处理，用于添加关联数据等
            </summary>
      <param name="form">表单</param>
      <param name="saved">已保存的实体，Id已分配</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldHandler">
      <summary>
            表单字段处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
      <param name="field">表单字段</param>
      <param name="htmlAttributes">添加到元素的html属性</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
      <param name="field">表单字段</param>
      <param name="values">值列表</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldParseFromEnv">
      <summary>
            标记字段需要从提交环境中解析值，当表单值等于空时仍执行解析函数
            一般用于文件上传的属性，例如FileUploaderFieldAttribute
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldRequireMultiPart">
      <summary>
            标记字段需要表单类型为MultiPart
            一般用于文件上传的属性，例如FileUploaderFieldAttribute
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldValidator">
      <summary>
            表单字段的验证器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldValidator.AddHtmlAttributes(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            添加验证使用的html属性
            </summary>
      <param name="field">表单字段</param>
      <param name="validatorAttribute">验证属性</param>
      <param name="htmlAttributes">添加属性时保存到这里</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IFormFieldValidator.Validate(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Object)">
      <summary>
            验证值是否通过，不通过时抛出例外
            </summary>
      <param name="field">表单字段</param>
      <param name="validatorAttribute">验证属性</param>
      <param name="value">需要验证的值</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder">
      <summary>
            从模型构建表单的构建器的接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder.Bind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder.Submit">
      <summary>
            提交表单，返回处理结果
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces.IModelFormBuilder.GetFormAttribute">
      <summary>
            获取表单属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder">
      <summary>
            从模型构建表单的构建器
            <exmaple>
            public class TestForm : ModelFormBuilder {
            	[Required]
            	[TextBoxField("FieldA", "Please enter something")]
            	public string FieldA { get; set; }
            	[TextBoxField("FieldB", "Please enter something")]
            	public string FieldB { get; set; }
            	protected override void OnBind() {
            		FieldA = "Default value";
            	}
            	protected override object OnSubmit() {
            		return new { message = string.Format("{0}, {1}", FieldA, FieldB) };
            	}
            }
            </exmaple></summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.Form">
      <summary>
            表单构建器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.FieldToProperty">
      <summary>
            表单字段到成员信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.Context">
      <summary>
            当前的Http上下文
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.Request">
      <summary>
            当前的Http请求
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.Response">
      <summary>
            当前的Http回应
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.#ctor(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder)">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.AddFieldsFrom(System.Object)">
      <summary>
            从指定的对象添加字段
            默认会从this添加，这个函数可以用于从其他对象扩展表单
            </summary>
      <param name="obj">对象</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.OnBind">
      <summary>
            绑定时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.OnSubmit">
      <summary>
            提交时的处理，返回处理结果
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.Bind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.Submit">
      <summary>
            提交表单，返回处理结果
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.ZKWeb#Plugins#Common#Base#src#UIComponents#Forms#Interfaces#IModelFormBuilder#GetFormAttribute">
      <summary>
            获取表单属性
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许直接描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.ModelFormBuilder.ToString">
      <summary>
            获取表单html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabEntityFormBuilder`3">
      <summary>
            用于编辑指定数据的表单，支持多标签
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <typeparam name="TForm">继承类自身的类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabEntityFormBuilder`3.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder">
      <summary>
            表单构建器，支持多标签
            按字段的Group分组，没有指定Group的字段分到"基本信息"中
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.DefaultGroupName">
      <summary>
            默认分组名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.TabPrefix">
      <summary>
            标签的前缀
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.GetTabId(System.String)">
      <summary>
            从分组名称获取标签Id，不带#
            </summary>
      <param name="groupName">分组名称</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.RenderTabContainerBeginTag(System.Text.StringBuilder)">
      <summary>
            描画标签容器的开始标签
            </summary>
      <param name="html">html构建器</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.RenderTabContainerEndTag(System.Text.StringBuilder)">
      <summary>
            描画标签容器的结束标签
            </summary>
      <param name="html">html构建器</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.RenderTabs(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Linq.IGrouping{System.String,ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField}})">
      <summary>
            描画标签
            </summary>
      <param name="html">html构建器</param>
      <param name="groups">字段分组</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.RenderTabContents(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Linq.IGrouping{System.String,ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField}})">
      <summary>
            描画标签内容
            </summary>
      <param name="html">html构建器</param>
      <param name="groups">字段分组</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabFormBuilder.ToString">
      <summary>
            获取表单html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabModelFormBuilder">
      <summary>
            从模型构建表单的构建器，支持多标签
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.TabModelFormBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RegularExpressionValidator">
      <summary>
            正则表达式
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RegularExpressionValidator.ErrorMessage(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField)">
      <summary>
            获取错误消息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RegularExpressionValidator.AddHtmlAttributes(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            添加验证使用的html属性
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RegularExpressionValidator.Validate(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Object)">
      <summary>
            验证值是否通过，不通过时抛出例外
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RequiredValidator">
      <summary>
            必填项
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RequiredValidator.Key">
      <summary>
            html属性键
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RequiredValidator.ErrorMessage(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField)">
      <summary>
            获取错误消息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RequiredValidator.AddHtmlAttributes(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            添加验证使用的html属性
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.RequiredValidator.Validate(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Object)">
      <summary>
            验证值是否通过，不通过时抛出例外
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.StringLengthValidator">
      <summary>
            字符串长度
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.StringLengthValidator.ErrorMessage(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>
            获取错误消息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.StringLengthValidator.AddHtmlAttributes(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            添加验证使用的html属性
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators.StringLengthValidator.Validate(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Object,System.Object)">
      <summary>
            验证值是否通过，不通过时抛出例外
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions">
      <summary>
            Html项列表的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions.AddButtonForClickEvent(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem},System.String,System.String,System.String,System.String)">
      <summary>
            添加处理点击事件的按钮
            </summary>
      <param name="items">html项列表</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标css类</param>
      <param name="btnClass">按钮css类</param>
      <param name="onClick">点击时执行的Javascript代码</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions.AddButtonForLink(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem},System.String,System.String,System.String,System.String,System.String)">
      <summary>
            添加打开链接使用的按钮
            </summary>
      <param name="items">html项列表</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标css类</param>
      <param name="btnClass">按钮css类</param>
      <param name="href">链接地址</param>
      <param name="target">打开目标</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions.AddRemoteModalForAjaxTable(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem},System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加使用模态框弹出指定指定页面的按钮
            支持在数据改变后模态框关闭时刷新Ajax表格
            </summary>
      <param name="items">html项列表</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标Css类</param>
      <param name="btnClass">按钮css类</param>
      <param name="title">模态框标题</param>
      <param name="url">远程链接</param>
      <param name="dialogParameters">用于覆盖传入给BootstrapDialog的参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions.AddAjaxTableFilterBar(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem},System.String,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem})">
      <summary>
            添加Ajax表格使用的过滤栏
            </summary>
      <param name="items">html项列表</param>
      <param name="key">过滤键</param>
      <param name="tabItems">标签项列表，附加属性中可以设置displayCount显示数量</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem">
      <summary>
            Html项
            这个类型用于支持List[HtmlItem]的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemGroupsProvider">
      <summary>
            自定义选项分组列表提供器
            请配合ListItemValueWithProvider使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemGroupsProvider.Groups">
      <summary>
            选项分组列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemGroupsProvider.#ctor(System.Collections.Generic.IList{System.Linq.IGrouping{System.String,ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem}})">
      <summary>
            初始化
            </summary>
      <param name="groups">选项分组列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemGroupsProvider.GetGroups">
      <summary>
            返回选项分组列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemProvider">
      <summary>
            自定义选项列表提供器
            请配合ListItemValueWithProvider使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemProvider.Items">
      <summary>
            选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemProvider.#ctor(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem})">
      <summary>
            初始化
            </summary>
      <param name="items">选项列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemProvider.#ctor(ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem[])">
      <summary>
            初始化
            </summary>
      <param name="items">选项列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemTreeProvider">
      <summary>
            自定义选项树提供器
            请配合ListItemValueWithProvider使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemTreeProvider.Tree">
      <summary>
            选项树
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemTreeProvider.#ctor(ZKWebStandard.Utils.ITreeNode{ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem})">
      <summary>
            初始化
            </summary>
      <param name="tree">选项树</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.CustomListItemTreeProvider.GetTree">
      <summary>
            获取选项树
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.Interfaces.IListItemGroupsProvider">
      <summary>
            勾选框使用的选项分组列表来源的接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.Interfaces.IListItemGroupsProvider.GetGroups">
      <summary>
            获取分组列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.Interfaces.IListItemProvider">
      <summary>
            下拉框或单选按钮使用的选项列表来源的接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.Interfaces.IListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.Interfaces.IListItemTreeProvider">
      <summary>
            勾选框使用的选项树来源的接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.Interfaces.IListItemTreeProvider.GetTree">
      <summary>
            获取选项树
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem">
      <summary>
            下拉框或单选按钮使用的选项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem.Value">
      <summary>
            值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem.Extra">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">名称</param>
      <param name="value">值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem.#ctor(System.String,System.String,System.Object)">
      <summary>
            初始化
            </summary>
      <param name="name">
      </param>
      <param name="value">
      </param>
      <param name="extra">
      </param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItem.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画元素到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemFromEntities`2">
      <summary>
            根据数据提供选项列表
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">实体主键</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemFromEntities`2.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemFromEnum`1">
      <summary>
            根据枚举值提供选项列表
            </summary>
      <typeparam name="TEnum">枚举类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemFromEnum`1.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemsWithOptional`1">
      <summary>
            给选项列表添加"请选择"的空值选项
            </summary>
      <example>
            [DropdownListField("Type", typeof(ListItemsWithOptional[ListItemFromEnum[TestTypes]]))]
            </example>
      <typeparam name="TBaseProvider">
      </typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemsWithOptional`1.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemUtils">
      <summary>
            选项工具类
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemUtils.GetValueAndProvider``1(System.Type,System.Object)">
      <summary>
            获取选项值和选项列表提供器
            </summary>
      <typeparam name="T">提供器的类型</typeparam>
      <param name="source">手动指定的提供器类型, 如果等于null则要求value必须是ListItemValueWithProvider</param>
      <param name="value">值, 如果source等于null应该使用ListItemValueWithProvider</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemUtils.WrapValueAndProvider(System.Type,System.Object)">
      <summary>
            解析值时如果source等于null则用ListItemValueWithProvider包装
            否则返回原值
            </summary>
      <param name="source">手动指定的提供器类型</param>
      <param name="parsed">解析后的值</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemValueWithProvider">
      <summary>
            选项值 + 选项列表提供器
            选项列表提供器根据字段类型不同
            默认有以下类型的提供器
            - IListItemGroupsProvider
            - IListItemProvider
            - IListItemTreeProvider
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemValueWithProvider.Value">
      <summary>
            选项值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemValueWithProvider.Provider">
      <summary>
            选项列表提供器
            解析提交内容时这里会等于null
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.ListItemValueWithProvider.#ctor(System.Object,System.Object)">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions">
      <summary>
            菜单项列表的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddRefresh(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem})">
      <summary>
            添加刷新项
            可用于
            - ajax表格，要求在.ajax-table-menu中
            </summary>
      <param name="items">菜单项列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddFullscreen(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem})">
      <summary>
            添加全屏项
            可用于
            - 全屏所在的.portlet
            </summary>
      <param name="items">菜单项列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddDivider(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem})">
      <summary>
            添加分割线
            </summary>
      <param name="items">菜单项列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddTableOperations(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem})">
      <summary>
            添加对表格的操作
            包含导出xls，打印
            </summary>
      <param name="items">菜单项列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddPaginationSettings(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.Int32[])">
      <summary>
            添加每页数量设置
            </summary>
      <param name="items">菜单项列表</param>
      <param name="pageSizes">默认[5, 25, 50, 100, 500]</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddItemForClickEvent(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String)">
      <summary>
            添加处理点击事件的菜单项
            </summary>
      <param name="items">菜单项列表</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标css类</param>
      <param name="onClick">点击时执行的Javascript代码</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddItemForLink(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String,System.String)">
      <summary>
            添加打开链接使用的菜单项
            </summary>
      <param name="items">菜单项列表</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标css类</param>
      <param name="href">链接地址</param>
      <param name="target">打开目标</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddRemoteModalForAjaxTable(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            添加使用模态框弹出指定指定页面的菜单项
            支持在数据改变后模态框关闭时刷新Ajax表格
            </summary>
      <param name="items">菜单项列表</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标Css类</param>
      <param name="title">模态框标题</param>
      <param name="url">远程链接</param>
      <param name="dialogParameters">用于覆盖传入给BootstrapDialog的参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddRemoteModalForSelectedRow(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            使用模态框弹出指定指定页面的菜单项
            链接模板传入Ajax表格当前选中单行的数据
            支持在数据改变后模态框关闭时刷新Ajax表格
            </summary>
      <param name="items">菜单项列表</param>
      <param name="name">显示名称</param>
      <param name="iconClass">图标Css类</param>
      <param name="titleTemplate">模态框标题的模板，格式是underscore.js的默认格式，参数传入row</param>
      <param name="urlTemplate">远程链接的模板，格式是underscore.js的默认格式，参数传入row</param>
      <param name="dialogParameters">用于覆盖传入给BootstrapDialog.show的参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions.MenuItemsExtensions.AddToggleAllForAjaxTableTree(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem},System.String)">
      <summary>
            Ajax表格树展开/折叠全部的菜单项
            </summary>
      <param name="items">菜单项列表</param>
      <param name="levelMember">保存节点等级的成员名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem">
      <summary>
            菜单项
            这个类型用于支持List[MenuItem]的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItem.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup">
      <summary>
            菜单项列表的分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup.Name">
      <summary>
            分组名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup.IconClass">
      <summary>
            图标的Css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup.Items">
      <summary>
            菜单项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">分组名称</param>
      <param name="iconClass">图标的Css类</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings">
      <summary>
            常用脚本字符串
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.AjaxtableUpdatedFromModal">
      <summary>
            通知Ajax表格数据已更新
            调用后在模态框关闭时表格会自动刷新
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.ReloadModal">
      <summary>
            触发模态框远程页面内容的更新事件
            一般在提交后，需要刷新当前模态框内容时使用
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.CloseModal">
      <summary>
            关闭模态框
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.RefreshModal">
      <summary>
            刷新模态框
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.AjaxtableUpdatedAndCloseModal">
      <summary>
            通知Ajax表格数据已更新，并关闭模态框
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.AjaxtableUpdatedAndRefreshModal">
      <summary>
            通知Ajax表格数据已更新，并刷新模态框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.ConfirmMessageTemplateForMultiSelected(System.String,System.String)">
      <summary>
            批量操作的确认消息模板
            例
            是否确认要删除以下用户
            用户名
            用户名
            </summary>
      <param name="message">第一行显示的消息</param>
      <param name="member">接下来每行显示的成员名称</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.PostConfirmedActionForMultiSelected(System.String,System.String)">
      <summary>
            在Ajax表格的批量操作确认框已确认时
            使用ajaxTable.postAction提交指定的成员列表到目标地址
            </summary>
      <param name="member">成员名称</param>
      <param name="target">提交到的目标</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.RefreshAfter(System.Int32)">
      <summary>
            在指定时间后刷新当前页面
            </summary>
      <param name="milliseconds">指定时间，单位是毫秒</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.Redirect(System.String,System.Int32)">
      <summary>
            在一定时间后重定向当前页面到指定地址
            </summary>
      <param name="url">重定向到的地址</param>
      <param name="milliseconds">等待时间，单位是毫秒</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings.BaseScriptStrings.RedirectModal(System.String)">
      <summary>
            更新模态框远程页面内容到指定的Url
            </summary>
      <param name="url">更新到的Url</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTableExporters.StaticTableCsvExporter">
      <summary>
            导出静态表格到Csv文件
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTableExporters.StaticTableCsvExporter.CsvCellRegex">
      <summary>
            用于替换Csv单元格中不应该出现的字符的正则表达式
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTableExporters.StaticTableCsvExporter.FileExtension">
      <summary>
            文件后缀
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTableExporters.StaticTableCsvExporter.CsvCell(System.Object)">
      <summary>
            转换到Csv单元格内容
            - 如果对象是枚举类型，使用经过翻译的描述
            - 否则使用对象ToString的值
            - 进行Html解码，解析类似＆nbsp;的字符
            - 替换逗号，换行符，Html标签到空格
            </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTableExporters.StaticTableCsvExporter.Export(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder,System.IO.Stream)">
      <summary>
            导出到数据流
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Bases.StaticTableHandlerBase`2">
      <summary>
            静态表格处理器的基础类
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Bases.StaticTableHandlerBase`2.WrapQueryMethod``1(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Func{``0})">
      <summary>
            包装查询函数
            默认根据搜索参数中的Deleted过滤已删除或未删除的对象
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Bases.StaticTableHandlerBase`2.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            过滤数据
            默认不过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Bases.StaticTableHandlerBase`2.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            排序数据
            默认更新时间或创建时间或Id倒序排列
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Bases.StaticTableHandlerBase`2.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{`0}})">
      <summary>
            选择需要的字段
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.IStaticTableHandlerExtensions">
      <summary>
            静态表格处理器的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.IStaticTableHandlerExtensions.WithExtraHandlers``2(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableHandler{``0,``1})">
      <summary>
            根据指定的表格处理器获取它的所有扩展处理器
            并合并到一个列表返回，列表包含 [ 原始处理器, 扩展处理器... ]
            </summary>
      <typeparam name="TEntity">数据类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="handler">原始的表格处理器</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.StaticTableColumnExtensions">
      <summary>
            静态表格的列的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.StaticTableColumnExtensions.Add(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column},System.String,System.String,System.Boolean,System.String,System.String)">
      <summary>
            添加列
            </summary>
      <param name="columns">列列表</param>
      <param name="member">成员</param>
      <param name="width">宽度</param>
      <param name="allowHtml">是否允许标题和成员使用Html，默认不允许</param>
      <param name="caption">标题，默认使用成员名称</param>
      <param name="cssClass">css类名</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.StaticTableSearchRequestExtensions">
      <summary>
            静态表格数据的搜索请求的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.StaticTableSearchRequestExtensions.BuildResponse``2(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableHandler{``0,``1}})">
      <summary>
            从领域服务提供的数据构建搜索回应
            支持自动分页和配合表格处理器设置结果
            </summary>
      <typeparam name="TEntity">数据类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <param name="request">搜索请求</param>
      <param name="handlers">表格处理器</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.StaticTableSearchResponseExtensions">
      <summary>
            静态表格数据的搜索回应的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions.StaticTableSearchResponseExtensions.ToTableBuilder(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchResponse)">
      <summary>
            转换搜索回应到静态表格构建器
            请手动添加列到返回结果，添加后可以直接描画到模板
            </summary>
      <param name="response">搜索回应</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableExporter">
      <summary>
            静态表格导出器的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableExporter.FileExtension">
      <summary>
            文件后缀，例如".csv"
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableExporter.Export(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder,System.IO.Stream)">
      <summary>
            导出表格到数据流
            </summary>
      <param name="table">表格对象</param>
      <param name="stream">数据流</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableExtraHandler`3">
      <summary>
            静态表格的扩展处理器
            可以用于扩展原有的处理器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
      <typeparam name="TOriginalHandler">原有的处理器</typeparam>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableHandler`2">
      <summary>
            静态表格处理器
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableHandler`2.WrapQueryMethod``1(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Func{``0})">
      <summary>
            包装查询函数
            可以在这里控制使用的过滤器等
            </summary>
      <param name="request">搜索请求</param>
      <param name="queryMethod">查询函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableHandler`2.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            过滤数据
            </summary>
      <param name="request">搜索请求</param>
      <param name="query">查询对象</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableHandler`2.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{`0}@)">
      <summary>
            排序数据
            </summary>
      <param name="request">搜索请求</param>
      <param name="query">查询对象</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces.IStaticTableHandler`2.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{`0}})">
      <summary>
            选择需要的字段
            这个函数不传入数据库上下文，因为仍未分页原来的数据库上下文不能用于查询其他数据
            </summary>
      <param name="request">搜索请求</param>
      <param name="pairs">对象和需要字段的组合列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder">
      <summary>
            静态表格构建器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.TableClass">
      <summary>
            表格的Css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.TableHeadRowClass">
      <summary>
            表格头部单元格的Css类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Columns">
      <summary>
            列列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Rows">
      <summary>
            数据列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.GetHashRows">
      <summary>
            获取转换成Hash对象的数据列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column">
      <summary>
            列类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column.Member">
      <summary>
            成员
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column.Width">
      <summary>
            宽度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column.AllowHtml">
      <summary>
            是否允许标题和成员使用Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column.Caption">
      <summary>
            标题，默认使用成员名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column.CssClass">
      <summary>
            添加到th和td的css类名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column.#ctor(System.String,System.String,System.Boolean,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="member">成员</param>
      <param name="width">宽度</param>
      <param name="allowHtml">是否允许标题和成员使用Html，默认不允许</param>
      <param name="caption">标题，默认使用成员名称</param>
      <param name="cssClass">添加到th和td的css类名</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableBuilder.Column.ToLiquid">
      <summary>
            允许在模板中使用
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest">
      <summary>
            静态表格数据的搜索请求
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest.PageSizeKey">
      <summary>
            获取每页数量使用的键值
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest.KeywordKey">
      <summary>
            获取关键字使用的键值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest.FromHttpRequest(ZKWebStandard.Web.IHttpRequest,System.Nullable{System.Int32})">
      <summary>
            把http请求转换到搜索请求
            </summary>
      <param name="request">http请求</param>
      <param name="defaultPageSize">默认的每页数量，默认是50</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest.FromHttpRequest(System.Nullable{System.Int32})">
      <summary>
            把当前http请求转换到搜索请求
            </summary>
      <param name="defaultPageSize">默认的每页数量，默认是50</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchResponse">
      <summary>
            静态表格数据的搜索回应
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters">
      <summary>
            模板系统的过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.WebsiteTitle(System.String)">
      <summary>
            网站标题
            格式见 WebsiteSettings.DocumentTitleFormat
            </summary>
      <example>
            {{ "Website Title" | website_title }}
            </example>
      <param name="title">翻译前的网站标题</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.Url(System.String)">
      <summary>
            全局过滤网址
            </summary>
      <example>
            {{ "/example" | url }}
            </example>
      <param name="url">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.UrlGetParam(System.String,System.String)">
      <summary>
            获取Url参数，传入的url是空值时使用当前请求的url
            </summary>
      <example>
            {{ "" | url_get_param: "key" }}
            {{ test_url | url_get_param: variable }}
            </example>
      <param name="url">来源url，空值时使用当前请求的url</param>
      <param name="key">参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.UrlSetParam(System.String,System.String,System.Object)">
      <summary>
            设置Url参数，传入的url是空值时使用当前请求的url
            </summary>
      <example>
            {{ "" | url_set_param: "key", "value" | url }}
            {{ test_url | url_set_param: "key", variable | url }}
            </example>
      <param name="url">来源url，空值时使用当前请求的url</param>
      <param name="key">参数</param>
      <param name="value">参数值，等于null时表示移除</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.UrlRemoveParam(System.String,System.String)">
      <summary>
            删除Url参数，传入的url是空值时使用当前请求的url
            等于UrlSetParam(url, key, null)
            </summary>
      <example>
            {{ "" | url_remove_param: "key" }}
            {{ test_url | url_remove_param: variable }}
            </example>
      <param name="url">来源url，空值时使用当前请求的url</param>
      <param name="key">参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.HtmlAttributes(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            描画Html标签
            </summary>
      <example>
            {{ attribtues | html_attributes }}
            </example>
      <param name="attributes">标签集合</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.Json(System.Object)">
      <summary>
            使用Json序列化对象
            </summary>
      <example>
            {{ obj | json }}
            </example>
      <param name="obj">序列化的对象</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters.BaseFilters.CssRule(System.String,System.String)">
      <summary>
            Css规则
            如果内容不存在则跳过描画
            </summary>
      <example>
            {{ "100px" | css_rule: "width" }}
            返回 "width: 100px;"
            </example>
      <param name="content">
      </param>
      <param name="key">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.CopyrightText">
      <summary>
            显示版权信息文本
            </summary>
      <example>
            {% copyright_text %}
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.CopyrightText.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            显示版权信息文本
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeCssHere">
      <summary>
            在当前位置引用css文件
            </summary>
      <example>
            {% include_css_here "/static/common.base.css/test.css" %}
            {% include_css_here variable %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeCssHere.CssHtmlFormat">
      <summary>
            引用Css的Html格式
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeCssHere.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画引用标签
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeCssLater">
      <summary>
            延迟引用css文件
            需要配合"render_included_css"标签使用
            这个标签会影响上下文内容，不应该在有缓存的模板模块中使用
            </summary>
      <example>
            {% include_css_later "/static/common.base.css/test.css" %}
            {% include_css_later variable %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeCssLater.CssHtmlFormat">
      <summary>
            引用Css的Html格式
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeCssLater.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            添加html到变量中，不重复添加
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeJsHere">
      <summary>
            在当前位置引用js文件
            </summary>
      <example>
            {% include_js_here "/static/common.base.js/test.js" %}
            {% include_js_here variable %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeJsHere.JsHtmlFormat">
      <summary>
            引用Js的Html格式
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeJsHere.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画引用标签
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeJsLater">
      <summary>
            延迟引用javascript文件
            需要配合"render_included_js"标签使用
            这个标签会影响上下文内容，不应该在有缓存的模板模块中使用
            </summary>
      <example>
            {% include_js_later "/static/common.base.js/test.js" %}
            {% include_js_later variable %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeJsLater.JsHtmlFormat">
      <summary>
            引用Js的Html格式
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.IncludeJsLater.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            添加html到变量中，不重复添加
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderExtraMetadata">
      <summary>
            描画额外的meta标签
            描画后会清空原有的内容，可以重复调用
            </summary>
      <example>
            {% render_extra_metadata %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderExtraMetadata.Key">
      <summary>
            变量名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderExtraMetadata.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画额外的meta标签，并清空原有的内容
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedCss">
      <summary>
            描画延迟引用的css资源
            描画后会清空原有的引用，可以重复调用
            </summary>
      <example>
            {% render_included_css %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedCss.Key">
      <summary>
            变量名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedCss.HttpContextKey">
      <summary>
            Http上下文中的变量名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedCss.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画引用的内容，并清空原有的引用
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedJs">
      <summary>
            描画延迟引用的javascript资源
            描画后会清空原有的引用，可以重复调用
            </summary>
      <example>
            {% render_included_js %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedJs.Key">
      <summary>
            变量名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedJs.HttpContextKey">
      <summary>
            Http上下文中的变量名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderIncludedJs.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画引用的内容，并清空原有的引用
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderMetaDescription">
      <summary>
            描画页面描述
            如果有指定关键词时使用指定的描述，否则使用网站设置中的描述
            </summary>
      <example>
            {% render_meta_description %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderMetaDescription.Key">
      <summary>
            变量名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderMetaDescription.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画页面描述
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderMetaKeywords">
      <summary>
            描画页面关键词
            如果有指定关键词时使用指定的关键词，否则使用网站设置中的关键词
            </summary>
      <example>
            {% render_meta_keywords %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderMetaKeywords.Key">
      <summary>
            变量名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderMetaKeywords.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画页面关键词
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderTitle">
      <summary>
            描画当前网站标题
            </summary>
      <example>
            {% render_title %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderTitle.Key">
      <summary>
            变量名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.RenderTitle.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画当前网站标题
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UrlPagination">
      <summary>
            根据Url分页的控件
            需要配合Pagination使用
            </summary>
      <example>
            {% url_pagination response.Pagination %}
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UrlPagination.UrlParam">
      <summary>
            设置到url时使用的参数名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UrlPagination.LastPageAlias">
      <summary>
            最后一页的别名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UrlPagination.LastPageNo">
      <summary>
            最后一页的值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UrlPagination.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画Html到模板
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UseMetaDescription">
      <summary>
            设置页面描述
            需要配合"render_meta_description"标签使用
            </summary>
      <example>
            {% use_meta_description "description" %}
            {% use_meta_description variable %}
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UseMetaDescription.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            设置页面描述
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UseMetaKeywords">
      <summary>
            设置页面关键词
            需要配合"render_meta_keywords"标签使用
            </summary>
      <example>
            {% use_meta_keywords "keywords" %}
            {% use_meta_keywords variable %}
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UseMetaKeywords.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            设置页面关键词
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UseTitle">
      <summary>
            设置网站标题
            需要配合标签"render_title"使用
            </summary>
      <example>
            {% use_title "Plain Text Title" %}
            {% use_title variable_title %}
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.UseTitle.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            设置标题到变量中
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.WebsiteName">
      <summary>
            显示当前网站名称
            </summary>
      <example>
            {% website_name %}
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags.WebsiteName.Render(DotLiquid.Context,System.IO.TextWriter)">
      <summary>
            描画网站名称
            </summary>
      <param name="context">
      </param>
      <param name="result">
      </param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.Components.ExtraConfigKeys.CaptchaExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Components.ExtraConfigKeys.CaptchaExtraConfigKeys.SupportCaptchaAudio">
      <summary>
            是否支持验证码语音
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Components.ExtraConfigKeys.CaptchaExtraConfigKeys.CaptchaAudioPromptCacheTime">
      <summary>
            验证码语音参数的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.Controllers.CaptchaController">
      <summary>
            验证码控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Controllers.CaptchaController.Captcha(System.String)">
      <summary>
            获取验证码
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Controllers.CaptchaController.CaptchaAudio(System.String)">
      <summary>
            获取验证码的语音提示
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager">
      <summary>
            验证码管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.DefaultDigits">
      <summary>
            默认的验证码位数
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.ImageWidthPerChar">
      <summary>
            每个字符的宽度
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.ImageHeight">
      <summary>
            验证码图片的高度
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.ImagePadding">
      <summary>
            图片边距
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.InterferenceLines">
      <summary>
            干扰线数量
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.CharGraphicMaxPadding">
      <summary>
            字符图表的最大拉伸量
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.CharGraphicMaxRotate">
      <summary>
            字符图表的最大旋转量
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.MakeSessionAliveAtLeast">
      <summary>
            生成验证码后最小保留会话的时间
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.SessionItemKeyPrefix">
      <summary>
            保存到会话时使用的键名前缀
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.SupportCaptchaAudio">
      <summary>
            当前环境是否支持验证码语音
            注意：
            目前IIS环境中部署会出现调用TTS时线程锁死无法结束的问题，原因无法找到
            也无法找到任何办法预先检测当前环境是否会出现这个问题
            如果碰到此问题请在网站配置中禁用验证码语音
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.#ctor">
      <summary>
            验证码管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.GetSessionItemKey(System.String)">
      <summary>
            获取保存在会话数据中的键
            </summary>
      <param name="key">原始键</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.Generate(System.String,System.Int32,System.String)">
      <summary>
            生成验证码并储存验证码到会话中
            </summary>
      <param name="key">使用的键名</param>
      <param name="digits">验证码位数</param>
      <param name="chars">使用的字符列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.GetWithoutRemove(System.String)">
      <summary>
            获取当前验证码，但不删除
            这个函数一般只用于单元测试或语音提示，检查请使用Check函数
            </summary>
      <param name="key">使用的键名</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.Check(System.String,System.String)">
      <summary>
            检查验证码是否正确，检查后删除原验证码
            </summary>
      <param name="key">使用的键名</param>
      <param name="actualCode">收到的验证码</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.Managers.CaptchaManager.GetAudioStream(System.String)">
      <summary>
            获取当前验证码的语音提示
            </summary>
      <param name="key">使用的键名</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Form.Attributes.CaptchaFieldAttribute">
      <summary>
            图片验证码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Form.Attributes.CaptchaFieldAttribute.Key">
      <summary>
            用于区分各个验证码的键值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Form.Attributes.CaptchaFieldAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="key">用于区分各个验证码的键值</param>
      <param name="placeHolder">预置文本</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Handlers.CaptchaHandler">
      <summary>
            验证码
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Handlers.CaptchaHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Handlers.CaptchaHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CodeEditor.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldAttributes.CodeEditorAttribute">
      <summary>
            代码编辑器
            字段类型应该是string
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldAttributes.CodeEditorAttribute.Language">
      <summary>
            语言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldAttributes.CodeEditorAttribute.Config">
      <summary>
            自定义配置
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldAttributes.CodeEditorAttribute.#ctor(System.String,System.Int32,System.String,System.String)">
      <summary>
            初始化
            </summary>&gt;
            <param name="name">字段名称</param><param name="rows">行数</param><param name="language">语言</param><param name="config">自定义配置</param></member>
    <member name="T:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldHandlers.CodeEditorHandler">
      <summary>
            代码编辑器的字段处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldHandlers.CodeEditorHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldHandlers.CodeEditorHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.CHF">
      <summary>
            瑞士法郎
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.CNY">
      <summary>
            人民币
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.CZK">
      <summary>
            捷克克朗
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.EUR">
      <summary>
            欧元
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.HKD">
      <summary>
            港元
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.JPY">
      <summary>
            日元
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.KRW">
      <summary>
            韩元
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.RUB">
      <summary>
            卢布
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.THB">
      <summary>
            泰铢
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.TWD">
      <summary>
            新台币
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Currencies.USD">
      <summary>
            美元
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrency">
      <summary>
            货币的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrency.Type">
      <summary>
            货币类型
            格式是3位英文大写（ISO 4217）
            储存时请以这个成员为准
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrency.Prefix">
      <summary>
            货币的前缀
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrency.Suffix">
      <summary>
            货币的后缀
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrencyExtensions">
      <summary>
            货币的扩展函数
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrencyExtensions.RoundDecimals">
      <summary>
            金额保留的小数位
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrencyExtensions.Format(ZKWeb.Plugins.Common.Currency.src.Components.Interfaces.ICurrency,System.Decimal)">
      <summary>
            格式化金额字符串
            前缀 + 金额 + 后缀
            </summary>
      <param name="currency">货币</param>
      <param name="amount">金额</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.GenericConfigs.CurrencySettings">
      <summary>
            货币设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Currency.src.Components.GenericConfigs.CurrencySettings.DefaultCurrency">
      <summary>
            默认货币
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Currency.src.Components.GenericConfigs.CurrencySettings.DefaultLanguageToCurrency">
      <summary>
            默认语言转换到默认货币的索引
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.Components.GenericConfigs.CurrencySettings.GetDefaultCurrencyByDefaultLanguage">
      <summary>
            根据默认语言获取默认货币，找不到时返回USD
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.AdminSettingsPages.CurrencySettingsController">
      <summary>
            货币设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.AdminSettingsPages.CurrencySettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Currency.src.AdminSettingsPages.CurrencySettingsController.Form.DefaultCurrency">
      <summary>
            默认货币
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.AdminSettingsPages.CurrencySettingsController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.AdminSettingsPages.CurrencySettingsController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Domain.Service.CurrencyManager">
      <summary>
            货币管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Currency.src.Domain.Service.CurrencyManager.CurrencyCache">
      <summary>
            货币类型到货币信息的缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.Domain.Service.CurrencyManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.Domain.Service.CurrencyManager.GetDefaultCurrency">
      <summary>
            获取默认的货币信息，找不到时返回null
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.Domain.Service.CurrencyManager.GetCurrency(System.String)">
      <summary>
            获取货币信息，找不到时返回null
            </summary>
      <param name="type">货币类型，区分大小写</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.Domain.Service.CurrencyManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.UIComponents.ListItemProviders.CurrencyListItemProvider">
      <summary>
            货币列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.UIComponents.ListItemProviders.CurrencyListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Currency.src.UIComponents.TemplateFilters.CurrencyFilters">
      <summary>
            货币使用的模板过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.UIComponents.TemplateFilters.CurrencyFilters.DefaultCurrency(System.Object)">
      <summary>
            使用默认货币格式化
            </summary>
      <param name="amount">金额</param>
      <returns>
      </returns>
      <example>{{ amount | default_currency }}</example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Currency.src.UIComponents.TemplateFilters.CurrencyFilters.Currency(System.Object,System.String)">
      <summary>
            使用指定货币格式化
            </summary>
      <param name="amount">金额</param>
      <param name="currencyType">货币</param>
      <returns>
      </returns>
      <example>{{ amount | currency: "CNY" }}</example>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Arabic">
      <summary>
            阿拉伯语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase">
      <summary>
            自定义翻译的控制器基础类，同时也是翻译提供器
            可以在后台设置中设置自定义翻译
            注册时必须添加SingletonReuse属性否则影响性能
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Action">
      <summary>
            列表页的处理函数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.SearchAction">
      <summary>
            搜索请求的处理函数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.DeleteAction">
      <summary>
            删除翻译内容
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.TranslatesFile">
      <summary>
            保存和载入翻译内容的路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Translates">
      <summary>
            翻译内容
            获取时从文件载入，设置时保存到文件
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.CanTranslate(System.String)">
      <summary>
            判断是否可以翻译指定语言
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Translate(System.String)">
      <summary>
            翻译文本
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.ClearCache">
      <summary>
            清理缓存
            手动编辑后可以清理缓存让翻译器读取文件内容
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Form.Controller">
      <summary>
            属于的控制器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Form.OriginalText">
      <summary>
            原文
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Form.TranslatedText">
      <summary>
            译文
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Form.#ctor(ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase)">
      <summary>
            初始化
            </summary>
      <param name="controller">属于的控制器</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases.CustomTranslationControllerBase.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Chinese">
      <summary>
            中文
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Czech">
      <summary>
            捷克语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.English">
      <summary>
            英语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.French">
      <summary>
            法语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.German">
      <summary>
            德语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Greek">
      <summary>
            希腊语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Italian">
      <summary>
            意大利语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Japanese">
      <summary>
            日语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Korean">
      <summary>
            韩语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Polish">
      <summary>
            波兰语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Russian">
      <summary>
            俄语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Spanish">
      <summary>
            西班牙语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Thai">
      <summary>
            泰语
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.TraditionalChinese">
      <summary>
            繁体中文
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.CustomTranslate.src.Domain.Entities.CustomTranslation">
      <summary>
            自定义翻译
            这个实体会保存到文件而不是数据库中
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CustomTranslate.src.Domain.Entities.CustomTranslation.Id">
      <summary>
            原文
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.CustomTranslate.src.Domain.Entities.CustomTranslation.Translated">
      <summary>
            译文
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.CustomTranslate.src.Domain.Entities.CustomTranslation.ToString">
      <summary>
            显示原文
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.Components.Datepicker.DateRange">
      <summary>
            时间范围
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Datepicker.src.Components.Datepicker.DateRange.Begin">
      <summary>
            开始时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Datepicker.src.Components.Datepicker.DateRange.Finish">
      <summary>
            结束时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.Components.Datepicker.DateRange.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.Components.Datepicker.DateRange.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>
            初始化
            </summary>
      <param name="begin">开始时间</param>
      <param name="finish">结束时间</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateFieldAttribute">
      <summary>
            选择日期的字段
            字段类型应该是DateTime或DateTime?
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateFieldAttribute.PlaceHolder">
      <summary>
            预置文本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateFieldAttribute.DateFormat">
      <summary>
            时间格式，默认是"yyyy/MM/dd"
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateFieldAttribute.#ctor(System.String,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="placeHolder">预置文本</param>
      <param name="dateFormat">时间格式，默认是"yyyy/MM/dd"</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateRangeFieldAttribute">
      <summary>
            选择日期范围的字段
            字段类型应该是DateRange
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateRangeFieldAttribute.BeginPlaceHolder">
      <summary>
            开始时间的预置文本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateRangeFieldAttribute.FinishPlaceHolder">
      <summary>
            结束时间的预置文本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateRangeFieldAttribute.DateFormat">
      <summary>
            时间格式，默认是"yyyy/MM/dd"
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes.DateRangeFieldAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="beginPlaceHolder">开始时间的预置文本</param>&gt;
            <param name="finishPlaceHolder">结束时间的预置文本</param><param name="dateFormat">时间格式，默认是"yyyy/MM/dd"</param></member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldHandlers.DateFieldHandler">
      <summary>
            选择日期的字段处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldHandlers.DateFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldHandlers.DateFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldHandlers.DateRangeFieldHandler">
      <summary>
            选择日期范围的字段处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldHandlers.DateRangeFieldHandler.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldHandlers.DateRangeFieldHandler.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.CodeEditor.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.CodeEditor.src.Components.UIComponents.DynamicFormFieldFactories.CodeEditorFactory">
      <summary>
            代码编辑器生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.CodeEditor.src.Components.UIComponents.DynamicFormFieldFactories.CodeEditorFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.DatePicker.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.DatePicker.src.Components.UIComponents.DynamicFormFieldFactories.DateFieldFactory">
      <summary>
            日期范围选择器生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.DatePicker.src.Components.UIComponents.DynamicFormFieldFactories.DateFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.DatePicker.src.Components.UIComponents.DynamicFormFieldFactories.DateRangeFieldFactory">
      <summary>
            日期选择器生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.DatePicker.src.Components.UIComponents.DynamicFormFieldFactories.DateRangeFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.DynamicFormBuilder">
      <summary>
            动态表单构建器
            这个类可以通过Ioc替换，使用时注意要通过Ioc获取
            构建后的表单不带值，需要手动绑定
            </summary>
      <example>
            字段数据示例
            {
            	"Type": "TextBox",
            	"Name": "ExampleField",
            	"Validators": [
            		{ "Type": "Required" }
            	]
            }
            </example>
    </member>
    <member name="P:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.DynamicFormBuilder.FieldDatas">
      <summary>
            字段数据列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.DynamicFormBuilder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.DynamicFormBuilder.AddField(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            根据数据添加字段
            </summary>
      <param name="fieldData">字段数据</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.DynamicFormBuilder.AddFields(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{System.String,System.Object}})">
      <summary>
            根据数据列表添加字段列表
            </summary>
      <param name="fieldDatas">字段数据列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.DynamicFormBuilder.ToForm``1">
      <summary>
            构建表单对象
            </summary>
      <typeparam name="T">表单对象类型</typeparam>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.DynamicFormBuilder.ToForm">
      <summary>
            构建表单对象
            默认使用FormBuilder类型
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.AlertHtmlFieldFactory">
      <summary>
            提示Html生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.AlertHtmlFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxFieldFactory">
      <summary>
            勾选框生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxGroupFieldFactory">
      <summary>
            勾选框组生成器
            </summary>
      <example>
            Type需要使用"全名, 程序集名称"
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxGroupFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxGroupsFieldFactory">
      <summary>
            勾选框组列表生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxGroupsFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxTreeFieldFactory">
      <summary>
            勾选框树生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.CheckBoxTreeFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.DropdownListFieldFactory">
      <summary>
            下拉框生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.DropdownListFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.FileUploaderAsUrlFieldFactory">
      <summary>
            文件上传生成器，以url的形式自动保存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.FileUploaderAsUrlFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.FileUploaderFieldFactory">
      <summary>
            文件上传生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.FileUploaderFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.HiddenFieldFactory">
      <summary>
            隐藏字段生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.HiddenFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.HtmlFieldFactory">
      <summary>
            Html内容生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.HtmlFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.JsonFieldFactory">
      <summary>
            Json字段生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.JsonFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.PasswordFieldFactory">
      <summary>
            密码框生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.PasswordFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.RadioButtonsFieldFactory">
      <summary>
            单选按钮组生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.RadioButtonsFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.RichTextEditorFactory">
      <summary>
            富文本编辑器生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.RichTextEditorFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.SearchableDropdownListFieldFactory">
      <summary>
            可搜索的下拉框生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.SearchableDropdownListFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.TemplateHtmlFieldFactory">
      <summary>
            模板Html生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.TemplateHtmlFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.TextAreaFieldFactory">
      <summary>
            文本区域生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.TextAreaFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.TextBoxFieldFactory">
      <summary>
            文本框生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories.TextBoxFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldValidatorFactories.RegularExpressionValidatorFactory">
      <summary>
            生成表达式验证属性
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldValidatorFactories.RegularExpressionValidatorFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            生成表达式验证属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldValidatorFactories.RequiredValidatorFactory">
      <summary>
            生成必填项属性
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldValidatorFactories.RequiredValidatorFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            生成必填项属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldValidatorFactories.StringLengthValidatorFactory">
      <summary>
            生成长度验证属性
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldValidatorFactories.StringLengthValidatorFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            生成长度验证属性
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.Interfaces.IDynamicFormFieldFactory">
      <summary>
            动态表单字段的生成器
            注册时需要设置键为字段类型
            </summary>
      <example>
            注册到容器的例子
            [ExportMany(ContractKey = "TextBox")]
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.Interfaces.IDynamicFormFieldFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段属性
            </summary>
      <param name="fieldData">字段数据</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.Interfaces.IDynamicFormFieldValidatorFactory">
      <summary>
            动态表单字段验证器的生成器
            注册时需要设置键为验证器类型
            </summary>
      <example>
            注册到容器的例子
            [ExportMany(ContractKey = "Required")]
            </example>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.Interfaces.IDynamicFormFieldValidatorFactory.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            创建表单字段验证器属性
            </summary>
      <param name="validatorData">验证器数据</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.Interfaces.IDynamicFormModifier">
      <summary>
            修改构建后的动态表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.Interfaces.IDynamicFormModifier.Modify(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder,System.Collections.Generic.IList{System.Collections.Generic.IDictionary{System.String,System.Object}})">
      <summary>
            修改表单
            </summary>
      <param name="form">表单</param>
      <param name="fieldDatas">字段数据列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Components.ExtraConfigKeys.GenericConfigExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.GenericClass.src.Components.ExtraConfigKeys.GenericConfigExtraConfigKeys.ClassCacheTime">
      <summary>
            通用分类列表的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1">
      <summary>
            通用分类的增删查改控制器的基础类
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.GetBatchActionIds">
      <summary>
            获取批量操作的数据Id列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.TableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form">
      <summary>
            添加和编辑使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.Type">
      <summary>
            分类类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.ParentClass">
      <summary>
            上级分类名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="type">分类类型</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.GetParentClass">
      <summary>
            根据当前请求传入的parentId参数获取上级分类，不存在时返回null
            这个函数只在添加时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.OnBind(ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass)">
      <summary>
            从数据绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases.GenericClassControllerBase`1.Form.OnSubmit(ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Controllers.DefaultClassController">
      <summary>
            默认分类的控制器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass">
      <summary>
            通用分类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.Id">
      <summary>
            分类Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.Type">
      <summary>
            分类类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.Parent">
      <summary>
            上级分类，根节点时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities.GenericClass})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Domain.Repositories.GenericClassRepository">
      <summary>
            通用分类的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager">
      <summary>
            通用分类管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.ClassCacheTime">
      <summary>
            通用分类列表的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.ClassCache">
      <summary>
            通用分类的缓存，{ Id: 分类 }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.ClassListCache">
      <summary>
            通用分类列表的缓存，{ 类型: 分类列表 }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.ClassTreeCache">
      <summary>
            通用分类树的缓存，{ 类型: 分类树 }
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.IsAllClassesTypeEqualTo(System.Collections.Generic.IList{System.Guid},System.String)">
      <summary>
            检查指定的分类列表是否都属于指定的类型
            如果分类不存在会被跳过
            常用于防止越权操作
            </summary>
      <param name="ids">分类的Id列表</param>
      <param name="type">分类类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.GetWithCache(System.Guid)">
      <summary>
            获取分类，不存在或已删除时返回null
            </summary>
      <param name="classId">分类Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.GetManyWithCache(System.String)">
      <summary>
            获取指定类型的分类列表，按显示顺序返回
            </summary>
      <param name="type">分类类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.GetTreeWithCache(System.String)">
      <summary>
            获取指定类型的分类树
            </summary>
      <param name="type">分类类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services.GenericClassManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.UIComponents.ListItemProviders.GenericClassListItemProvider`1">
      <summary>
            通用分类列表项的提供器
            </summary>
      <typeparam name="TController">定义通用分类的控制器类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.UIComponents.ListItemProviders.GenericClassListItemProvider`1.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericClass.src.UIComponents.ListItemProviders.GenericClassListItemTreeProvider`1">
      <summary>
            通用分类列表树的提供器
            </summary>
      <typeparam name="TController">定义通用分类的控制器类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericClass.src.UIComponents.ListItemProviders.GenericClassListItemTreeProvider`1.GetTree">
      <summary>
            获取选项列表树
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Components.ScheduledTasks.GenericRecordCleaner">
      <summary>
            清理过期的通用记录
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Components.ScheduledTasks.GenericRecordCleaner.Key">
      <summary>
            任务键名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Components.ScheduledTasks.GenericRecordCleaner.ShouldExecuteNow(System.DateTime)">
      <summary>
            每小时执行一次
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Components.ScheduledTasks.GenericRecordCleaner.Execute">
      <summary>
            清理过期的通用记录
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord">
      <summary>
            通用记录
            删除时将直接从数据库中删除
            这个类型只应该用于记录性的数据，不应该储存有业务关联的数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.Id">
      <summary>
            记录Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.Type">
      <summary>
            记录类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.ReleatedId">
      <summary>
            关联的数据Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.Creator">
      <summary>
            创建记录的用户，系统记录时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.KeepUntil">
      <summary>
            过期时间，等于null时永久保留
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.Content">
      <summary>
            记录内容
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.ExtraData">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities.GenericRecord})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Repositories.GenericRecordRepository">
      <summary>
            通用记录的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Services.GenericRecordManager">
      <summary>
            通用记录管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Services.GenericRecordManager.AddRecord(System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Nullable{System.TimeSpan},System.Object)">
      <summary>
            添加纪录
            </summary>
      <param name="type">记录类型</param>
      <param name="releatedId">关联数据Id，可以等于null</param>
      <param name="creatorId">创建人用户Id，可以等于null</param>
      <param name="content">记录内容</param>
      <param name="keepTime">保留时间，等于null时永久保留</param>
      <param name="extraData">附加数据</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Services.GenericRecordManager.FindRecords(System.String)">
      <summary>
            根据类型查找记录
            默认按Id倒序排列
            </summary>
      <param name="type">记录类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Services.GenericRecordManager.FindRecords(System.String,System.Nullable{System.Guid})">
      <summary>
            根据类型和关联数据Id查找记录
            默认按Id倒序排列
            </summary>
      <param name="type">记录类型</param>
      <param name="releatedId">关联数据Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Services.GenericRecordManager.ClearExpiredRecords">
      <summary>
            清理过期的记录
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Structs.GenericRecordExtraData">
      <summary>
            通用记录的附加数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Components.ExtraConfigKeys.GenericTagExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.GenericTag.src.Components.ExtraConfigKeys.GenericTagExtraConfigKeys.TagCacheTime">
      <summary>
            通用标签列表的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1">
      <summary>
            通用标签控制器的基础类
            </summary>
      <typeparam name="TController">继承这个类的类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.GetBatchActionIds">
      <summary>
            获取批量操作的数据Id列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.TableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag}})">
      <summary>
            选择字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form">
      <summary>
            添加和编辑使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form.Type">
      <summary>
            标签类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="type">标签类型</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form.OnBind(ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases.GenericTagControllerBase`1.Form.OnSubmit(ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Controllers.DefaultTag">
      <summary>
            默认标签
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag">
      <summary>
            通用标签
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.Id">
      <summary>
            标签Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.Type">
      <summary>
            标签类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.Name">
      <summary>
            标签名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities.GenericTag})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Domain.Repositories.GenericTagRepository">
      <summary>
            通用标签的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager">
      <summary>
            通用标签管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.TagCacheTime">
      <summary>
            通用标签列表的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.TagCache">
      <summary>
            通用标签的缓存，{ Id: 标签 }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.TagListCache">
      <summary>
            通用标签列表的缓存，{ 类型: 标签列表 }
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.IsAllTagsTypeEqualTo(System.Collections.Generic.IList{System.Guid},System.String)">
      <summary>
            检查指定的标签列表是否都属于指定的类型
            如果标签不存在会被跳过
            常用于防止越权操作
            </summary>
      <param name="ids">标签的Id列表</param>
      <param name="type">标签类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.GetWithCache(System.Guid)">
      <summary>
            获取指定标签，不存在或已删除时返回null
            </summary>
      <param name="tagId">标签Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.GetManyWithCache(System.String)">
      <summary>
            获取指定类型的标签列表
            按显示顺序返回，不包括已删除的标签
            </summary>
      <param name="type">标签类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services.GenericTagManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.GenericTag.src.UIComponents.ListItemProviders.GenericTagListItemProvider`1">
      <summary>
            通用标签列表的提供器
            </summary>
      <typeparam name="TController">定义通用标签的控制器类型</typeparam>
    </member>
    <member name="M:ZKWeb.Plugins.Common.GenericTag.src.UIComponents.ListItemProviders.GenericTagListItemProvider`1.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.GenericConfigs.LanguageSwitcherSettings">
      <summary>
            语言切换设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.GenericConfigs.LanguageSwitcherSettings.SwitchableLanguages">
      <summary>
            可以提供切换的语言列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.GenericConfigs.LanguageSwitcherSettings.DisplaySwitcherOnFrontPages">
      <summary>
            在前台页面显示语言切换器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.GenericConfigs.LanguageSwitcherSettings.DisplaySwitcherOnAdminPanel">
      <summary>
            在后台页面显示语言切换器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.GenericConfigs.LanguageSwitcherSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.GenericConfigs.LanguageSwitcherSettings.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.Controllers.LanguageSwitcherApiController">
      <summary>
            Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.LanguageSwitcher.src.Controllers.LanguageSwitcherApiController.GetSwitchableLanguages">
      <summary>
            获取可切换的语言列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.LanguageSwitcher.src.Controllers.LanguageSwitcherApiController.SwitchToLanguage(System.String)">
      <summary>
            切换到指定语言
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages.LanguageSwitcherSettingsForm">
      <summary>
            语言切换设置的编辑页
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages.LanguageSwitcherSettingsForm.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages.LanguageSwitcherSettingsForm.Form.SwitchableLanguages">
      <summary>
            可以提供切换的语言列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages.LanguageSwitcherSettingsForm.Form.DisplaySwitcherOnFrontPages">
      <summary>
            在前台页面显示语言切换器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages.LanguageSwitcherSettingsForm.Form.DisplaySwitcherOnAdminPanel">
      <summary>
            在后台页面显示语言切换器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages.LanguageSwitcherSettingsForm.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages.LanguageSwitcherSettingsForm.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.LanguageSwitcher.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.LanguageSwitcher.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.CrudMenuPageControllerBase`2">
      <summary>
            支持增删查改数据的菜单页面构建器
            需要再次经过包装，请勿直接使用
            </summary>
      <typeparam name="TEntity">实体类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.CrudMenuPageControllerBase`2.Group">
      <summary>
            所属的菜单分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.CrudMenuPageControllerBase`2.GroupIconClass">
      <summary>
            菜单分组图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.CrudMenuPageControllerBase`2.IconClass">
      <summary>
            菜单项图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.CrudMenuPageControllerBase`2.RequiredPrivileges">
      <summary>
            显示此页面要求的权限列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.CrudMenuPageControllerBase`2.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.CrudMenuPageControllerBase`2.Setup(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup})">
      <summary>
            设置显示的菜单项
            </summary>
      <param name="groups">菜单项分组列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.FormMenuPageControllerBase">
      <summary>
            带单个表单的菜单页面控制器的基础类
            需要再次经过包装，请勿直接使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.FormMenuPageControllerBase.TemplatePath">
      <summary>
            模板路径
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.FormMenuPageControllerBase.GetForm">
      <summary>
            获取表单构建器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.FormMenuPageControllerBase.Action">
      <summary>
            请求的处理函数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase">
      <summary>
            简单的菜单页面控制器的基础类
            需要再次经过包装，请勿直接使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.Group">
      <summary>
            所属的菜单分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.GroupIconClass">
      <summary>
            菜单分组图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.Name">
      <summary>
            菜单项名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.IconClass">
      <summary>
            菜单项图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.Url">
      <summary>
            Url地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.RequiredUserType">
      <summary>
            允许显示此页面的用户类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.RequiredPrivileges">
      <summary>
            显示此页面要求的权限列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.Action">
      <summary>
            对应的处理函数，会自动进行权限检查
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.Setup(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup})">
      <summary>
            设置显示的菜单项
            </summary>
      <param name="groups">菜单项分组列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases.SimpleMenuPageControllerBase.GetPrivileges">
      <summary>
            获取权限列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuItems.Extensions.MenuItemGroupExtensions">
      <summary>
            菜单页的接口的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuItems.Extensions.MenuItemGroupExtensions.SetupFrom(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup},ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage)">
      <summary>
            设置显示的菜单项
            </summary>
      <param name="groups">菜单项分组列表</param>
      <param name="page">菜单页</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage">
      <summary>
            菜单页的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage.Group">
      <summary>
            所属的菜单分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage.GroupIconClass">
      <summary>
            菜单分组图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage.Name">
      <summary>
            菜单项名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage.IconClass">
      <summary>
            菜单项图标
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage.Url">
      <summary>
            Url地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage.RequiredUserType">
      <summary>
            允许显示此页面的用户类型
            例如typeof(IAmAdmin)
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuPage.RequiredPrivileges">
      <summary>
            显示此页面要求的权限列表
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuProvider">
      <summary>
            菜单分组和菜单项的提供器接口
            这个接口需要再次继承，请勿直接使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces.IMenuProvider.Setup(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup})">
      <summary>
            设置显示的菜单项
            </summary>
      <param name="groups">菜单项分组列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings">
      <summary>
            伪静态设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings.EnablePesudoStatic">
      <summary>
            启用伪静态
            默认启用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings.PesudoStaticExtension">
      <summary>
            伪静态扩展名
            默认".html"
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings.PesudoStaticParamDelimiter">
      <summary>
            伪静态参数分隔符
            默认"."
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings.PesudoStaticPolicy">
      <summary>
            伪静态策略
            默认黑名单策略
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings.IncludeUrlPaths">
      <summary>
            包含的Url路径
            在白名单策略下生效
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings.ExcludeUrlPaths">
      <summary>
            排除的Url路径
            在黑名单策略下生效
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs.PesudoStaticSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.HttpRequestHandlers.PesudoStaticHandlerWrapper">
      <summary>
            伪静态使用的Http请求处理器
            完整规则请查看"PesudoStaticUrlFilter"的说明
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Components.HttpRequestHandlers.PesudoStaticHandlerWrapper.WrapHandlerAction(System.Action)">
      <summary>
            包装请求
            </summary>
      <param name="action">请求函数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Enums.PesudoStaticPolicies">
      <summary>
            伪静态策略
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Enums.PesudoStaticPolicies.BlackListPolicy">
      <summary>
            黑名单策略
            除了排除的地址以外都启用伪静态
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Enums.PesudoStaticPolicies.WhiteListPolicy">
      <summary>
            白名单策略
            只有包含的地址启用伪静态
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Wrappers.PesudoStaticHttpContext">
      <summary>
            伪静态使用的Http上下文
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Wrappers.PesudoStaticHttpContext.#ctor(ZKWebStandard.Web.IHttpContext,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="originalContext">原始的Http上下文</param>
      <param name="path">解析后的请求路径</param>
      <param name="queryString">解析后的请求参数</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Wrappers.PesudoStaticHttpRequest">
      <summary>
            伪静态使用的Http请求
            用于重载路径相关的成员
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Wrappers.PesudoStaticHttpRequest.#ctor(ZKWebStandard.Web.IHttpRequest,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="originalRequest">原始的http请求</param>
      <param name="path">解析后的请求路径</param>
      <param name="queryString">解析后的请求参数</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Wrappers.PesudoStaticHttpResponse">
      <summary>
            伪静态使用的Http回应
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Wrappers.PesudoStaticHttpResponse.#ctor(ZKWebStandard.Web.IHttpResponse,ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Wrappers.PesudoStaticHttpContext)">
      <summary>
            初始化
            </summary>
      <param name="originalResponse">原始的回应</param>
      <param name="parentContext">所属的Http上下文</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Components.UrlFilters.PesudoStaticUrlFilter">
      <summary>
            伪静态使用的Url过滤器
            </summary>
      <example>
            规则
            - 如果路径是空，跳过
            - 如果路径是"/"，跳过
            - 如果路径以"#"开始，跳过
            - 如果路径包含"://"，跳过
            - 如果路径已经有后缀名，跳过
            - 如果路径的最后一段是空，跳过（以"/"结束时）
            - 如果伪静态未启用，跳过
            - 如果路径的最后一段包含分隔符，跳过
            - 判断伪静态策略
              - 黑名单策略: 如果路径在排除路径中，跳过
              - 白名单策略: 如果路径不在包括路径中，跳过
            - 路径规则
              - 无参数时: {原始路径}{后缀名}
              - 只有id参数时: {原始路径}{分隔符}{id}{后缀名}
              - 包含其他参数时: {原始路径}{分隔符}({参数名称}{分隔符}{参数值}...){后缀名}
              - 如果路径中的参数或它的值包含分隔符，该参数不参与到伪静态路径中
              - 如果路径中的参数或它的值经过url编码后和原值不一致，该参数不参与到伪静态路径中
                - 这样做的原因是服务器会允许参数中有经过编码后的特殊字符
                - 但不允许路径中有经过编码后的特殊字符，或双重编码
            
            示例
            / =&gt; /
            /user/login =&gt; /user/login.html
            /example/view?id=1 =&gt; /example/view.1.html
            /example/list?tag=123＆class=158 =&gt; /example/list.tag.123.class.158.html
            /example/list?key=1-1＆class=123 =&gt; /example/list.class.123.html?key=1-1
            </example>
    </member>
    <member name="F:ZKWeb.Plugins.Common.PesudoStatic.src.Components.UrlFilters.PesudoStaticUrlFilter.IdParameterName">
      <summary>
            Id参数的名称
            只支持小写的"id"
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Components.UrlFilters.PesudoStaticUrlFilter.Filter(System.String@)">
      <summary>
            过滤Url
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController">
      <summary>
            伪静态设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.EnablePesudoStatic">
      <summary>
            启用伪静态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.PesudoStaticExtension">
      <summary>
            伪静态扩展名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.PesudoStaticParamDelimiter">
      <summary>
            伪静态参数分隔符
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.PesudoStaticPolicy">
      <summary>
            伪静态策略
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.IncludeUrlPaths">
      <summary>
            包含的Url路径
            一行一个，仅在白名单策略下生效
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.ExcludeUrlPaths">
      <summary>
            排除的Url路径
            一行一个，仅在黑名单策略下生效
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers.PesudoStaticSettingsController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.AE">
      <summary>
            阿联酋
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country">
      <summary>
            国家/行政区
            注册时请使用使用SingletonReuse，以支持在其他插件添加地区
            </summary>
      <example>
            [ExportMany, SingletonReuse]
            public class China : Country { }
            </example>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.Name">
      <summary>
            国家名称
            格式是两位大写英文（ISO 3166）
            储存时请以这个成员为准
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.RegionsCache">
      <summary>
            地区列表的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.RegionsTreeCache">
      <summary>
            地区树的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.RegionsTreeNodeCache">
      <summary>
            地区Id到地区树节点的缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.GetRegions">
      <summary>
            获取地区列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.GetRegionsTree">
      <summary>
            获取地区树
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.GetRegionsTreeNode(System.Int64)">
      <summary>
            根据地区Id获取地区的树节点，找不到时返回null
            </summary>
      <param name="regionId">地区Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases.Country.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.CN">
      <summary>
            中国
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.CZ">
      <summary>
            捷克
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.DE">
      <summary>
            德国
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.ES">
      <summary>
            西班牙
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.FR">
      <summary>
            法国
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.GB">
      <summary>
            英国
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.GR">
      <summary>
            希腊
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.HK">
      <summary>
            香港特别行政区
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.IT">
      <summary>
            意大利
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.JP">
      <summary>
            日本
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.KR">
      <summary>
            韩国
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.PL">
      <summary>
            波兰
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.RU">
      <summary>
            俄罗斯
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.TH">
      <summary>
            泰国
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.TW">
      <summary>
            台湾
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Countries.US">
      <summary>
            美国
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.GenericConfigs.RegionSettings">
      <summary>
            地区设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.GenericConfigs.RegionSettings.DefaultCountry">
      <summary>
            默认国家/行政区
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.GenericConfigs.RegionSettings.DisplayCountryDropdown">
      <summary>
            是否显示国家下拉框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.GenericConfigs.RegionSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Region.src.Components.GenericConfigs.RegionSettings.DefaultLanguageToCountry">
      <summary>
            默认语言转换到默认国家/行政区的索引
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.GenericConfigs.RegionSettings.GetDefaultCountryByDefaultLanguage">
      <summary>
            根据默认语言获取默认国家/行政区，找不到时返回US
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Regions.CountryAndRegion">
      <summary>
            国家和地区
            地区联动下拉框使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Regions.CountryAndRegion.Country">
      <summary>
            国家
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Regions.CountryAndRegion.RegionId">
      <summary>
            地区Id
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.Regions.CountryAndRegion.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Components.Regions.CountryAndRegion.#ctor(System.String,System.Nullable{System.Int64})">
      <summary>
            初始化
            </summary>
      <param name="country">国家Id</param>
      <param name="regionId">地区Id</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Regions.Region">
      <summary>
            地区
            这个对象中的值生成后不应该修改
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Regions.Region.Id">
      <summary>
            地区Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Regions.Region.ParentId">
      <summary>
            上级地区的Id，没有时等于0
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Components.Regions.Region.Name">
      <summary>
            地区名称
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Translates.en_US">
      <summary>
            英文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Extensions.RegionNodeException">
      <summary>
            地区节点的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Extensions.RegionNodeException.GetFullname(ZKWebStandard.Utils.ITreeNode{ZKWeb.Plugins.Common.Region.src.Components.Regions.Region})">
      <summary>
            获取地区节点的完整名称
            </summary>
      <param name="node">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Controllers.CountrySettingsController">
      <summary>
            地区设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Controllers.CountrySettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Controllers.CountrySettingsController.Form.DefaultCountry">
      <summary>
            默认国家/行政区
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.Controllers.CountrySettingsController.Form.DisplayCountryDropdown">
      <summary>
            显示国家下拉框
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Controllers.CountrySettingsController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Controllers.CountrySettingsController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Controllers.RegionApiController">
      <summary>
            地区使用的Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Controllers.RegionApiController.CountryInfo">
      <summary>
            获取国家信息
            返回默认国家和国家列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Controllers.RegionApiController.RegionTreeFromCountry">
      <summary>
            获取指定国家的地区树
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.Domain.Services.RegionManager">
      <summary>
            地区管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Common.Region.src.Domain.Services.RegionManager.CountryCache">
      <summary>
            国家/行政区名称到信息的缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Domain.Services.RegionManager.GetDefaultCountry">
      <summary>
            获取默认的国家/行政区信息，找不到时返回null
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Domain.Services.RegionManager.GetCountry(System.String)">
      <summary>
            获取国家/行政区信息，找不到时返回null
            </summary>
      <param name="name">国家/行政区名称，区分大小写</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.Domain.Services.RegionManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldAttributes.RegionEditorAttribute">
      <summary>
            地区联动下拉框的属性
            类型请使用 CountryAndRegion
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldAttributes.RegionEditorAttribute.DisplayCountryDropdown">
      <summary>
            是否显示国家下拉框，null时使用默认设置
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldAttributes.RegionEditorAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldAttributes.RegionEditorAttribute.#ctor(System.String,System.Boolean)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="displayCountryDropdown">是否显示国家下拉框</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldHandlers.RegionEditor">
      <summary>
            地区联动下拉框
            成员类型请使用CountryAndRegion
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldHandlers.RegionEditor.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldHandlers.RegionEditor.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.Region.src.UIComponents.ListItemProviders.CountryListItemProvider">
      <summary>
            国家/行政区列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.Region.src.UIComponents.ListItemProviders.CountryListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.SerialGenerate.src.Components.SerialGenerateHandlers.Interfaces.ISerialGenerateHandler">
      <summary>
            生成序列号时的处理器
            可用于修改默认生成的序列号
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.SerialGenerate.src.Components.SerialGenerateHandlers.Interfaces.ISerialGenerateHandler.OnGenerate(System.Object,System.String@)">
      <summary>
            生成时的处理
            </summary>
      <param name="data">数据</param>
      <param name="serial">原有的序列号</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.SerialGenerate.src.Components.SerialGenerate.SerialGenerator">
      <summary>
            序列号生成器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.SerialGenerate.src.Components.SerialGenerate.SerialGenerator.GenerateFor(System.Object)">
      <summary>
            给指定的数据生成序列号
            默认序列号是 年月日+8位随机数字，共16位
            </summary>
      <param name="data">数据</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.SerialGenerate.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.SerialGenerate.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.SerialGenerate.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.SerialGenerate.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Components.AjaxTableHandlers.AddColumnsToUserManageApp">
      <summary>
            添加以下列到用户管理
            - 电话
            - 手机
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Components.EntityOperationHandlers.RemoveContactBeforeUserDelete">
      <summary>
            在用户删除前删除关联的联系信息
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Components.Translates.ja_JP">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager">
      <summary>
            添加联系信息到后台的用户编辑页中
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.Tel">
      <summary>
            电话
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.Mobile">
      <summary>
            手机
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.QQ">
      <summary>
            QQ
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.Email">
      <summary>
            邮箱
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.Address">
      <summary>
            地址
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.OnCreated(ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm)">
      <summary>
            创建表单时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.OnBind(ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm,ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.OnSubmit(ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm,ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks.AddContactEditorToUserManager.OnSubmitSaved(ZKWeb.Plugins.Common.Admin.src.Controllers.UserCrudController.BaseForm,ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            保存数据后的处理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController">
      <summary>
            编辑自身联系信息的表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form.Tel">
      <summary>
            电话
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form.Mobile">
      <summary>
            手机
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form.QQ">
      <summary>
            QQ
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form.Email">
      <summary>
            邮箱
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form.Address">
      <summary>
            地址
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.Controllers.ContactInfoController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact">
      <summary>
            用户的联系信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.Id">
      <summary>
            联系信息Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.User">
      <summary>
            关联的用户
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.Tel">
      <summary>
            电话
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.Mobile">
      <summary>
            手机
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.QQ">
      <summary>
            QQ
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.Email">
      <summary>
            邮箱
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.Address">
      <summary>
            地址
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Domain.Repositories.UserContactRepository">
      <summary>
            用户联系信息的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserContact.src.Domain.Services.UserContactManager">
      <summary>
            用户联系信息管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.Domain.Services.UserContactManager.GetContact(System.Guid)">
      <summary>
            获取用户的联系信息，没有时新建返回
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.Domain.Services.UserContactManager.GetContacts(System.Collections.Generic.IList{System.Guid})">
      <summary>
            批量获取联系信息
            </summary>
      <param name="userIds">用户Id列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserContact.src.Domain.Services.UserContactManager.SetContact(System.Guid,System.Action{ZKWeb.Plugins.Common.UserContact.src.Domain.Entities.UserContact})">
      <summary>
            设置用户的联系信息，没有时新建
            </summary>
      <param name="userId">用户Id</param>
      <param name="update">更新联系信息的函数</param>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.CrudUserPanelControllerBase`2">
      <summary>
            支持增删查改数据的后台页面控制器
            </summary>
      <typeparam name="TEntity">数据类型</typeparam>
      <typeparam name="TPrimaryKey">主键类型</typeparam>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.CrudUserPanelControllerBase`2.RequiredUserType">
      <summary>
            默认需要用户登录
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.CrudUserPanelControllerBase`2.RequiredPrivileges">
      <summary>
            默认不需要其他权限，但要做好数据隔离
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.CrudUserPanelControllerBase`2.ListTemplatePath">
      <summary>
            列表页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.CrudUserPanelControllerBase`2.AddTemplatePath">
      <summary>
            添加页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.CrudUserPanelControllerBase`2.EditTemplatePath">
      <summary>
            编辑页的模板路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.CrudUserPanelControllerBase`2.ConcernEntityOwnership">
      <summary>
            默认需要按实体的所属用户进行隔离
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.FormUserPanelControllerBase">
      <summary>
            带单个表单的用户中心页面控制器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.FormUserPanelControllerBase.RequiredUserType">
      <summary>
            默认需要用户登录
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.FormUserPanelControllerBase.RequiredPrivileges">
      <summary>
            默认不需要其他权限，但要做好数据隔离
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.FormUserPanelControllerBase.TemplatePath">
      <summary>
            模板路径
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.SimpleUserPanelControllerBase">
      <summary>
            简单的用户中心页面控制器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.SimpleUserPanelControllerBase.RequiredUserType">
      <summary>
            默认需要用户登录
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases.SimpleUserPanelControllerBase.RequiredPrivileges">
      <summary>
            默认不需要其他权限，但要做好数据隔离
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangeAvatarForm">
      <summary>
            修改自身头像的表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangeAvatarForm.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangeAvatarForm.Form.Avatar">
      <summary>
            头像
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangeAvatarForm.Form.DeleteAvatar">
      <summary>
            删除头像
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangeAvatarForm.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangeAvatarForm.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangePasswordForm">
      <summary>
            修改自身密码的表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangePasswordForm.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangePasswordForm.Form.OldPassword">
      <summary>
            原密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangePasswordForm.Form.Password">
      <summary>
            密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangePasswordForm.Form.ConfirmPassword">
      <summary>
            确认密码
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangePasswordForm.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserPanel.src.Controllers.ChangePasswordForm.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Controllers.UserPanelApiController">
      <summary>
            Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserPanel.src.Controllers.UserPanelApiController.UserPanelMenuGroups">
      <summary>
            获取用户中心的菜单项分组列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserPanel.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.MenuPages.UIComponents.Interfaces.IUserPanelMenuProvider">
      <summary>
            用户中心菜单项的提供器接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Common.UserPanel.src.UIComponents.UserPanelMenuProviders.UserPanelIndex">
      <summary>
            在会员中心中添加以下菜单项
            会员中心
            - 首页
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Common.UserPanel.src.UIComponents.UserPanelMenuProviders.UserPanelIndex.Setup(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup})">
      <summary>
            设置显示的菜单项
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler">
      <summary>
            支付宝扫码支付的处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.Type">
      <summary>
            接口类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiDataEditing">
      <summary>
            后台编辑表单使用的接口数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.OnFormCreated(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm)">
      <summary>
            后台编辑表单创建后的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.OnFormBind(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单绑定时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.OnFormSubmit(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单保存时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.CalculatePaymentFee(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi,System.Decimal,System.Decimal@)">
      <summary>
            计算支付手续费
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collection.HtmlString@)">
      <summary>
            获取支付Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            调用发货接口
            支付宝扫码支付不需要调发货接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiData">
      <summary>
            接口数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiData.PartnerId">
      <summary>
            商户Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiData.PayeePartnerId">
      <summary>
            收款商户Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiData.AppId">
      <summary>
            AppId
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiData.PartnerKey">
      <summary>
            商户密钥
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiData.ReturnDomain">
      <summary>
            返回域名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers.AlipayQRCodeApiHandler.ApiData.GetPartnerKeyBody">
      <summary>
            获取商户密钥，除去头部和尾部
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Controller.AlipayMobileController">
      <summary>
            移动端支付宝控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Controller.AlipayMobileController.GetRequestParameters">
      <summary>
            获取请求参数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Controller.AlipayMobileController.QRCodePayNotify">
      <summary>
            支付宝扫码支付的异步通知
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Controller.AlipayMobileController.UpdateTransactionState(System.Guid)">
      <summary>
            更新扫码支付的交易状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager">
      <summary>
            移动端支付宝管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.UseSandBox">
      <summary>
            是否使用沙箱
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.SignType">
      <summary>
            签名类型, 目前使用的是RSA + SHA1
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.AlipayGatewayUrl">
      <summary>
            支付宝开放平台网关的Url
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.SandBoxAlipayGatewayUrl">
      <summary>
            沙箱支付宝开放平台网关的Url
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.AlipayPublicKey">
      <summary>
            支付宝的RSA公钥
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.SandBoxAlipayPublicKey">
      <summary>
            沙箱支付宝的RSA公钥
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.AlipayQRCodePayNotifyUrl">
      <summary>
            支付宝扫码支付的异步通知Url
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.GetQRCodePaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            获取扫码支付的Html
            </summary>
      <param name="transaction">支付交易</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.UpdateTransactionState(System.Guid)">
      <summary>
            调用支付宝的查询接口查询交易状态
            根据返回结果更新交易
            </summary>
      <param name="transactionId">交易Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services.AlipayMobileManager.ProcessNotify(System.Collections.Generic.SortedDictionary{System.String,System.String},System.Guid@)">
      <summary>
            处理支付宝返回的异步通知
            </summary>
      <param name="parameters">参数</param>
      <param name="transactionId">对应的交易Id</param>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler">
      <summary>
            支付宝接口的处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.Type">
      <summary>
            接口类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.ApiDataEditing">
      <summary>
            后台编辑表单使用的接口数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.OnFormCreated(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm)">
      <summary>
            后台编辑表单创建后的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.OnFormBind(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单绑定时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.OnFormSubmit(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单保存时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.CalculatePaymentFee(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi,System.Decimal,System.Decimal@)">
      <summary>
            计算支付手续费
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collection.HtmlString@)">
      <summary>
            获取支付Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            调用发货接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.ApiData">
      <summary>
            接口数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.ApiData.PartnerId">
      <summary>
            商户Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.ApiData.PayeePartnerId">
      <summary>
            收款商户Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.ApiData.PartnerKey">
      <summary>
            商户密钥
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.ApiData.ServiceType">
      <summary>
            服务类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayApiHandler.ApiData.ReturnDomain">
      <summary>
            返回域名
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayServiceTypes">
      <summary>
            支付宝的服务类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayServiceTypes.ImmediateArrival">
      <summary>
            即时到账
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayServiceTypes.SecuredTransaction">
      <summary>
            担保交易
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayServiceTypes.DualInterface">
      <summary>
            双接口
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers.AlipayServiceTypes.WapPay">
      <summary>
            手机支付
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Alipay.src.Controller.AlipayController">
      <summary>
            支付宝功能使用的控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Controller.AlipayController.GetRequestParameters">
      <summary>
            获取请求参数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Controller.AlipayController.Return">
      <summary>
            支付宝的返回Url
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Controller.AlipayController.Notify">
      <summary>
            支付宝的异步通知Url
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Alipay.src.Domain.Services.AlipayManager">
      <summary>
            支付宝管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Alipay.src.Domain.Services.AlipayManager.AlipayReturnUrl">
      <summary>
            支付宝的返回Url
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Alipay.src.Domain.Services.AlipayManager.AlipayNotifyUrl">
      <summary>
            支付宝的异步通知Url
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Domain.Services.AlipayManager.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            获取支付Html
            </summary>
      <param name="transaction">支付交易</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Domain.Services.AlipayManager.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            调用支付宝的发货接口
            </summary>
      <param name="transaction">支付交易</param>
      <param name="logisticsName">物流名称</param>
      <param name="invoiceNo">快递单编号</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Alipay.src.Domain.Services.AlipayManager.ProcessReponse(System.Collections.Generic.SortedDictionary{System.String,System.String},System.Boolean,System.Guid@)">
      <summary>
            处理支付宝的返回结果
            </summary>
      <param name="parameters">参数列表</param>
      <param name="isNotify">是否异步返回的结果</param>
      <param name="transactionId">对应的交易Id</param>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Cash.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.OnArrive.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler">
      <summary>
            Ping++接口的处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.Type">
      <summary>
            接口类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiDataEditing">
      <summary>
            后台编辑表单使用的接口数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.OnFormCreated(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm)">
      <summary>
            后台编辑表单创建后的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.OnFormBind(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单绑定时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.OnFormSubmit(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单保存时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.CalculatePaymentFee(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi,System.Decimal,System.Decimal@)">
      <summary>
            计算支付手续费
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collection.HtmlString@)">
      <summary>
            获取支付Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            调用发货接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData">
      <summary>
            接口数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.TradeSecretKey">
      <summary>
            交易密钥
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.PingppAppId">
      <summary>
            App Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.PingppRsaPublicKey">
      <summary>
            Ping++RSA公钥
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.PartnerRsaPrivateKey">
      <summary>
            商户RSA私钥
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.ReturnDomain">
      <summary>
            返回域名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.PaymentChannels">
      <summary>
            支付渠道
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.WeChatOpenId">
      <summary>
            微信Open Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.WeChatNoCredit">
      <summary>
            微信限制使用信用卡
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.FqlChildMerchantId">
      <summary>
            分期乐子商户编号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.BfbRequireLogin">
      <summary>
            百度钱包需要登陆
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers.PingppApiHandler.ApiData.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Controllers.PingppController">
      <summary>
            Ping++支付的控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Controllers.PingppController.Pay">
      <summary>
            获取Ping++支付凭据并返回给客户端
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Controllers.PingppController.WaitResult">
      <summary>
            等待支付结果
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Controllers.PingppController.WebHook">
      <summary>
            Ping++的后台通知
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.Forms.PingppPayForm">
      <summary>
            Ping++支付的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.Forms.PingppPayForm.TransactionId">
      <summary>
            交易Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.Forms.PingppPayForm.PaymentChannel">
      <summary>
            支付途径
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.Forms.PingppPayForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.Forms.PingppPayForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.ListItemProviders.PaymentChannelListItemProvider">
      <summary>
            Ping++的支付渠道提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.ListItemProviders.PaymentChannelListItemProvider.GetItems">
      <summary>
            获取支付渠道列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler">
      <summary>
            财付通接口的处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.Type">
      <summary>
            接口类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.ApiDataEditing">
      <summary>
            后台编辑表单使用的接口数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.OnFormCreated(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm)">
      <summary>
            后台编辑表单创建后的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.OnFormBind(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单绑定时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.OnFormSubmit(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单保存时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.CalculatePaymentFee(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi,System.Decimal,System.Decimal@)">
      <summary>
            计算支付手续费
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collection.HtmlString@)">
      <summary>
            获取支付Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            调用发货接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.ApiData">
      <summary>
            接口数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.ApiData.PartnerId">
      <summary>
            商户Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.ApiData.PartnerKey">
      <summary>
            商户密钥
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers.TenpayApiHandler.ApiData.ReturnDomain">
      <summary>
            返回域名
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler">
      <summary>
            微信接口的处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.Type">
      <summary>
            接口类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.ApiDataEditing">
      <summary>
            后台编辑表单使用的接口数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.OnFormCreated(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm)">
      <summary>
            后台编辑表单创建后的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.OnFormBind(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单绑定时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.OnFormSubmit(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单保存时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.CalculatePaymentFee(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi,System.Decimal,System.Decimal@)">
      <summary>
            计算支付手续费
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collection.HtmlString@)">
      <summary>
            获取支付Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            调用发货接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.ApiData">
      <summary>
            接口数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.ApiData.AppId">
      <summary>
            绑定支付的APPID
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.ApiData.PartnerId">
      <summary>
            商户号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.ApiData.PartnerKey">
      <summary>
            商户支付密钥
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.ApiData.ReturnDomain">
      <summary>
            返回域名
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.WeChat.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.WeChat.src.Controllers.WxPayController">
      <summary>
            微信控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.WeChat.src.Controllers.WxPayController.QRCodePayNotify">
      <summary>
            微信扫码支付的异步通知
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.WeChat.src.Controllers.WxPayController.UpdateTransactionState(System.Guid)">
      <summary>
            更新扫码支付的交易状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.WeChat.src.Domain.Services.WxPayManager">
      <summary>
            微信支付管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.WeChat.src.Domain.Services.WxPayManager.GetQRCodePaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            获取扫码支付的Html
            </summary>
      <param name="transaction">支付交易</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.WeChat.src.Domain.Services.WxPayManager.UpdateTransactionState(System.Guid)">
      <summary>
            调用微信的查询接口查询交易状态
            根据返回结果更新交易
            </summary>
      <param name="transactionId">交易Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.WeChat.src.Domain.Services.WxPayManager.ProcessNotify(System.String,System.Guid@)">
      <summary>
            处理微信返回的异步通知
            </summary>
      <param name="xml">微信发来的xml内容</param>
      <param name="transactionId">对应的交易Id</param>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.EntityOperationHandlers.CannotChangeTypeOrOwnerAfterPaymentApiCreated">
      <summary>
            支付接口创建后不能修改类型和所属人
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.EntityOperationHandlers.DeleteReleatedDetailRecords">
      <summary>
            删除交易时同时删除关联的详细记录
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.ExtraConfigKeys.PaymentExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Components.ExtraConfigKeys.PaymentExtraConfigKeys.PaymentApiCacheTime">
      <summary>
            支付接口的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler">
      <summary>
            支付接口处理器的接口
            同一接口类型可以注册多个处理器，按注册顺序调用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler.Type">
      <summary>
            接口类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler.OnFormCreated(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm)">
      <summary>
            后台编辑表单创建后的处理
            </summary>
      <param name="form">表单</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler.OnFormBind(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单绑定时的处理
            </summary>
      <param name="form">表单</param>
      <param name="bindFrom">支付接口</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler.OnFormSubmit(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单保存时的处理
            </summary>
      <param name="form">表单</param>
      <param name="saveTo">支付接口</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler.CalculatePaymentFee(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi,System.Decimal,System.Decimal@)">
      <summary>
            计算支付手续费
            </summary>
      <param name="api">支付接口</param>
      <param name="amount">支付金额</param>
      <param name="paymentFee">支付手续费</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collection.HtmlString@)">
      <summary>
            获取支付使用的Html
            是否可以支付已在外部判断，这个函数不需要判断
            </summary>
      <param name="transaction">支付交易</param>
      <param name="html">支付使用的Html</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces.IPaymentApiHandler.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            担保交易时对交易进行发货操作
            发货失败时可以抛出例外阻止事务提交
            同一交易有可能会调用多次，是否可以发货已在外部判断，这个函数不需要判断
            </summary>
      <param name="transaction">支付交易</param>
      <param name="logisticsName">快递或物流名称</param>
      <param name="invoiceNo">发货单号</param>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler">
      <summary>
            测试接口的处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.Type">
      <summary>
            接口类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.ApiDataEditing">
      <summary>
            编辑中的接口数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.OnFormCreated(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm)">
      <summary>
            后台编辑表单创建后的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.OnFormBind(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单绑定时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.OnFormSubmit(ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm,ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            后台编辑表单保存时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.CalculatePaymentFee(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi,System.Decimal,System.Decimal@)">
      <summary>
            计算支付手续费
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.GetPaymentHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collection.HtmlString@)">
      <summary>
            获取支付Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.DeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.String,System.String)">
      <summary>
            调用发货接口
            发货后自动确认收货
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.ApiData">
      <summary>
            接口数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.ApiData.PaymentPassword">
      <summary>
            支付密码
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.ApiData.CheckPaymentPassword(System.String)">
      <summary>
            检查支付密码是否和设置的密码一致
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm">
      <summary>
            测试接口支付时使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.Transaction">
      <summary>
            需要支付的交易
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.Id">
      <summary>
            交易Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.Serial">
      <summary>
            流水号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.Currency">
      <summary>
            货币
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.Amount">
      <summary>
            金额
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.Description">
      <summary>
            交易描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.PaymentPassword">
      <summary>
            支付密码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.PayType">
      <summary>
            支付类型
            即时到账或担保交易
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.#ctor(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            初始化
            绑定时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.#ctor(System.Guid)">
      <summary>
            初始化
            提交时使用
            </summary>
      <param name="transactionId">
      </param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.TestApiPayForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.PayTypes">
      <summary>
            支付类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.PayTypes.ImmediateArrival">
      <summary>
            即时到账
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.TestApiHandler.PayTypes.SecuredTransaction">
      <summary>
            担保交易
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker">
      <summary>
            默认的交易检查器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker.IsPayable(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以付款
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker.IsPayerLoggedIn(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断当前登录的用户是否可以付款
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker.CanProcessWaitingPaying(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理等待付款
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker.CanProcessSecuredPaid(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理担保交易已付款
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker.CanProcessSuccess(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理交易成功
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker.CanProcessAborted(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理交易中止
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers.DefaultTransactionChecker.CanDeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以调用发货接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker">
      <summary>
            交易检查器的接口
            可以修改检查结果，也可以不修改
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker.IsPayable(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以付款
            </summary>
      <param name="transaction">交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker.IsPayerLoggedIn(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断付款人是否已登陆
            这个函数用于判断当前用户是否有权限查看和支付指定的交易
            </summary>
      <param name="transaction">交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker.CanProcessWaitingPaying(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理等待付款
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
      <param name="transaction">交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker.CanProcessSecuredPaid(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理担保交易已付款
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
      <param name="transaction">交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker.CanProcessSuccess(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理交易成功
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
      <param name="transaction">交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker.CanProcessAborted(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以处理交易中止
            交易已经是相同状态时应该跳过处理而不是调用这个函数
            </summary>
      <param name="transaction">交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker.CanDeliveryGoods(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断交易是否可以调用发货接口
            </summary>
      <param name="transaction">交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.AutoDeliveryGoodsParameters">
      <summary>
            担保交易付款后，自动发货使用的参数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.AutoDeliveryGoodsParameters.LogisticsName">
      <summary>
            快递或物流名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.AutoDeliveryGoodsParameters.InvoiceNo">
      <summary>
            发货单号
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase">
      <summary>
            合并交易处理器的基类
            因为合并交易需要安全检查和区分类别
            这个处理器不注册到容器中，需要继承使用
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.ExternalSerialPrefix">
      <summary>
            设置关联交易的外部流水号时使用的前缀
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.Type">
      <summary>
            交易类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.OnCreated(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            交易创建后
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.OnWaitingPaying(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            等待付款时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.OnSecuredPaid(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState,System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.AutoDeliveryGoodsParameters})">
      <summary>
            担保交易付款后
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.OnSuccess(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易成功时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.OnAbort(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易终止时
            不会终止关联交易，只会清除所有关联交易
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases.MergedTransactionHandlerBase.GetResultHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString})">
      <summary>
            获取显示交易结果的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler">
      <summary>
            支付交易处理器的接口
            同一交易类型可以注册多个处理器，按注册顺序调用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler.Type">
      <summary>
            交易类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler.OnCreated(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            交易创建后的处理
            </summary>
      <param name="transaction">支付交易</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler.OnWaitingPaying(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            等待付款时的处理
            抛出例外可以阻止事务提交
            多线程下同一交易最多只会调用一次
            部分接口不会调用这个函数
            </summary>
      <param name="transaction">支付交易</param>
      <param name="previousState">原有的状态</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler.OnSecuredPaid(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState,System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.AutoDeliveryGoodsParameters})">
      <summary>
            担保交易已付款时的处理
            抛出例外可以阻止事务提交
            多线程下同一交易最多只会调用一次
            </summary>
      <param name="transaction">支付交易</param>
      <param name="previousState">原有的状态</param>
      <param name="parameters">自动发货参数，需要自动发货时请添加这个参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler.OnSuccess(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易成功时的处理
            抛出例外可以阻止事务提交
            多线程下同一交易最多只会调用一次
            可以看原有的状态判断是即时到账还是担保交易
            </summary>
      <param name="transaction">支付交易</param>
      <param name="previousState">原有的状态</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler.OnAbort(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易中止时的处理
            抛出例外可以阻止事务提交
            多线程下同一交易最多只会调用一次
            </summary>
      <param name="transaction">支付交易</param>
      <param name="previousState">原有的状态</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces.IPaymentTransactionHandler.GetResultHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString})">
      <summary>
            获取支付成功或失败后，显示在结果页面的Html内容
            是否可以查看结果已在外部判断，这个函数不需要判断
            例
            - 支付成功
            - 即将返回订单页面
            </summary>
      <param name="transaction">支付交易</param>
      <param name="html">显示的Html内容</param>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.Utils.PaymentUtils">
      <summary>
            支付相关的帮助函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.Utils.PaymentUtils.GetReturnOrNotifyUrl(System.String,System.String)">
      <summary>
            获取返回或异步通知Url，如果自定义了域名则使用自定义的域名
            </summary>
      <param name="returnDomain">返回域名</param>
      <param name="url">Url</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.ListItemProviders.PaymentApiTypeListItemProvider">
      <summary>
            支付接口类型列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.ListItemProviders.PaymentApiTypeListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Components.ListItemProviders.PaymentTransactionTypeListItemProvider">
      <summary>
            支付交易类型列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Components.ListItemProviders.PaymentTransactionTypeListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler">
      <summary>
            测试交易的处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler.Type">
      <summary>
            交易类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler.OnCreated(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            交易创建后
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler.OnWaitingPaying(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            等待付款时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler.OnSecuredPaid(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState,System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.AutoDeliveryGoodsParameters})">
      <summary>
            担保交易付款后
            付款后自动发货
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler.OnSuccess(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易成功时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler.OnAbort(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易终止时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers.TestTransactionHandler.GetResultHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString})">
      <summary>
            获取显示交易结果的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController">
      <summary>
            支付接口管理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.GetPrivileges">
      <summary>
            获取权限列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.TableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.SelectTypeForAddForm">
      <summary>
            用于选择添加时使用的支付接口类型的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.SelectTypeForAddForm.Type">
      <summary>
            类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.SelectTypeForAddForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentApiCrudController.SelectTypeForAddForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentController">
      <summary>
            支付相关的控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentController.TestPayment">
      <summary>
            创建测试交易的页面
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentController.TestApiPay">
      <summary>
            使用测试接口支付指定交易
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentController.Pay">
      <summary>
            交易的支付页面
            这里不检查用户登录，在交易管理器中检查
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentController.PayResult">
      <summary>
            交易的支付结果页面
            这里不检查用户登录，在交易管理器中检查
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController">
      <summary>
            支付交易记录
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction}})">
      <summary>
            选择字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form">
      <summary>
            查看支付交易的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Type">
      <summary>
            交易类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.PaymentApi">
      <summary>
            支付接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.State">
      <summary>
            交易状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Serial">
      <summary>
            流水号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.ExternalSerial">
      <summary>
            外部流水号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Currency">
      <summary>
            货币
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Amount">
      <summary>
            金额
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.PaymentFee">
      <summary>
            支付手续费
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Payer">
      <summary>
            付款人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Payee">
      <summary>
            收款人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Description">
      <summary>
            描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.ReleatedTransactions">
      <summary>
            关联交易
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.LastError">
      <summary>
            最后发生的错误
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.DetailRecords">
      <summary>
            详细记录
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.OnBind(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Controllers.PaymentTransactionCrudController.Form.OnSubmit(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi">
      <summary>
            支付接口
            用于用户支付金钱给网站或其他用户
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.Id">
      <summary>
            接口Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.Type">
      <summary>
            接口类型
            创建后不能修改
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.Owner">
      <summary>
            接口的所属用户，null时属于网站
            创建后不能修改
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.ExtraData">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.SupportTransactionTypes">
      <summary>
            支持的交易类型列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.ToString">
      <summary>
            返回支付接口名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction">
      <summary>
            支付交易
            用于储存单笔交易的信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Id">
      <summary>
            交易Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Serial">
      <summary>
            交易流水号，唯一键
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Type">
      <summary>
            交易类型
            创建后不能修改
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Api">
      <summary>
            使用的支付接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.ExternalSerial">
      <summary>
            外部提供的交易流水号
            例如支付宝上的交易号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Amount">
      <summary>
            金额
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.PaymentFee">
      <summary>
            支付手续费
            手续费有可能在网站上收取，也可能在支付接口上收取
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.CurrencyType">
      <summary>
            货币类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Payer">
      <summary>
            付款人，可以等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Payee">
      <summary>
            收款人，可以等于null
            如果支付接口有所属人，这里应该等于该所属人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.ReleatedId">
      <summary>
            关联数据Id
            根据交易类型不同关联的数据类型也不同
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.ReleatedTransactions">
      <summary>
            关联的交易列表
            可以用于合并交易等有关联的交易类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Description">
      <summary>
            交易描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.State">
      <summary>
            交易状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.ExtraData">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.LastError">
      <summary>
            最后发生的错误
            没有发生错误时等于空
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.ToString">
      <summary>
            返回流水号
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState">
      <summary>
            支付交易的状态
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState.Initial">
      <summary>
            初始状态，这时可以修改金额和货币
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState.WaitingPaying">
      <summary>
            等待付款，这时金额和货币不能修改
            部分接口不会使用这个状态
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState.SecuredPaid">
      <summary>
            担保交易已付款
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState.Success">
      <summary>
            交易成功
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState.Aborted">
      <summary>
            交易中止
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions.PaymentApiExtensions">
      <summary>
            支付接口的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions.PaymentApiExtensions.GetHandlers(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            获取支付接口的处理器列表
            没有时抛出未知类型的例外
            </summary>
      <param name="api">支付接口</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions.WebReceiveFundsTransactionExtensions">
      <summary>
            支付交易的扩展函数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions.WebReceiveFundsTransactionExtensions.CheckFunc">
      <summary>
            检查函数的类型
            </summary>
      <param name="transaction">支付交易</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions.WebReceiveFundsTransactionExtensions.Check(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.Func{ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces.IPaymentTransactionChecker,ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions.WebReceiveFundsTransactionExtensions.CheckFunc})">
      <summary>
            检查交易是否满足指定条件
            返回是否满足和文本信息
            </summary>
      <param name="transaction">支付交易</param>
      <param name="getCheckFunc">获取检查函数的函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions.WebReceiveFundsTransactionExtensions.GetHandlers(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            根据支付交易的处理器列表
            没有时抛出未知类型的例外
            </summary>
      <param name="transaction">支付交易</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Repositories.PaymentApiRepository">
      <summary>
            支付接口的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Repositories.PaymentTransactionRepository">
      <summary>
            支付交易的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager">
      <summary>
            支付接口管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.PaymentApiCacheTime">
      <summary>
            支付接口的缓存时间
            默认是3秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.PaymentApiCache">
      <summary>
            支付接口的缓存
            { 接口Id: 接口, ... }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.PaymentApisCache">
      <summary>
            支付接口列表的缓存
            { (所有人Id, 交易类型): 接口, ... }
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.GetWithCache(System.Guid)">
      <summary>
            获取支付接口
            不存在或已删除时返回null
            结果会按接口Id缓存一定时间
            </summary>
      <param name="apiId">支付接口的Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.GetManyWithCache(System.Nullable{System.Guid},System.String)">
      <summary>
            获取支付接口列表
            结果会按所有人Id和交易类型缓存一定时间
            </summary>
      <param name="ownerId">所有人Id，传入null时获取后台添加的支付接口列表</param>
      <param name="transactionType">交易类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.CalculatePaymentFee(System.Guid,System.Decimal)">
      <summary>
            计算支付手续费
            </summary>
      <param name="apiId">支付接口Id</param>
      <param name="amount">支付金额</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentApiManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager">
      <summary>
            支付交易管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.CreateTransaction(System.String,System.Guid,System.Decimal,System.Decimal,System.String,System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},System.String,System.Object,System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction})">
      <summary>
            创建交易
            </summary>
      <param name="transactionType">交易类型</param>
      <param name="paymentApiId">支付接口Id</param>
      <param name="amount">交易金额</param>
      <param name="paymentFee">手续费</param>
      <param name="currencyType">货币类型</param>
      <param name="payerId">付款人Id</param>
      <param name="payeeId">收款人Id</param>
      <param name="releatedId">关联对象Id</param>
      <param name="description">描述</param>
      <param name="extraData">附加数据</param>
      <param name="releatedTransactions">关联的交易列表</param>
      <returns>
      </returns>
    </member>
    <member name="F:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.RecordType">
      <summary>
            交易明细记录类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.AddDetailRecord(System.Guid,System.Nullable{System.Guid},System.String,System.Object)">
      <summary>
            添加交易明细记录
            </summary>
      <param name="transactionId">交易Id</param>
      <param name="creatorId">创建人Id</param>
      <param name="content">内容</param>
      <param name="extraData">附加数据</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.GetDetailRecords(System.Guid)">
      <summary>
            获取指定交易的所有明细记录
            </summary>
      <param name="transactionId">交易Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.GetMany(System.String,System.Nullable{System.Guid})">
      <summary>
            根据交易类型和关联Id获取交易列表
            </summary>
      <param name="type">交易类型</param>
      <param name="releatedId">关联Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.SetLastError(System.Guid,System.String)">
      <summary>
            设置交易最后发生的错误
            </summary>
      <param name="transactionId">交易Id</param>
      <param name="lastError">最后发生的错误</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.ProcessInternal(System.Guid,System.String,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            尝试把交易切换到指定的交易状态
            </summary>
      <param name="transactionId">交易Id</param>
      <param name="externalSerial">外部交易流水号，等于空时不更新</param>
      <param name="state">交易状态</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.Process(System.Guid,System.String,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            尝试把交易切换到指定的交易状态
            失败时记录错误并抛出例外
            </summary>
      <param name="transactionId">交易Id</param>
      <param name="externalSerial">外部交易流水号，等于空时不更新</param>
      <param name="state">交易状态</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.NotifyAllGoodsShippedBackground(System.Guid,System.String,System.String)">
      <summary>
            通知支付平台已发货
            仅在状态是担保交易已付款时通知，否则不做处理
            通知会在后台进行，出错时会记录到日志
            </summary>
      <param name="transactionId">交易Id</param>
      <param name="logisticsName">快递或物流名称</param>
      <param name="invoiceNo">快递单号</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.EnsureParentTransactionAborted(System.Collections.Generic.IList{System.Guid},System.Nullable{System.Guid},System.String)">
      <summary>
            确保终止关联了指定交易的交易
            一般用于子交易有变化时终止合并交易
            如果合并交易不存在或已终止，这个函数什么都不做
            </summary>
      <param name="transactionIds">子交易的Id列表</param>
      <param name="operatorId">操作人Id</param>
      <param name="reason">作废原因</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.EnsureParentTransactionAbortedIfProcessNotFromParent(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.Nullable{System.Guid},System.String)">
      <summary>
            如果处理交易的来源不是合并交易，则确保合并交易中止
            一般用于子交易单独支付后自动终止合并交易
            如果处理交易的来源是合并交易，或合并交易不存在或已终止，这个函数什么都不做
            </summary>
      <param name="transaction">子交易</param>
      <param name="operatorId">操作人Id</param>
      <param name="reason">作废原因</param>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.CreateMergedTransaction(System.String,System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction})">
      <summary>
            创建合并交易，合并金额和重新计算手续费
            要求所有交易可支付，并且所有交易的货币，支付接口，收款人，付款人等一致
            </summary>
      <param name="transactionType">交易类型</param>
      <param name="childTransactions">子交易列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.SelectOneVisibleTransactionId(System.Guid)">
      <summary>
            获取一个指定用户可见的交易Id
            返回的Id不固定，也可能返回Guid.Empty
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.GetPaymentUrl(System.Guid)">
      <summary>
            获取支付Url，创建交易后可以跳转到这个Url进行支付
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.Domain.Services.PaymentTransactionManager.GetResultUrl(System.Guid)">
      <summary>
            获取查看结果的Url，支付成功或失败后可以跳转到这个Url显示结果
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Structs.PaymentApiExtraData">
      <summary>
            支付接口的附加数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.Domain.Structs.PaymentTransactionExtraData">
      <summary>
            支付交易的附加数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm">
      <summary>
            编辑支付接口使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.Owner">
      <summary>
            所属人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.SupportTransactionTypes">
      <summary>
            支持的交易类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.Handlers">
      <summary>
            使用的支付接口处理器列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.OnBind(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            绑定数据到表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.PaymentApiEditForm.OnSubmit(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi)">
      <summary>
            保存表单到数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm">
      <summary>
            用于测试支付接口是否可以正常使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm.ApiName">
      <summary>
            接口名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm.Amount">
      <summary>
            金额
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm.Currency">
      <summary>
            货币
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm.Description">
      <summary>
            描述
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm.GetApiFromRequest">
      <summary>
            从请求中获取支付接口，不存在时抛出错误
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms.TestPaymentForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Finance.Payment.src.UIComponents.HtmlProviders.PaymentTransactionHtmlProvider">
      <summary>
            支付交易的Html提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.HtmlProviders.PaymentTransactionHtmlProvider.BuildErrorHtml(System.String)">
      <summary>
            构建显示错误信息的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.HtmlProviders.PaymentTransactionHtmlProvider.GetPaymentHtml(System.Guid)">
      <summary>
            获取支付时使用的Html
            交易不存在等错误发生时返回错误信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.HtmlProviders.PaymentTransactionHtmlProvider.GetResultHtml(System.Guid)">
      <summary>
            获取支付结果的html
            交易不存在等错误发生时返回错误信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Finance.Payment.src.UIComponents.HtmlProviders.PaymentTransactionHtmlProvider.GetDetailRecordsHtml(System.Guid)">
      <summary>
            获取交易详细记录的html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.AfterSales.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.ExtraConfigKeys.LogisticsExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Logistics.src.Components.ExtraConfigKeys.LogisticsExtraConfigKeys.LogisticsCacheTime">
      <summary>
            物流的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes.Express">
      <summary>
            快递
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes.Express.Type">
      <summary>
            物流类型
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes.Interfaces.ILogisticsType">
      <summary>
            物流类型的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes.Interfaces.ILogisticsType.Type">
      <summary>
            物流类型
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes.SurfaceMail">
      <summary>
            平邮
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes.SurfaceMail.Type">
      <summary>
            平邮
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController">
      <summary>
            物流管理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.TableHandler">
      <summary>
            表格回调
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form">
      <summary>
            添加和编辑物流使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.Type">
      <summary>
            类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.Owner">
      <summary>
            所属人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.PriceRulesAlert">
      <summary>
            运费规则的提示信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.PriceRules">
      <summary>
            运费规则
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.OnBind(ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Controllers.LogisticsCrudController.Form.OnSubmit(ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics">
      <summary>
            物流
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.Id">
      <summary>
            物流Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.Name">
      <summary>
            物流名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.Type">
      <summary>
            物流类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.PriceRules">
      <summary>
            物流费用计算规则
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.Owner">
      <summary>
            所有人，没有时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.UpdateTime">
      <summary>
            最后更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Repositories.LogisticsRepository">
      <summary>
            物流的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager">
      <summary>
            物流管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.LogisticsCacheTime">
      <summary>
            物流的缓存时间
            默认是3秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.LogisticsCache">
      <summary>
            物流的缓存
            { 物流Id: 物流, ... }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.LogisticsListCache">
      <summary>
            物流列表的缓存
            { 所属Id: 物流列表, ... }
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.GetWithCache(System.Guid)">
      <summary>
            获取物流
            不存在或已删除时返回null
            结果会按物流Id缓存一定时间
            </summary>
      <param name="logisticsId">物流Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.GetManyWithCache(System.Nullable{System.Guid})">
      <summary>
            获取物流列表
            结果会按所有人Id缓存一定时间
            </summary>
      <param name="ownerId">所有人Id，传入null时获取后台添加的物流列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.CalculateCost(System.Guid,System.String,System.Nullable{System.Int64},System.Decimal)">
      <summary>
            计算运费
            返回 ((运费, 货币), 错误信息)
            </summary>
      <param name="logisticsId">物流Id</param>
      <param name="country">国家，等于null时使用默认国家</param>
      <param name="regionId">地区Id</param>
      <param name="weight">重量，单位是克</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services.LogisticsManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule">
      <summary>
            物流费用计算规则
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.FirstHeavyUnit">
      <summary>
            首重单位，默认是1000G
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.FirstHeavyCost">
      <summary>
            首重费用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.ContinuedHeavyUnit">
      <summary>
            续重单位，默认是1000G
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.ContinuedHeavyCost">
      <summary>
            续重费用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.Currency">
      <summary>
            货币单位
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.Country">
      <summary>
            国家，匹配所有时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.RegionId">
      <summary>
            地区Id，匹配所有时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.Disabled">
      <summary>
            是否不允许在该地区使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs.PriceRule.GetDefault">
      <summary>
            获取默认的运费规则
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldAttributes.LogisticsPriceRulesEditorAttribute">
      <summary>
            运费规则编辑器的属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldAttributes.LogisticsPriceRulesEditorAttribute.DisplayCountryDropdown">
      <summary>
            是否显示国家下拉框，null时使用默认设置
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldAttributes.LogisticsPriceRulesEditorAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldAttributes.LogisticsPriceRulesEditorAttribute.#ctor(System.String,System.Boolean)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="displayCountryDropdown">是否显示国家下拉框</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldHandlers.LogisticsPriceRulesEditor">
      <summary>
            运费规则编辑器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldHandlers.LogisticsPriceRulesEditor.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldHandlers.LogisticsPriceRulesEditor.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.ListItemProviders.LogisticsTypeListItemProvider">
      <summary>
            物流类型的选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.ListItemProviders.LogisticsTypeListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.ExtraConfigKeys.OrderExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Components.ExtraConfigKeys.OrderExtraConfigKeys.CartProductTotalCountCacheTime">
      <summary>
            购物车商品的总数量的缓存时间，单位是秒
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Components.ExtraConfigKeys.OrderExtraConfigKeys.SessionExpireDaysForNonUserPurcharse">
      <summary>
            非会员添加购物车商品时，保留会话的天数，单位是天
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings">
      <summary>
            订单设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings.BuynowCartProductExpiresDays">
      <summary>
            立刻购买的购物车商品的过期天数，默认1天
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings.NormalCartProductExpiresDays">
      <summary>
            一般的购物车商品的过期天数，默认90天
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings.AutoCancelOrderAfterDays">
      <summary>
            自动取消未付款订单天数，默认3天
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings.AutoConfirmOrderAfterDays">
      <summary>
            自动确认收货天数，默认14天
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings.AllowAnonymousVisitorCreateOrder">
      <summary>
            允许非会员下单，默认允许
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings.StockReductionMode">
      <summary>
            库存减少模式，默认不减少
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs.OrderSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker">
      <summary>
            默认的订单检查器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanPay(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以付款
            前台使用
            允许条件: 订单状态是等待付款，且有可支付的关联交易
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanSetCancelled(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以取消
            前台使用
            允许条件: 订单状态是等待付款，且关联的收款交易的状态是初始状态或等待付款
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanConfirm(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以确认收货
            前台使用
            允许条件: 订单状态是已发货
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanEditCost(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以修改价格
            后台使用
            允许条件: 订单状态是等待付款，且关联的收款交易的状态是初始状态
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanEditShippingAddress(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以编辑收货地址
            后台使用
            允许条件: 订单状态是等待付款，或等待发货
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanDeliveryGoods(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以发货
            后台使用
            允许条件: 订单状态是等待发货
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanSetInvalid(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以作废
            后台使用
            允许条件: 订单状态不是已作废或已取消
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanProcessOrderPaid(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            是否可处理订单已付款
            修改订单状态时使用
            允许条件: 订单状态是等待付款，且关联的所有交易状态是交易成功或担保交易已付款
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanProcessAllGoodsShipped(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            是否可处理订单所有商品已发货
            修改订单状态时使用
            允许条件: 订单状态是等待发货，且所有商品都已经发货
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.DefaultOrderChecker.CanProcessSuccess(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            是否可处理交易成功
            修改订单状态时使用
            允许条件: 订单状态是已发货
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker">
      <summary>
            订单检查器，用于检查订单是否可以进行各操作
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanPay(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以付款
            前台使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanSetCancelled(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以取消
            前台使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanConfirm(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以确认收货
            前台使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanEditCost(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以修改价格
            后台使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanEditShippingAddress(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以编辑收货地址
            后台使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanDeliveryGoods(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以发货
            后台使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanSetInvalid(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            判断订单是否可以作废
            后台使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanProcessOrderPaid(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            是否可处理订单已付款
            修改订单状态时使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanProcessAllGoodsShipped(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            是否可处理订单所有商品已发货
            修改订单状态时使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker.CanProcessSuccess(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWebStandard.Collections.Pair{System.Boolean,System.String}@)">
      <summary>
            是否可处理交易成功
            修改订单状态时使用
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator">
      <summary>
            默认的订单创建器
            实现功能
            - 检查订单参数 (CheckOrderParameters)
            - 按卖家分别创建订单 (CreateOrdersBySellers)
              - 计算订单的价格
              - 添加关联的订单商品
              - 添加关联的订单留言
              - 生成订单编号
              - 创建订单交易
            - 删除相应的购物车商品 (RemoveCartProducts)
            - 保存收货地址的修改 (SaveShippingAddress)
            - 有一个以上的订单时创建合并订单交易 (CreateMergedTransaction)
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.Parameters">
      <summary>
            当前的创建订单的参数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.Result">
      <summary>
            创建订单的结果
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.CheckOrderParameters">
      <summary>
            检查订单参数
            - 商品是否存在
            - 库存是否足够
            - 是否有数量等于或小于0的商品
            - 如果有实体商品，必须选择物流
            - 如果有实体商品，必须填写收货地址
            - 检查是否支持非会员下单
            - 检查选择的物流是否允许使用
            - 检查选择的支付接口是否允许使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.CreateOrdersBySellers">
      <summary>
            按卖家分别创建订单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.RemoveCartProducts">
      <summary>
            删除相应的购物车商品
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.SaveShippingAddress">
      <summary>
            保存收货地址的修改
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.CreateMergedTransaction">
      <summary>
            有一个以上的订单时创建合并订单交易
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.DefaultOrderCreator.CreateOrder(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters)">
      <summary>
            创建订单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.Interfaces.IOrderCreator">
      <summary>
            订单创建器的接口
            这个接口只应该注册一个实现的类，需要替换默认的订单创建器时请先注销原来的注册
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.Interfaces.IOrderCreator.CreateOrder(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters)">
      <summary>
            创建订单
            </summary>
      <param name="parameters">创建参数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers.Interfaces.IOrderHandler">
      <summary>
            订单处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers.Interfaces.IOrderHandler.OnStateChanged(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState)">
      <summary>
            订单状态改变时的处理
            </summary>
      <param name="order">订单</param>
      <param name="state">订单状态</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers.OrderNotifyGoodsShippedHandler">
      <summary>
            后台通知支付平台已发货的处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers.OrderNotifyGoodsShippedHandler.OnStateChanged(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState)">
      <summary>
            在订单变为已发货时后台通知支付平台已发货
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers.OrderStockReduceHandler">
      <summary>
            库存处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers.OrderStockReduceHandler.OnStateChanged(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState)">
      <summary>
            根据订单状态的改变扣减库存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderLogisticsProviders.DefaultOrderLogisticsProvider">
      <summary>
            默认的创建订单可使用的物流提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderLogisticsProviders.DefaultOrderLogisticsProvider.GetLogisticsList(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics})">
      <summary>
            获取可使用的物流
            后台添加的物流 + 卖家添加的物流
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderLogisticsProviders.Interfaces.IOrderLogisticsProvider">
      <summary>
            创建订单可使用的物流的提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderLogisticsProviders.Interfaces.IOrderLogisticsProvider.GetLogisticsList(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities.Logistics})">
      <summary>
            获取默认可使用的物流
            </summary>
      <param name="userId">用户Id</param>
      <param name="sellerId">卖家Id</param>
      <param name="logisticsList">物流列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPaymentApiProviders.DefaultOrderPaymentApiProvider">
      <summary>
            默认的创建订单可使用的支付接口提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPaymentApiProviders.DefaultOrderPaymentApiProvider.GetPaymentApis(System.Nullable{System.Guid},System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi})">
      <summary>
            获取可使用的支付接口
            只返回后台添加的接口
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPaymentApiProviders.Interfaces.IOrderPaymentApiProvider">
      <summary>
            创建订单可使用的支付接口的提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPaymentApiProviders.Interfaces.IOrderPaymentApiProvider.GetPaymentApis(System.Nullable{System.Guid},System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentApi})">
      <summary>
            获取默认可使用的支付接口
            </summary>
      <param name="userId">用户Id</param>
      <param name="apis">可使用的支付接口列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPriceCalculators.DefaultCalculator">
      <summary>
            默认的订单价格计算器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPriceCalculators.DefaultCalculator.Calculate(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters,ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult)">
      <summary>
            设置订单价格等于以下的合计
            - 商品总价
            - 运费
            - 支付手续费
            注意
            - 传入的参数中可能会包含多个卖家
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPriceCalculators.DefaultCalculator.ReCalculatePaymentFee(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters,ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult)">
      <summary>
            重新计算支付手续费
            删除原有的手续费并按当前的总价重新计算
            手续费不会按各个卖家分别计算
            - 如果使用合并交易可以在合并交易中设置整体的手续费
            - 例: (交易A: 手续费0.5, 交易B: 手续费0.3, 合并交易: 手续费0.6)
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPriceCalculators.Interfaces.IOrderPriceCalculator">
      <summary>
            订单价格计算器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPriceCalculators.Interfaces.IOrderPriceCalculator.Calculate(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters,ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult)">
      <summary>
            计算订单价格
            计算结果请保存到result中
            </summary>
      <param name="parameters">订单创建参数</param>
      <param name="result">计算结果</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderProductUnitPriceCalaculators.DefaultCalculator">
      <summary>
            默认的订单商品单价计算器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderProductUnitPriceCalaculators.DefaultCalculator.Calculate(System.Nullable{System.Guid},ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters,ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult)">
      <summary>
            从商品匹配数据获取匹配的价格和货币单位
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderProductUnitPriceCalaculators.Interfaces.IOrderProductUnitPriceCalculator">
      <summary>
            订单商品单价的计算器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderProductUnitPriceCalaculators.Interfaces.IOrderProductUnitPriceCalculator.Calculate(System.Nullable{System.Guid},ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters,ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult)">
      <summary>
            计算订单商品的单价
            计算结果请保存到result中
            </summary>
      <param name="userId">用户Id，未登录时等于null</param>
      <param name="parameters">订单商品的创建参数</param>
      <param name="result">计算结果</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderShippingAddressProviders.DefaultOrderShippingAddressProvider">
      <summary>
            默认的创建订单时可用的收货地址提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderShippingAddressProviders.DefaultOrderShippingAddressProvider.GetShippingAddresses(System.Nullable{System.Guid},System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress})">
      <summary>
            获取可用的收货地址
            获取用户添加的收货地址
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.OrderShippingAddressProviders.Interfaces.IOrderShippingAddressProvider">
      <summary>
            创建订单可使用的收货地址的提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.OrderShippingAddressProviders.Interfaces.IOrderShippingAddressProvider.GetShippingAddresses(System.Nullable{System.Guid},System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress})">
      <summary>
            获取可使用的收货地址
            </summary>
      <param name="userId">用户Id</param>
      <param name="addresses">收货地址列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.MergedOrderTransactionHandler">
      <summary>
             订单合并交易处理器
             
             重复支付 情况a
             - 创建订单A和订单B
             - 打开合并交易支付页面
             - 打开订单A交易支付页面
             - 支付合并交易 (处理成功)
             - 支付订单A交易 (重复处理，这时外部序列号会改变但交易状态不会被改变，可以人工确认)
            
             重复支付 情况b
             - 创建订单A和订单B
             - 打开合并交易支付页面
             - 打开订单A交易支付页面
             - 支付订单A交易 (处理成功, 合并交易被终止)
             - 支付合并交易 (处理支付失败，可以看到记录，可以人工确认)
             
             对于重复支付合并交易和普通交易的处理
             - 修改价格时自动终止合并交易, 使用EnsureParentTransactionAborted
             - 普通交易支付后终止合并交易，使用EnsureParentTransactionAbortedIfProcessNotFromParent
             
             对于非同时支付的冲突，不需要人工处理可以事先防止，但同时支付的冲突仍需要人工确认
             </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.MergedOrderTransactionHandler.Type">
      <summary>
            交易类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.MergedOrderTransactionHandler.GetResultHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString})">
      <summary>
            获取显示交易结果的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler">
      <summary>
            订单交易处理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler.Type">
      <summary>
            交易类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler.OnCreated(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            交易创建后
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler.OnWaitingPaying(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            等待付款时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler.OnSecuredPaid(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState,System.Collections.Generic.IList{ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.AutoDeliveryGoodsParameters})">
      <summary>
            担保交易付款后
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler.OnSuccess(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易成功时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler.OnAbort(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,ZKWeb.Plugins.Finance.Payment.src.Domain.Enums.PaymentTransactionState)">
      <summary>
            交易终止时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers.OrderTransactionHandler.GetResultHtml(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString})">
      <summary>
            获取显示交易结果的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.CartProductCleaner">
      <summary>
            清理过期的购物车商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.CartProductCleaner.Key">
      <summary>
            任务键名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.CartProductCleaner.ShouldExecuteNow(System.DateTime)">
      <summary>
            每小时执行一次
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.CartProductCleaner.Execute">
      <summary>
            清理过期的购物车商品
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoCanceller">
      <summary>
            自动取消未付款的订单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoCanceller.Key">
      <summary>
            任务键名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoCanceller.ShouldExecuteNow(System.DateTime)">
      <summary>
            每小时执行一次
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoCanceller.Execute">
      <summary>
            自动取消未付款的订单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoConfirmer">
      <summary>
            订单自动确认收货
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoConfirmer.Key">
      <summary>
            任务键名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoConfirmer.ShouldExecuteNow(System.DateTime)">
      <summary>
            每小时执行一次
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks.OrderAutoConfirmer.Execute">
      <summary>
            订单自动确认收货
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Components.UserLoginHandlers.MergeCartProductsAfterLogin">
      <summary>
            在用户登录后整合购物车商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Components.UserLoginHandlers.MergeCartProductsAfterLogin.SessionId">
      <summary>
            登陆前记录下的会话Id
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.UserLoginHandlers.MergeCartProductsAfterLogin.FindUser(System.String)">
      <summary>
            查找用户，这里不负责查找
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.UserLoginHandlers.MergeCartProductsAfterLogin.BeforeLogin(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            登陆前记录下会话Id
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Components.UserLoginHandlers.MergeCartProductsAfterLogin.AfterLogin(ZKWeb.Plugins.Common.Admin.src.Domain.Entities.User)">
      <summary>
            整合登陆前添加的购物车商品
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController">
      <summary>
            前台的订单管理的控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Setup(System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.MenuItemGroup})">
      <summary>
            调整订单管理和订单列表的位置
            </summary>
      <param name="groups">菜单项列表的分组</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.CancelOrder">
      <summary>
            取消订单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.DeliveryView">
      <summary>
            查看发货单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.ConfirmOrder">
      <summary>
            确认收货
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.MergePayment">
      <summary>
            合并支付
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form">
      <summary>
            订单表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.BaseInformationHtml">
      <summary>
            基本信息的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.DeliveryRecordsHtml">
      <summary>
            发货记录的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.OrderRecordsHtml">
      <summary>
            订单记录的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.ReleatedTransactionsHtml">
      <summary>
            关联交易的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.OrderComment">
      <summary>
            添加订单留言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.OrderCommentsHtml">
      <summary>
            订单留言的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.RemarkFlags">
      <summary>
            备注旗帜
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.GetRequestId">
      <summary>
            获取请求的Id
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.OnBind(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController">
      <summary>
            购物车Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController.CartProductTotalCount">
      <summary>
            获取购物车商品的总数量
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController.MiniCartInfo">
      <summary>
            获取迷你购物车的信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController.CartInfo">
      <summary>
            获取购物车信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController.Add">
      <summary>
            添加商品到购物车
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController.Delete">
      <summary>
            删除购物车中的商品
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController.UpdateCounts">
      <summary>
            更新购物车中的商品数量
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartApiController.CalculatePrice">
      <summary>
            计算购物车中的商品价格
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartController">
      <summary>
            购物车控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartController.Index">
      <summary>
            购物车页
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.CartController.MiniCartContents">
      <summary>
            获取迷你购物车的内容
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderApiController">
      <summary>
            订单Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderApiController.Create">
      <summary>
            创建订单
            创建后跳到支付页面
            如果创建了多个订单应该跳到合并交易的支付页面
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController">
      <summary>
            订单设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.BuynowCartProductExpiresDays">
      <summary>
            立刻购买的购物车商品的过期天数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.NormalCartProductExpiresDays">
      <summary>
            一般的购物车商品的过期天数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.AutoCancelOrderAfterDays">
      <summary>
            自动取消未付款订单天数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.AutoConfirmOrderAfterDays">
      <summary>
            自动确认收货天数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.AllowAnonymousVisitorCreateOrder">
      <summary>
            允许非会员下单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.StockReductionMode">
      <summary>
            库存减少模式
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.OrderSettingsController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController">
      <summary>
            后台的订单管理的控制器
            只在后台使用，需要卖家使用的订单管理请安装多商城插件
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.EditCost">
      <summary>
            编辑价格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.EditShippingAddress">
      <summary>
            编辑地址
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.DeliveryGoods">
      <summary>
            发货
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.DeliveryView">
      <summary>
            查看发货单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.ConfirmOrderInsteadOfBuyer">
      <summary>
            代确认收货
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.SetInvalid">
      <summary>
            作废订单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.TableHandler">
      <summary>
            表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form">
      <summary>
            订单表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.BaseInformationHtml">
      <summary>
            基本信息的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.DeliveryRecordsHtml">
      <summary>
            发货记录的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.OrderRecordsHtml">
      <summary>
            订单记录的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.ReleatedTransactionsHtml">
      <summary>
            关联交易的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.OrderComment">
      <summary>
            添加订单留言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.OrderCommentsHtml">
      <summary>
            订单留言的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.RemarkFlags">
      <summary>
            备注旗帜
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.OnBind(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController">
      <summary>
            前台的收货地址管理的控制器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.TableCallback">
      <summary>
            表单回调
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.TableCallback.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.TableCallback.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.TableCallback.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.TableCallback.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form">
      <summary>
            添加和编辑收货地址使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.Region">
      <summary>
            地区
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.ZipCode">
      <summary>
            邮政编码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.DetailedAddress">
      <summary>
            详细地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.ReceiverName">
      <summary>
            收货人姓名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.ReceiverTel">
      <summary>
            收货人电话/手机
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.OnBind(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Controllers.ShippingAddressCrudController.Form.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1">
      <summary>
            订单的基础类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.Id">
      <summary>
            订单Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.Owner">
      <summary>
            所属人，买家或卖家，没有时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.RemarkFlags">
      <summary>
            备注旗帜
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.Items">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases.OrderBase`1.Configure(ZKWeb.Database.IEntityMappingBuilder{`0})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder">
      <summary>
            买家订单
            需要获取参数和状态时应该查看关联的卖家订单
            需要修改参数和状态时应该修改关联的卖家订单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder.SellerOrder">
      <summary>
            卖家订单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder.BuyerSessionId">
      <summary>
            买家的会话Id
            仅用于非会员下单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct">
      <summary>
            购物车商品
            可以属于用户也可以属于会话，属于会话时需要指定比较短的过期时间
            类型可以是默认也可以是立刻购买，立刻购买时需要指定比较短的过期时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.Id">
      <summary>
            数据Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.Type">
      <summary>
            类型
            默认或立刻购买
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.Owner">
      <summary>
            所属人用户
            没有时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.OwnerSessionId">
      <summary>
            所属人会话Id
            已有用户时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.Product">
      <summary>
            商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.Count">
      <summary>
            购买数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.MatchParameters">
      <summary>
            商品匹配参数
            包含规格等信息
            这里会包含购买数量但不应该使用这里的数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.ExpireTime">
      <summary>
            过期时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment">
      <summary>
            订单留言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.Id">
      <summary>
            留言Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.Order">
      <summary>
            所属订单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.Owner">
      <summary>
            所属人(留言人)
            非会员下单留言时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.Side">
      <summary>
            买家或卖家留言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.Contents">
      <summary>
            留言内容
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery">
      <summary>
            订单发货单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.Id">
      <summary>
            发货单Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.Serial">
      <summary>
            发货单编号，唯一键
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.Order">
      <summary>
            所属订单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.Logistics">
      <summary>
            使用的物流
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.LogisticsSerial">
      <summary>
            物流给出的发货编号（快递单编号）
            虚拟发货时不需要
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.Operator">
      <summary>
            发货人
            允许但一般不等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.OrderProducts">
      <summary>
            包含的商品集合
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDeliveryToOrderProduct">
      <summary>
            订单发货单包含的商品
            多对多表，包含了发货件数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDeliveryToOrderProduct.Id">
      <summary>
            数据Id
            因为数据在编辑时会删除重建，其他表不能关联这里的Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDeliveryToOrderProduct.OrderDelivery">
      <summary>
            发货单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDeliveryToOrderProduct.OrderProduct">
      <summary>
            订单商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDeliveryToOrderProduct.Count">
      <summary>
            发货件数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDeliveryToOrderProduct.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDeliveryToOrderProduct})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct">
      <summary>
            订单商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Id">
      <summary>
            订单商品Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Order">
      <summary>
            所属的订单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Product">
      <summary>
            对应的商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.MatchParameters">
      <summary>
            商品匹配参数
            包含规格等信息，这里会包含购买数量但不应该使用这里的数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Count">
      <summary>
            购买数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.UnitPrice">
      <summary>
            单价
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Currency">
      <summary>
            单价的货币
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.UnitPriceCalcResult">
      <summary>
            单价的计算结果
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.OriginalUnitPriceCalcResult">
      <summary>
            原始单价的计算结果
            下单时生成且之后不会改变
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Items">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.PropertyValues">
      <summary>
            关联的属性值集合
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Deliveries">
      <summary>
            发货记录
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue">
      <summary>
            订单商品关联的属性值
            一般用于统计销量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue.Id">
      <summary>
            数据Id
            因为数据在编辑时会删除重建，其他表不能关联这里的Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue.OrderProduct">
      <summary>
            订单商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue.Category">
      <summary>
            商品类目
            从ProductToPropertyValue复制
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue.Property">
      <summary>
            商品属性
            从ProductToPropertyValue复制
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue.PropertyValue">
      <summary>
            商品属性值
            从ProductToPropertyValue复制
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue.PropertyValueName">
      <summary>
            属性值名称
            从ProductToPropertyValue复制
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProductToPropertyValue})">
      <summary>
            配置的数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder">
      <summary>
            卖家订单
            保存订单的参数和状态
            不和买家订单关联避免循环依赖
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.Serial">
      <summary>
            订单编号，唯一键
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.Buyer">
      <summary>
            买家用户
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.State">
      <summary>
            订单状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.OrderParameters">
      <summary>
            订单参数
            包含收货地址，选择的物流Id和收款接口Id等
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.TotalCost">
      <summary>
            当前的订单总金额
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.Currency">
      <summary>
            货币单位
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.TotalCostCalcResult">
      <summary>
            当前的订单总金额的计算结果
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.OriginalTotalCostCalcResult">
      <summary>
            原始的订单总金额的计算结果
            下单时生成且之后不会改变
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.StateTimes">
      <summary>
            各个状态的切换时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.OrderProducts">
      <summary>
            订单商品的集合
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.OrderComments">
      <summary>
            订单留言的集合
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.OrderDeliveries">
      <summary>
            订单发货单的集合
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress">
      <summary>
            收货地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.Id">
      <summary>
            收货地址Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.Owner">
      <summary>
            所属的用户
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.Country">
      <summary>
            国家
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.RegionId">
      <summary>
            地区Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.ZipCode">
      <summary>
            邮政编码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.DetailedAddress">
      <summary>
            详细地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.ReceiverName">
      <summary>
            收货人姓名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.ReceiverTel">
      <summary>
            收货人电话/手机
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.Summary">
      <summary>
            完整的收货地址字符串
            格式
            "{收货人姓名} {国家(设置显示时)}{地区}{详细地址} {收货人电话/手机}"
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.UpdateTime">
      <summary>
            最后更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType">
      <summary>
            购物车商品的类型
            因为使用了固定的逻辑处理，这里不开放接口
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType.Default">
      <summary>
            加入购物车
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType.Buynow">
      <summary>
            立即购买
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderCommentSide">
      <summary>
            买家或卖家留言
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderCommentSide.BuyerComment">
      <summary>
            买家留言
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderCommentSide.SellerComment">
      <summary>
            卖家留言
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderRemarkFlags">
      <summary>
            订单的备注旗帜
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderRemarkFlags.Gray">
      <summary>
            灰色
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderRemarkFlags.Red">
      <summary>
            红色
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderRemarkFlags.Yellow">
      <summary>
            黄色
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderRemarkFlags.Green">
      <summary>
            绿色
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderRemarkFlags.Blue">
      <summary>
            蓝色
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderRemarkFlags.Purple">
      <summary>
            紫色
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState">
      <summary>
            订单状态
            因为使用了固定的逻辑处理，这里不开放接口
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState.WaitingBuyerPay">
      <summary>
            等待付款
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState.WaitingSellerDeliveryGoods">
      <summary>
            等待发货
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState.WaitingBuyerConfirm">
      <summary>
            已发货
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState.OrderSuccess">
      <summary>
            交易成功
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState.OrderCancelled">
      <summary>
            已取消
            指买家操作取消
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState.OrderInvalid">
      <summary>
            已作废
            指卖家操作作废
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.StockReductionMode">
      <summary>
            库存减少模式
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.StockReductionMode.NoReduction">
      <summary>
            不减少
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.StockReductionMode.AfterCreateOrder">
      <summary>
            创建订单后减少
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.StockReductionMode.AfterOrderPaid">
      <summary>
            支付成功后减少
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CartProductExtensions">
      <summary>
            购物车商品的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CartProductExtensions.ToCreateOrderProductParameters(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct)">
      <summary>
            从购物车商品构建订单商品创建参数
            </summary>
      <param name="cartProduct">购物车商品</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CartProductExtensions.UpdateOrderCount(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct,System.Int64)">
      <summary>
            更新购物车商品的订购数量
            </summary>
      <param name="cartProduct">购物车商品</param>
      <param name="orderCount">订购数量</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CreateOrderParametersExtensions">
      <summary>
            创建订单的参数的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CreateOrderParametersExtensions.SetLoginInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters)">
      <summary>
            设置登录信息（用户Id和会话Id）
            </summary>
      <param name="parameters">订单创建参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CreateOrderParametersExtensions.CloneWith(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters,System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters})">
      <summary>
            复制订单创建参数并使用新的订单商品创建参数
            一般用于把一个订单创建参数分割为多个订单创建参数时使用
            </summary>
      <param name="parameters">订单创建参数</param>
      <param name="productParametersList">订单商品创建参数的列表</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CreateOrderProductParametersExtensions">
      <summary>
            订单商品创建参数的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.CreateOrderProductParametersExtensions.GetSellerIdsHasRealProducts(System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters})">
      <summary>
            获取包含了实体商品的卖家Id列表
            无卖家的Id等于Guid.Empty
            </summary>
      <param name="parametersList">订单商品创建参数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions">
      <summary>
            订单参数的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions.GetCartProducts(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters)">
      <summary>
            获取购物车商品Id =&gt; 订购数量
            </summary>
      <param name="parameters">订单参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions.GetShippingAddress(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters)">
      <summary>
            获取收货地址信息
            注意返回的信息是新建的，没有绑定用户和Id
            </summary>
      <param name="parameters">订单参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions.SetShippingAddress(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters,ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress)">
      <summary>
            设置收货地址信息
            </summary>
      <param name="parameters">订单参数</param>
      <param name="address">收货地址</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions.GetSaveShipppingAddressId(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters)">
      <summary>
            获取需要保存收货地址的Id
            如果不保存则返回null，如果更新则返回id，如果添加则返回0
            </summary>
      <param name="parameters">订单参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions.GetOrderComment(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters)">
      <summary>
            获取订单留言
            </summary>
      <param name="parameters">订单参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions.GetSellerToLogistics(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters)">
      <summary>
            获取卖家Id =&gt; 选中的物流Id
            没有卖家时卖家Id等于Guid.Empty
            </summary>
      <param name="parameters">订单参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderParametersExtensions.GetPaymentApiId(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters)">
      <summary>
            获取支付接口Id
            </summary>
      <param name="parameters">订单参数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderPriceCalcResultExtensions">
      <summary>
            订单或订单商品的价格计算结果的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderPriceCalcResultExtensions.Sum(System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part})">
      <summary>
            获取价格的组成部分的合计
            </summary>
      <param name="parts">价格组成部分</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.OrderPriceCalcResultExtensions.GetDescription(System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part})">
      <summary>
            获取价格组成部分的描述
            例 "商品总价100 + 运费20 - 优惠50"
            </summary>
      <param name="parts">价格组成部分</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.SellerOrderExtensions">
      <summary>
            卖家订单的扩展函数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.SellerOrderExtensions.CheckFunc">
      <summary>
            检查函数的类型
            </summary>
      <param name="order">订单</param>
      <param name="result">判断结果</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.SellerOrderExtensions.Check(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Func{ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces.IOrderChecker,ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.SellerOrderExtensions.CheckFunc})">
      <summary>
            检查订单是否满足指定条件
            返回是否满足和文本信息
            </summary>
      <param name="order">订单</param>
      <param name="getCheckFunc">获取检查函数的函数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.SellerOrderExtensions.SetState(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderState)">
      <summary>
            设置订单的状态和状态时间
            </summary>
      <param name="order">订单</param>
      <param name="state">状态</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.SellerOrderExtensions.ContainsRealProduct(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            判断订单是否包含实体商品
            </summary>
      <param name="order">订单</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.ShippingAddressExtensions">
      <summary>
            收货地址的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions.ShippingAddressExtensions.GenerateSummary(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress)">
      <summary>
            生成完整的收货地址字符串
            </summary>
      <param name="address">收货地址</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.BuyerOrderRepository">
      <summary>
            买家订单的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.CartProductRepository">
      <summary>
            购物车商品的仓储
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.CartProductRepository.GetManyBySession(ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session,System.Nullable{ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType})">
      <summary>
            获取会话对应的购物车商品列表
            </summary>
      <param name="session">会话</param>
      <param name="type">购物车商品类型，传入null时获取所有类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.CartProductRepository.AddOrIncrease(ZKWeb.Plugins.Common.Base.src.Domain.Entities.Session,System.Guid,ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            添加购物车商品
            如果商品已在购物车则增加里面的数量
            </summary>
      <param name="session">会话</param>
      <param name="productId">商品Id</param>
      <param name="type">购物车商品类型</param>
      <param name="parameters">商品匹配参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.CartProductRepository.MergeToUser(System.Guid,System.Guid)">
      <summary>
            把属于会话的购物车商品整合到用户中
            用于允许非会员下单时，未登录前添加的商品可以在登陆后整合到登陆后的用户
            </summary>
      <param name="sessionId">会话Id</param>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.OrderCommentRepository">
      <summary>
            订单留言的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.OrderDeliveryRepository">
      <summary>
            订单发货的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.SellerOrderRepository">
      <summary>
            卖家订单的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories.ShippingAddressRepository">
      <summary>
            收货地址的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.BuyerOrderManager">
      <summary>
            买家订单管理器
            包含买家使用的订单操作
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.BuyerOrderManager.GetBuyerOrderIdFromSerial(System.String)">
      <summary>
            根据订单编号获取买家订单Id
            失败时返回null
            </summary>
      <param name="serial">订单编号</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.BuyerOrderManager.GetBuyerOrderIdsFromSerials(System.Collections.Generic.IList{System.String})">
      <summary>
            根据订单编号列表获取买家订单Id列表
            返回的数量不一定一致
            </summary>
      <param name="serials">订单编号</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.BuyerOrderManager.GetSellerOrderIdFromBuyerOrderId(System.Guid)">
      <summary>
            根据买家订单Id获取卖家订单Id
            </summary>
      <param name="orderId">买家订单Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.BuyerOrderManager.CancelOrder(System.Guid,System.Nullable{System.Guid},System.String)">
      <summary>
            取消订单
            </summary>
      <param name="orderId">买家订单Id</param>
      <param name="operatorId">操作人Id</param>
      <param name="reason">作废理由，必填</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.BuyerOrderManager.ConfirmOrder(System.Guid,System.Nullable{System.Guid})">
      <summary>
            确认收货
            </summary>
      <param name="orderId">买家订单Id</param>
      <param name="operatorId">操作人Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.BuyerOrderManager.MergePayment(System.Collections.Generic.IList{System.Guid})">
      <summary>
            合并支付
            返回合并后的支付交易Id
            </summary>
      <param name="orderIds">买家Id列表</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager">
      <summary>
            购物车商品管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.CartProductTotalCountCacheTime">
      <summary>
            购物车商品的总数量的缓存时间
            默认是3秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.CartProductTotalCountCache">
      <summary>
            购物车商品的总数量的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.SessionExpireDaysForNonUserPurcharse">
      <summary>
            非会员添加购物车商品时，保留会话的天数
            默认是1天，可通过网站配置指定
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.AddCartProduct(System.Guid,ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            添加购物车商品到当前会话
            如果商品已在购物车则增加里面的数量
            </summary>
      <param name="productId">商品Id</param>
      <param name="type">购物车商品类型</param>
      <param name="parameters">匹配参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.DeleteCartProduct(System.Guid)">
      <summary>
            删除当前会话下的购物车商品
            </summary>
      <param name="cartProductId">购物车商品Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.UpdateCartProductCounts(System.Collections.Generic.IDictionary{System.Guid,System.Int64})">
      <summary>
            更新当前会话下的购物车商品数量
            </summary>
      <param name="counts">{ 购物车商品Id: 数量 }</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.MergeToUser(System.Guid,System.Guid)">
      <summary>
            把属于会话的购物车商品整合到用户中
            用于允许非会员下单时，未登录前添加的商品可以在登录后整合到自身的购物车中
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.GetCartProducts(ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType)">
      <summary>
            获取当前会话下的购物车商品列表
            为了保证数据的实时性，这个函数不使用缓存
            </summary>
      <param name="type">购物车商品类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.GetCartProductTotalCount(ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType)">
      <summary>
            获取购物车商品的总数量(商品 * 订购数量)
            结果会按当前用户Id和购物车商品类型缓存一定时间
            </summary>
      <param name="type">购物车商品类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.GetCartProductTotalPrice(System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct})">
      <summary>
            获取购物车商品的总价
            返回 { 货币: 价格 }
            </summary>
      <param name="cartProducts">购物车商品列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.GetMiniCartApiInfo">
      <summary>
            获取当前会话中的迷你购物车的信息
            为了保证数据的实时性，这个函数不使用缓存
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.GetCartApiInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.CartProductType)">
      <summary>
            获取当前会话中的购物车的信息
            为了保证数据的实时性，这个函数不使用缓存
            </summary>
      <param name="type">购物车类型</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.GetCartCalculatePriceApiInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters)">
      <summary>
            获取购物车商品计算价格的信息
            为了保证数据的实时性，这个函数不使用缓存
            </summary>
      <param name="parameters">订单创建参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.ClearExpiredCartProducts">
      <summary>
            删除过期的购物车商品
            返回删除的数量
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.CartProductManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.OrderCommentManager">
      <summary>
            订单留言管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.OrderCommentManager.AddComment(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Nullable{System.Guid},ZKWeb.Plugins.Shopping.Order.src.Domain.Enums.OrderCommentSide,System.String)">
      <summary>
            添加订单留言
            </summary>
      <param name="order">订单</param>
      <param name="userId">用户Id</param>
      <param name="side">买家或卖家留言</param>
      <param name="contents">留言内容</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.OrderDeliveryManager">
      <summary>
            订单发货管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.OrderDeliveryManager.DeliveryGoods(System.Guid,System.Nullable{System.Guid},System.Guid,System.String,System.String,System.Collections.Generic.IDictionary{System.Guid,System.Int64})">
      <summary>
            对订单进行发货
            当所有商品已发货时，设置订单为已发货
            </summary>
      <param name="orderId">订单Id</param>
      <param name="operatorId">发货人Id</param>
      <param name="logisticsId">物流Id</param>
      <param name="invoiceNo">快递单编号</param>
      <param name="remark">备注</param>
      <param name="deliveryCounts">订单商品Id到发货数量的索引</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.OrderDeliveryManager.GetUnshippedProductMapping(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            获取未发货的订单商品数量索引
            返回 { 订单商品Id: 未发数量 }
            </summary>
      <param name="order">订单</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.OrderDeliveryManager.GetShippedProductMapping(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            获取已发货的订单商品数量索引
            返回 { 订单商品Id: 已发数量 }
            </summary>
      <param name="order">订单</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager">
      <summary>
            卖家订单管理器
            包含费用计算，订单创建和卖家使用的订单操作
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.ReleatedTransactionsCache">
      <summary>
            订单关联交易的缓存，只在同一个Http上下文中有效
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.CalculateOrderProductUnitPrice(System.Nullable{System.Guid},ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters)">
      <summary>
            计算订单商品的单价
            返回价格保证大于或等于0
            </summary>
      <param name="userId">用户Id，未登录时等于null</param>
      <param name="parameters">创建订单商品的参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.CalculateOrderPrice(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters)">
      <summary>
            计算订单的价格
            返回价格保证大于0
            </summary>
      <param name="parameters">创建订单的参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.CalculateLogisticsCost(System.Guid,System.Nullable{System.Guid},ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters)">
      <summary>
            计算订单使用指定的物流的运费
            返回 ((运费, 货币), 错误信息)
            </summary>
      <param name="logisticsId">物流Id</param>
      <param name="sellerId">卖家Id</param>
      <param name="parameters">订单创建参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.GetAvailableShippingAddress(System.Nullable{System.Guid})">
      <summary>
            获取创建订单可用的收货地址列表
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.GetAvailablePaymentApis(System.Nullable{System.Guid})">
      <summary>
            获取创建订单可用的支付接口列表
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.GetAvailableLogistics(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>
            获取创建订单可用的物流列表
            </summary>
      <param name="userId">用户Id</param>
      <param name="sellerId">卖家Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.CreateOrder(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters)">
      <summary>
            创建订单
            </summary>
      <param name="parameters">创建订单的参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.EditCost(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Nullable{System.Guid},ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderEditCostParameters)">
      <summary>
            修改订单，订单商品和订单交易的金额
            </summary>
      <param name="order">订单</param>
      <param name="operatorId">操作人的Id</param>
      <param name="parameters">修改参数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.EditShippingAddress(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Nullable{System.Guid},ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.ShippingAddress)">
      <summary>
            编辑订单收货地址
            </summary>
      <param name="order">订单</param>
      <param name="operatorId">操作人的Id</param>
      <param name="address">收货地址</param>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.RecordType">
      <summary>
            订单明细记录类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.AddDetailRecord(System.Guid,System.Nullable{System.Guid},System.String,System.Object)">
      <summary>
            添加订单明细记录
            </summary>
      <param name="orderId">订单Id</param>
      <param name="creatorId">创建人Id</param>
      <param name="content">内容</param>
      <param name="extraData">附加数据</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.GetDetailRecords(System.Guid)">
      <summary>
            获取指定订单的所有明细记录
            </summary>
      <param name="orderId">交易Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.GetReleatedTransactions(System.Guid)">
      <summary>
            获取订单关联的交易列表
            </summary>
      <param name="orderId">订单Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.GetCheckoutUrl(System.Guid)">
      <summary>
            获取用于支付订单的Url
            </summary>
      <param name="orderId">订单Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.ReduceStock(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            根据订单中订购的商品减少库存
            </summary>
      <param name="order">订单</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.ProcessOrderPaid(System.Guid)">
      <summary>
            处理订单已付款
            处理失败时记录到订单记录
            </summary>
      <param name="orderId">订单Id</param>
      <returns>是否处理成功</returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.ProcessAllGoodsShipped(System.Guid)">
      <summary>
            处理订单全部商品已发货
            处理失败时记录到订单记录
            </summary>
      <param name="orderId">订单Id</param>
      <returns>是否处理成功</returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.ProcessSuccess(System.Guid)">
      <summary>
            处理订单交易成功
            处理失败时记录到订单记录
            </summary>
      <param name="orderId">订单Id</param>
      <returns>是否处理成功</returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.CancelOrder(System.Guid,System.Nullable{System.Guid},System.String)">
      <summary>
            取消订单
            </summary>
      <param name="orderId">订单Id</param>
      <param name="operatorId">操作人Id</param>
      <param name="reason">作废理由，必填</param>
      <returns>是否处理成功</returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.SetOrderInvalid(System.Guid,System.Nullable{System.Guid},System.String)">
      <summary>
            作废订单
            </summary>
      <param name="orderId">订单Id</param>
      <param name="operatorId">操作人Id</param>
      <param name="reason">作废理由，必填</param>
      <returns>是否处理成功</returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.ConfirmOrder(System.Guid,System.Nullable{System.Guid},System.Boolean)">
      <summary>
            确认收货
            </summary>
      <param name="orderId">订单Id</param>
      <param name="operatorId">操作人Id</param>
      <param name="fromBuyer">是否从买家确认</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.AutoCancelOrder">
      <summary>
            自动取消未付款的订单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.SellerOrderManager.AutoConfirmOrder">
      <summary>
            自动确认收货
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.ShippingAddressManager">
      <summary>
            收货地址管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Services.ShippingAddressManager.GetShippingAddresses(System.Nullable{System.Guid})">
      <summary>
            获取用户的收货地址列表
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters">
      <summary>
            创建订单的参数
            可用于计算订单价格和创建订单
            可以从Json反序列化（除了下单的用户Id外）
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters.UserId">
      <summary>
            下单的用户Id
            未登录时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters.SessionId">
      <summary>
            下单的会话Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters.OrderParameters">
      <summary>
            订单参数
            包含收货地址，选择的物流Id和收款接口Id等
            格式 {
            	ShippingAddress: { Country: ..., RegionId: ..., ... },
            	SellerToLogistics: { SellerId: LogisticsId, ... },
            	PaymentApiId: ...,
            	CartProducts: { Id: Count, ... },
            	...
            }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters.OrderProductParametersList">
      <summary>
            创建订单商品的参数列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderParameters.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters">
      <summary>
            创建订单商品的参数
            可用于计算订单商品价格和创建订单
            可以从Json反序列化
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters.ProductId">
      <summary>
            商品Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters.MatchParameters">
      <summary>
            商品匹配参数
            订购数量在OrderCount键下
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters.Extra">
      <summary>
            附加数据
            计算价格等时可以使用这里传递数据，但创建订单后不会保留
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderResult">
      <summary>
            创建订单的结果
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderResult.CreatedBuyerOrders">
      <summary>
            创建的买家订单列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderResult.CreatedSellerOrders">
      <summary>
            创建的卖家订单列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderResult.CreatedTransactions">
      <summary>
            创建的支付交易列表
            如果有多个，最后一个支付交易应该是合并交易
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderResult.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderEditCostParameters">
      <summary>
            修改订单价格的参数
            用于修改订单，订单商品和订单交易的金额
            可以从Json反序列化
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderEditCostParameters.OrderProductCountMapping">
      <summary>
            订单商品数量的修改
            { 订单商品Id: 数量，删除时为0 }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderEditCostParameters.OrderProductUnitPriceMapping">
      <summary>
            订单商品单价的修改
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderEditCostParameters.OrderTotalCostCalcResult">
      <summary>
            订单总金额的修改
            [{ Delta: 100, Type: "ProductTotalPrice" }]
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderEditCostParameters.TransactionAmountMapping">
      <summary>
            订单交易金额的修改
            { 交易Id: 金额 }
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderEditCostParameters.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderItems">
      <summary>
            订单的附加数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderParameters">
      <summary>
            订单参数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult">
      <summary>
            订单或订单商品的价格计算结果
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Parts">
      <summary>
            价格的组成部分
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Currency">
      <summary>
            货币单位
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.ToLiquid">
      <summary>
            允许在模板中描画
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part">
      <summary>
            价格的组成部分
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part.Type">
      <summary>
            类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part.Delta">
      <summary>
            影响量，可以是正数或负数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part.#ctor(System.String,System.Decimal)">
      <summary>
            初始化
            </summary>
      <param name="type">类型</param>
      <param name="delta">影响量</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part.ToLiquid">
      <summary>
            允许在模板中描画
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderProductItems">
      <summary>
            订单商品的附加数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderStateTimes">
      <summary>
            订单各个状态的切换时间
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.CreateOrderCommenForm">
      <summary>
            创建订单时的留言表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.CreateOrderCommenForm.OrderComment">
      <summary>
            订单留言
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.CreateOrderForm">
      <summary>
            用于创建订单的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.CreateOrderForm.CreateOrderParameters">
      <summary>
            创建订单的参数，格式是Json
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.CreateOrderForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.CreateOrderForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderCancelForm">
      <summary>
            取消订单的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderCancelForm.CancelReason">
      <summary>
            取消原因
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderCancelForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderCancelForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderConfirmForm">
      <summary>
            确认收货的表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderConfirmForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderConfirmForm.OnSubmit">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderConfirmInsteadOfBuyerForm">
      <summary>
            后台代替买家确认收货的表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderConfirmInsteadOfBuyerForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderConfirmInsteadOfBuyerForm.OnSubmit">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1">
      <summary>
            发货单详情页表单的基类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1.DeliverySerial">
      <summary>
            发货单编号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1.OrderLogistics">
      <summary>
            快递单编号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1.LogisticsSerial">
      <summary>
            物流配送
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1.DeliveryOperator">
      <summary>
            发货人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1.DeliveryProductTable">
      <summary>
            本次发货的订单商品表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBaseDisplayForm`1.OnBind(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBuyerDisplayForm">
      <summary>
            买家查看的发货单详情页
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryBuyerDisplayForm.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm">
      <summary>
            订单发货表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.AlertHtml">
      <summary>
            提示Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.Logistics">
      <summary>
            物流配送，虚拟发货时不使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.LogisticsSerial">
      <summary>
            快递单编号，虚拟发货时不使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.DeliveryCountsJson">
      <summary>
            发货件数 { 订单商品Id, 发货数量 }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.DeliveryProductTable">
      <summary>
            发货商品的表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliveryForm.OnSubmit">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliverySellerDisplayForm">
      <summary>
            卖家查看的发货单详情页
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliverySellerDisplayForm.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliverySellerDisplayForm.OnBind(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderDeliverySellerDisplayForm.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm">
      <summary>
            编辑订单价格的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.OperatorType">
      <summary>
            订单操作人的类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.OrderEditParametersJson">
      <summary>
            修改订单价格的参数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.OrderProductPriceEditTable">
      <summary>
            修改订单商品价格的表格
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.OrderCostEditTable">
      <summary>
            修改订单各项价格的表格
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.OrderTransactionAmountEditTable">
      <summary>
            修改订单交易金额的表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.#ctor(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.OnBind(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditCostForm.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm">
      <summary>
            编辑订单收货地址使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm.Region">
      <summary>
            地区
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm.ZipCode">
      <summary>
            邮政编码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm.DetailedAddress">
      <summary>
            详细地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm.ReceiverName">
      <summary>
            收货人姓名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm.ReceiverTel">
      <summary>
            收货人电话/手机
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm.OnBind(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderEditShippingAddressForm.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderSetInvalidForm">
      <summary>
            作废订单的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderSetInvalidForm.SetInvalidReason">
      <summary>
            作废原因
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderSetInvalidForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.OrderSetInvalidForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm">
      <summary>
            用户收货地址表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.ShippingAddress">
      <summary>
            收货地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.ShippingAddressAddin">
      <summary>
            管理收货地址, 保存收货地址
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.ShippingAddressJson">
      <summary>
            最终填写的收货地址的Json
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.ReceiverName">
      <summary>
            收货人姓名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.ReceiverTel">
      <summary>
            收货人电话
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.Region">
      <summary>
            地区
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.ZipCode">
      <summary>
            邮政编码
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms.ShippingAddressForm.DetailedAddress">
      <summary>
            详细地址
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions">
      <summary>
            Html项列表的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.HtmlItems.Extensions.HtmlItemsExtensions.AddOrderFilterBar(System.Collections.Generic.List{ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.HtmlItem})">
      <summary>
            添加订单列表过滤栏
            适合添加到搜索栏的旁边
            </summary>
      <param name="items">html项列表</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ListItemProviders.ShippingAddressListItemProvider">
      <summary>
            当前登录用户的收货地址的选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ListItemProviders.ShippingAddressListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider">
      <summary>
            默认的订单显示信息提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider.GetModalAction(ZKWeb.Templating.TemplateManager,System.String,System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            获取打开模态框的订单操作
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider.GetDisabledAction(ZKWeb.Templating.TemplateManager,System.String,System.String,System.String)">
      <summary>
            获取已禁用的订单操作
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider.GetLinkAction(ZKWeb.Templating.TemplateManager,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            获取跳转链接的订单操作
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider.AddActions(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加订单操作
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider.AddToolButtons(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加工具按钮
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider.AddSubjects(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加详细信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.DefaultOrderDisplayInfoProvider.AddWarnings(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加警告信息
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.Interfaces.IOrderDisplayInfoProvider">
      <summary>
            订单显示信息提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.Interfaces.IOrderDisplayInfoProvider.AddActions(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加订单操作的Html
            </summary>
      <param name="order">卖家订单</param>
      <param name="actions">订单操作列表</param>
      <param name="operatorType">操作人类型</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.Interfaces.IOrderDisplayInfoProvider.AddToolButtons(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加工具按钮
            </summary>
      <param name="order">卖家订单</param>
      <param name="toolButtons">警告信息列表</param>
      <param name="operatorType">操作人类型</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.Interfaces.IOrderDisplayInfoProvider.AddSubjects(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加详细信息
            </summary>
      <param name="order">卖家订单</param>
      <param name="subjects">信息列表</param>
      <param name="operatorType">操作人类型</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.Interfaces.IOrderDisplayInfoProvider.AddWarnings(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加警告信息
            </summary>
      <param name="order">卖家订单</param>
      <param name="warnings">警告信息列表</param>
      <param name="operatorType">操作人类型</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters">
      <summary>
            订单使用的模板过滤器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderProductSummary(System.Object)">
      <summary>
            获取订单商品概述的Html
            包含 主图缩略图, 名称, 匹配参数的描述
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderProductSeller(System.Object)">
      <summary>
            获取订单商品卖家的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderProductType(System.Object)">
      <summary>
            获取订单商品类型的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderProductPrice(System.Object)">
      <summary>
            获取订单商品价格的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderProductCountEditor(DotLiquid.Hash)">
      <summary>
            获取编辑订单商品数量的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderProductCount(System.Object)">
      <summary>
            获取订单商品数量的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderProductShippedCount(System.Object)">
      <summary>
            获取订单商品已发货数量的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderStateProgressClass(DotLiquid.Hash,System.String)">
      <summary>
            获取指定的订单状态在进度条中的css类
            如果状态和当前状态一致，返回active
            如果状态已经触发过，返回completed
            如果状态没有触发过，返回空值
            </summary>
      <param name="info">订单显示信息</param>
      <param name="state">指定状态的名称</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters.OrderFilters.OrderLastCommentSummary(DotLiquid.Hash)">
      <summary>
            返回最后一条留言的摘要
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType">
      <summary>
            订单操作人的类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType.Buyer">
      <summary>
            买家
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType.Seller">
      <summary>
            卖家
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType.Admin">
      <summary>
            管理员
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.BuyerOrderExtensions">
      <summary>
            买家订单的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.BuyerOrderExtensions.ToDisplayInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder)">
      <summary>
            转换订单到显示信息
            </summary>
      <param name="order">买家订单</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.CartProductExtensions">
      <summary>
            购物车商品的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.CartProductExtensions.ToOrderProductDisplayInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.CartProduct)">
      <summary>
            从购物车商品生成显示信息
            生成后会设置购物车商品Id到附加数据
            </summary>
      <param name="cartProduct">购物车商品</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.CreateOrderProductParametersExtensions">
      <summary>
            订单商品创建参数的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.CreateOrderProductParametersExtensions.ToOrderProductDisplayInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.CreateOrderProductParameters,System.Nullable{System.Guid})">
      <summary>
            从订单商品创建参数生成显示信息
            </summary>
      <param name="parameters">订单商品创建参数</param>
      <param name="userId">用户Id，未登录时等于null</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions">
      <summary>
            订单显示信息的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetTableHeadingHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单列表页的表格头部
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetTotalCostHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单总价的Html
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetTotalCostWithPartsHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单总价和价格组成部分的Html
            会同时显示订单总价和价格组成部分
            但组成部分中的商品总价会忽略显示
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetBaseInformationHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单基本信息的Html
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetOrderActionsTableCellHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单操作在表格单元格(订单列表页)中的Html
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetDeliveryRecordsHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo,System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderDelivery})">
      <summary>
            获取发货记录的Html
            </summary>
      <param name="info">订单显示信息</param>
      <param name="deliveries">发货记录</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetOrderRecordsHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单详细记录的html
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetReleatedTransactionsHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取相关交易的Html
            </summary>
      <param name="info">订单显示信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetOrderCommentsHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo,System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderComment})">
      <summary>
            获取订单留言的Html
            </summary>
      <param name="info">订单显示信息</param>
      <param name="comments">留言列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetOrderProductPriceEditHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单商品编辑表格的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetOrderCostEditHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单各项价格编辑表格的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderDisplayInfoExtensions.GetOrderTransactionEditHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo)">
      <summary>
            获取订单交易金额编辑表格的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderPriceCalcResultExtensions">
      <summary>
            订单价格计算结果的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderPriceCalcResultExtensions.GetDeltaEditor(ZKWeb.Plugins.Shopping.Order.src.Domain.Structs.OrderPriceCalcResult.Part)">
      <summary>
            获取组成部分的影响量的编辑器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions">
      <summary>
            订单商品的显示信息的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetSummaryHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取订单商品概述的Html
            包含 主图缩略图, 名称, 匹配参数的描述
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetSellerHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取订单商品卖家的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetPriceHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取订单商品价格的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetPriceEditor(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取编辑订单商品价格的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetCountEditor(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取编辑订单商品数量的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetOrderCountHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取订单商品数量的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetShippedCountHtml(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取订单商品已发数量的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetDeliveryCountEditor(ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo)">
      <summary>
            获取编辑订单商品发货数量的Html
            </summary>
      <param name="info">订单商品的信息</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetSummryListHtml(System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo})">
      <summary>
            获取订单商品概述列表的Html
            </summary>
      <param name="infos">订单商品的信息列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetPriceListHtml(System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo})">
      <summary>
            获取订单商品价格列表的Html
            </summary>
      <param name="infos">订单商品的信息列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetOrderCountListHtml(System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo})">
      <summary>
            获取订单商品数量列表的Html
            </summary>
      <param name="infos">订单商品的信息列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductDisplayInfoExtensions.GetShippedCountListHtml(System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo})">
      <summary>
            获取订单商品已发数量列表的Html
            </summary>
      <param name="infos">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductExtensions">
      <summary>
            订单商品的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.OrderProductExtensions.ToDisplayInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.OrderProduct)">
      <summary>
            转换订单商品到显示信息
            </summary>
      <param name="orderProduct">订单商品</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.PaymentTransactionExtensions">
      <summary>
            交易的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.PaymentTransactionExtensions.GetAmountEditor(ZKWeb.Plugins.Finance.Payment.src.Domain.Entities.PaymentTransaction)">
      <summary>
            获取交易金额的编辑器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.SellerOrderExtensions">
      <summary>
            卖家订单的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions.SellerOrderExtensions.ToDisplayInfo(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            转换订单到显示信息
            </summary>
      <param name="order">卖家订单</param>
      <param name="operatorType">操作人类型</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo">
      <summary>
            订单的显示信息
            用于显示在订单详情页和订单列表页等
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.Id">
      <summary>
            订单Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.Serial">
      <summary>
            流水号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.BuyerId">
      <summary>
            买家Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.Buyer">
      <summary>
            买家用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.SellerId">
      <summary>
            卖家Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.Seller">
      <summary>
            卖家用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.State">
      <summary>
            订单状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.StateDescription">
      <summary>
            订单状态的描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.StateTimes">
      <summary>
            订单状态到各个状态的时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.OrderParameters">
      <summary>
            订单参数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.TotalCost">
      <summary>
            订单总金额
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.TotalCostString">
      <summary>
            订单总金额的字符串，经过货币格式化
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.TotalCostDescription">
      <summary>
            订单总金额的描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.TotalCostCalcResult">
      <summary>
            订单总金额的计算结果对象
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.OriginalTotalCost">
      <summary>
            原始订单总金额
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.OriginalTotalCostString">
      <summary>
            原始订单总金额的字符串，经过货币格式化
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.OriginalTotalCostDescription">
      <summary>
            原始订单总金额的描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.OriginalTotalCostResult">
      <summary>
            原始订单总金额的计算结果对象
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.Currency">
      <summary>
            货币单位
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.RemarkFlags">
      <summary>
            备注旗帜
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.LastComment">
      <summary>
            最后一条留言
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.ViewTransactionUrlFormat">
      <summary>
            查看交易的Url格式
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.ViewDeliveryUrlFormat">
      <summary>
            查看发货单的Url格式
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.WarningHtmls">
      <summary>
            警告信息列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.ToolButtonHtmls">
      <summary>
            订单详情的工具栏按钮列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.SubjectHtmls">
      <summary>
            订单详情的内容列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.ActionHtmls">
      <summary>
            操作列表
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.OrderProducts">
      <summary>
            订单商品的显示信息列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderDisplayInfo.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo">
      <summary>
            订单商品的显示信息
            用于显示在购物车页和订单列表页等
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.ProductId">
      <summary>
            商品Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.OrderProductId">
      <summary>
            订单商品Id，成员的值只有在显示"订单商品"时才会存在
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.Name">
      <summary>
            商品名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.ImageWebPath">
      <summary>
            商品主图缩略图的网页路径
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.MatchedParameters">
      <summary>
            商品匹配参数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.MatchedParametersDescription">
      <summary>
            商品匹配参数的描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.UnitPrice">
      <summary>
            单价
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.OriginalUnitPrice">
      <summary>
            原始单价
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.Currency">
      <summary>
            货币
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.UnitPriceString">
      <summary>
            单价字符串
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.UnitPriceDescription">
      <summary>
            单价的描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.OriginalUnitPriceString">
      <summary>
            原始单价字符串
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.OriginalUnitPriceDescription">
      <summary>
            原始单价的描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.Count">
      <summary>
            数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.ShippedCount">
      <summary>
            已发货数量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.SellerId">
      <summary>
            卖家Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.Seller">
      <summary>
            卖家用户名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.State">
      <summary>
            商品状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.Type">
      <summary>
            商品类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.IsRealProduct">
      <summary>
            是否实体商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.Extra">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.OrderProductDisplayInfo.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkApiController">
      <summary>
            商品收藏的Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkApiController.Add(System.Guid)">
      <summary>
            添加收藏的商品
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkApiController.IsBookmarked(System.Guid)">
      <summary>
            判断商品是否已收藏
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkCrudController">
      <summary>
            前台用户管理收藏的商品的控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers.ProductBookmarkCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark">
      <summary>
            商品收藏
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.Id">
      <summary>
            收藏Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.Product">
      <summary>
            收藏的商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.Owner">
      <summary>
            收藏商品的用户
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities.ProductBookmark.ToString">
      <summary>
            返回收藏的商品名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Repositories.ProductBookmarkRepository">
      <summary>
            商品收藏的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Services.ProductBookmarkManager">
      <summary>
            商品收藏的管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Services.ProductBookmarkManager.Add(System.Guid,System.Guid)">
      <summary>
            添加收藏的商品
            添加成功返回true，已经存在返回false
            商品不存在或已删除等时抛出例外
            </summary>
      <param name="userId">用户Id</param>
      <param name="productId">商品Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Services.ProductBookmarkManager.IsBookmarked(System.Guid,System.Guid)">
      <summary>
            判断商品是否已收藏
            </summary>
      <param name="userId">用户Id</param>
      <param name="productId">商品Id</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductBookmark.src.Plugin">
      <summary>
            插件入口点
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductBookmark.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Controllers.ProductRatingApiController">
      <summary>
            商品评价的Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Controllers.ProductRatingApiController.Ratings(System.Guid)">
      <summary>
            搜索指定商品的评价列表
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Controllers.ProductRatingController">
      <summary>
            商品评价的控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Controllers.ProductRatingController.Rate(System.String)">
      <summary>
            商品评价页
            </summary>
      <param name="serial">订单编号</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating">
      <summary>
            商品评价
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.Id">
      <summary>
            评价Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.OrderProduct">
      <summary>
            评价的订单商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.Product">
      <summary>
            评价的商品，是OrderProduct的冗余，用于改进查询速度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.Owner">
      <summary>
            评价人
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.Rank">
      <summary>
            评价级别
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.Comment">
      <summary>
            评价内容
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.DescriptionMatchScore">
      <summary>
            描述相符的分数，范围是1~5
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.ServiceQualityScore">
      <summary>
            服务质量的分数，范围是1~5
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.DeliverySpeedScore">
      <summary>
            发货速度的分数，范围是1~5
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.MaxScore">
      <summary>
            最大分数值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating.CheckScore(System.Int32)">
      <summary>
            检查分数值是否有效
            </summary>
      <param name="score">分数值</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingAlbumImageType">
      <summary>
            商品相册的图片类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingAlbumImageType.Normal">
      <summary>
            原图
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingAlbumImageType.Thumbnail">
      <summary>
            缩略图
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingAlbumImageSuffixAttribute">
      <summary>
            商品相册的图片类型的后缀
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingAlbumImageSuffixAttribute.Suffix">
      <summary>
            后缀名
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingRank">
      <summary>
            商品评价级别
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingRank.GoodRate">
      <summary>
            好评
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingRank.MediumRate">
      <summary>
            中评
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingRank.BadRate">
      <summary>
            差评
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Repositories.ProductRatingRepository">
      <summary>
            商品评价的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager">
      <summary>
            商品评价相册管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.AlbumImagePathFormat">
      <summary>
            商品评价相册图片的路径格式 (Id, 序号, 后缀)
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.AlbumImageExtensions">
      <summary>
            商品评价相册图片的后缀
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.AlbumImageQuality">
      <summary>
            商品评价相册图片质量
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.ThumbnailImageWidth">
      <summary>
            缩略图宽度
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.ThumbnailImageHeight">
      <summary>
            缩略图高度
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.GetAlbumImageStorageFile(System.Guid,System.Int64,ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingAlbumImageType)">
      <summary>
            获取商品评价相册图片的储存文件
            </summary>
      <param name="id">订单商品Id</param>
      <param name="index">图片序号</param>
      <param name="type">商品相册的图片类型，原图或缩略图等</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.GetAlbumImageWebPath(System.Guid,System.Int64,ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums.ProductRatingAlbumImageType)">
      <summary>
            获取商品评价相册图片的网页路径，不存在时返回null
            </summary>
      <param name="id">订单商品Id</param>
      <param name="index">图片序号</param>
      <param name="type">商品相册的图片类型，原图或缩略图等</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.GetExistAlbumImageWebPaths(System.Guid)">
      <summary>
            获取商品评价相册图片的网页路径列表
            不存在的图片不会包含在列表中
            </summary>
      <param name="id">订单商品Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.SaveAlbumImage(System.Guid,System.Int64,System.IO.Stream)">
      <summary>
            保存商品评价相册图片
            </summary>
      <param name="id">订单商品Id</param>
      <param name="index">图片序号</param>
      <param name="imageStream">读取图片的数据流</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingAlbumManager.DeleteAlbumImage(System.Guid,System.Int64)">
      <summary>
            删除相册图片
            </summary>
      <param name="id">订单商品Id</param>
      <param name="index">图片序号，null时删除主图</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager">
      <summary>
            商品评价管理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.CanRateOrder(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            判断是否可以评价这个订单
            如果订单状态是交易成功, 并且有至少一个未评价的订单商品则可以评价这个订单
            </summary>
      <param name="order">卖家订单</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.GetRatingUrl(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            获取评价订单商品的Url
            </summary>
      <param name="order">卖家订单</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.GetUnratedOrderProducts(System.Guid)">
      <summary>
            获取订单中未评价的订单商品列表
            </summary>
      <param name="orderId">买家订单Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.GetUnratedOrderProductDisplayInfos(System.Guid)">
      <summary>
            获取订单中未评价的订单商品的显示信息列表
            </summary>
      <param name="orderId">买家订单Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.AddRatingsFromRequestArguments(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}},System.Collections.Generic.IEnumerable{ZKWebStandard.Collections.Pair{System.String,ZKWebStandard.Web.IHttpPostedFile}})">
      <summary>
            从请求参数添加商品评价
            </summary>
      <param name="orderId">买家订单Id</param>
      <param name="arguments">请求参数</param>
      <param name="files">提交文件列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.SelectOneRatableBuyerOrder(System.Guid)">
      <summary>
            选择一个可评价的买家订单Id
            返回的Id不固定，也可能返回Guid.Empty
            </summary>
      <param name="userId">用户Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.StripUsername(System.String)">
      <summary>
            处理评价人的用户名
            例如 qwert =&gt; q***t
            </summary>
      <param name="username">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services.ProductRatingManager.GetProductRatingsHtml(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            获取商品评价的html
            </summary>
      <param name="order">卖家订单</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.AjaxTableHandlers.ProductRatingTableHandler">
      <summary>
            商品评价的表格处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.AjaxTableHandlers.ProductRatingTableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.AjaxTableHandlers.ProductRatingTableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities.ProductRating}})">
      <summary>
            选择字段
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.AjaxTableHandlers.ProductRatingTableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            构建回应
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToBuyerOrderForm">
      <summary>
            给用户中心的订单详情页添加评价信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToBuyerOrderForm.ProductRatings">
      <summary>
            评价表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToBuyerOrderForm.OnCreated(ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form)">
      <summary>
            创建表单时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToBuyerOrderForm.OnBind(ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form,ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder)">
      <summary>
            绑定表单时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToBuyerOrderForm.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form,ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder)">
      <summary>
            提交表单时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToBuyerOrderForm.OnSubmitSaved(ZKWeb.Plugins.Shopping.Order.src.UserPanelPages.BuyerOrderCrudController.Form,ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.BuyerOrder)">
      <summary>
            实体保存后的处理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToSellerOrderForm">
      <summary>
            给后台的订单详情页添加评价信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToSellerOrderForm.ProductRatings">
      <summary>
            评价表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToSellerOrderForm.OnCreated(ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form)">
      <summary>
            创建表单时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToSellerOrderForm.OnBind(ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form,ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            绑定表单时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToSellerOrderForm.OnSubmit(ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form,ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            提交表单时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers.AddRatingsToSellerOrderForm.OnSubmitSaved(ZKWeb.Plugins.Shopping.Order.src.Controllers.SellerOrderCrudController.Form,ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder)">
      <summary>
            实体保存后的处理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.OrderDisplayInfoProviders.RatingOrderDisplayInfoProvider">
      <summary>
            前台订单添加评价的按钮
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.OrderDisplayInfoProviders.RatingOrderDisplayInfoProvider.AddActions(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加订单操作
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.OrderDisplayInfoProviders.RatingOrderDisplayInfoProvider.AddToolButtons(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加工具按钮
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.OrderDisplayInfoProviders.RatingOrderDisplayInfoProvider.AddSubjects(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加详细信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.OrderDisplayInfoProviders.RatingOrderDisplayInfoProvider.AddWarnings(ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.SellerOrder,System.Collections.Generic.IList{ZKWebStandard.Collection.HtmlString},ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums.OrderOperatorType)">
      <summary>
            添加警告信息
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ExtraConfigKeys.ProductExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Components.ExtraConfigKeys.ProductExtraConfigKeys.ProductCategoryCacheTime">
      <summary>
            商品类目信息的缓存时间，单位是秒
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Components.ExtraConfigKeys.ProductExtraConfigKeys.ProductCacheTime">
      <summary>
            商品的缓存时间，单位是秒
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Components.ExtraConfigKeys.ProductExtraConfigKeys.ProductApiInfoCacheTime">
      <summary>
            商品信息的缓存时间，单位是秒
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Components.ExtraConfigKeys.ProductExtraConfigKeys.ProductSearchResultCacheTime">
      <summary>
            商品搜索结果的缓存时间，单位是秒
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductAlbumSettings">
      <summary>
            商品相册设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductAlbumSettings.OriginalImageWidth">
      <summary>
            原图宽度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductAlbumSettings.OriginalImageHeight">
      <summary>
            原图高度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductAlbumSettings.ThumbnailImageWidth">
      <summary>
            缩略图宽度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductAlbumSettings.ThumbnailImageHeight">
      <summary>
            缩略图高度
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductAlbumSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductListSettings">
      <summary>
            商品列表设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductListSettings.ProductsPerPage">
      <summary>
            每页显示的商品数量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs.ProductListSettings.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.Interfaces.IProductMatchedDataMatcher">
      <summary>
            商品匹配数据的匹配器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.Interfaces.IProductMatchedDataMatcher.IsMatched(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters,ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData)">
      <summary>
            判断是否匹配
            </summary>
      <param name="parameters">商品匹配参数</param>
      <param name="data">商品匹配数据</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.Interfaces.IProductMatchedDataMatcher.GetJavascriptMatchFunction">
      <summary>
            获取使用Javascript判断是否匹配的函数
            用于商品详情页的价格和库存显示
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.OrderCountMatcher">
      <summary>
            匹配购买数量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.OrderCountMatcher.IsMatched(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters,ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData)">
      <summary>
            判断是否匹配
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.OrderCountMatcher.GetJavascriptMatchFunction">
      <summary>
            获取使用Javascript判断是否匹配的函数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.PropertyMatcher">
      <summary>
            匹配规格(销售属性)
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.PropertyMatcher.IsMatched(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters,ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData)">
      <summary>
            判断是否匹配
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.PropertyMatcher.GetJavascriptMatchFunction">
      <summary>
            获取使用Javascript判断是否匹配的函数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchParametersComparers.Interfaces.IProductMatchParametersComparer">
      <summary>
            商品匹配参数比较器
            在所有比较器返回相等时才会判断参数相等
            可以用于
            - 添加商品到购物车时判断是否需要合并商品
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchParametersComparers.Interfaces.IProductMatchParametersComparer.IsPartialEqual(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            比较商品匹配参数是否部分相等
            </summary>
      <param name="lhs">商品匹配参数</param>
      <param name="rhs">商品匹配参数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchParametersComparers.PropertiesComparer">
      <summary>
            比较参数中的商品属性值列表
            这个比较器不会比较名称，如果商品修改过别名但Id相同还是会返回相等
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchParametersComparers.PropertiesComparer.IsPartialEqual(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            判断商品匹配参数是否部分相等
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.Interfaces.IAmPurchasable">
      <summary>
            表示商品可以被购买
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.Interfaces.IAmVisibleToThePublic">
      <summary>
            表示商品是公开的
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.Interfaces.IProductState">
      <summary>
            商品状态的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.Interfaces.IProductState.State">
      <summary>
            商品状态
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.OnSale">
      <summary>
            上架中
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.OnSale.State">
      <summary>
            商品状态
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.StopSelling">
      <summary>
            已下架
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.StopSelling.State">
      <summary>
            商品状态
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.WaitForSales">
      <summary>
            准备上架
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.WaitForSales.State">
      <summary>
            商品状态
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.Interfaces.IAmRealProduct">
      <summary>
            表示商品是实体商品
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.Interfaces.IAmVirtualProduct">
      <summary>
            表示商品是虚拟商品
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.Interfaces.IProductType">
      <summary>
            商品类型的接口
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.Interfaces.IProductType.Type">
      <summary>
            商品类型
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.RealProduct">
      <summary>
            实体商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.RealProduct.Type">
      <summary>
            商品类型
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.VirtualProduct">
      <summary>
            虚拟商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.VirtualProduct.Type">
      <summary>
            商品类型
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController">
      <summary>
            商品相册设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController.Form.OriginalImageWidth">
      <summary>
            原图宽度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController.Form.OriginalImageHeight">
      <summary>
            原图高度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController.Form.ThumbnailImageWidth">
      <summary>
            缩略图宽度
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController.Form.ThumbnailImageHeight">
      <summary>
            缩略图高度
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductAlbumSettingsController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController">
      <summary>
            Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.PropertyEditor">
      <summary>
            获取指定类目对应的属性编辑器
            这里仅用于获取编辑器Html，不绑定数据也不检查权限
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.MatchedDataBinders">
      <summary>
            获取类目对应的商品匹配数据的绑定器列表
            这里仅用于获取绑定器的Json，不绑定数据也不检查权限
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.ProductInfo">
      <summary>
            获取商品信息
            不存在时返回null
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.MatchedDataMatchers">
      <summary>
            获取商品匹配数据的匹配器列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.ClassFilterInfo">
      <summary>
            商品列表分类过滤器使用的信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.TagFilterInfo">
      <summary>
            商品列表标签过滤器使用的信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.SortInfo">
      <summary>
            商品列表排序使用的信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductApiController.ProductSearch">
      <summary>
            搜索商品列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController">
      <summary>
            商品类目管理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.TableHandler">
      <summary>
            表格回调
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.TableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.Form">
      <summary>
            添加和编辑商品类目使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.Form.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.Form.SalesProperties">
      <summary>
            销售属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.Form.NonSalesProperties">
      <summary>
            非销售属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.Form.OnBind(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCategoryCrudController.Form.OnSubmit(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductClassController">
      <summary>
            商品分类
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductController">
      <summary>
            商品控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductController.View">
      <summary>
            前台商品详情页
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductController.List">
      <summary>
            前台商品列表页
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController">
      <summary>
            商品管理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.TableHandler">
      <summary>
            表格回调
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.TableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form">
      <summary>
            添加和编辑商品使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.Name">
      <summary>
            商品名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.Type">
      <summary>
            商品类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.State">
      <summary>
            商品状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.ProductClass">
      <summary>
            商品分类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.ProductTag">
      <summary>
            商品标签
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.Seller">
      <summary>
            卖家
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.ProductAlbumAlert">
      <summary>
            商品相册的提示信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.ProductAlbum">
      <summary>
            商品相册
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.Category">
      <summary>
            类目Id，没有时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.PropertyValues">
      <summary>
            选中的属性值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.MatchedDatas">
      <summary>
            价格库存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.Introduction">
      <summary>
            商品介绍
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.OnBind(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.OnSubmit(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductCrudController.Form.OnSubmitSaved(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            保存后的处理
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductListSettingsController">
      <summary>
            商品列表设置
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductListSettingsController.Form">
      <summary>
            表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductListSettingsController.Form.ProductsPerPage">
      <summary>
            每页显示的商品数量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductListSettingsController.Form.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductListSettingsController.Form.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController">
      <summary>
            商品属性管理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.TableHandler">
      <summary>
            表格回调
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.TableHandler.BuildTable(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableBuilder,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchBarBuilder)">
      <summary>
            构建表格
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.TableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty}@)">
      <summary>
            查询数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.TableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.TableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.TableHandler.OnResponse(ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchRequest,ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.AjaxTableSearchResponse)">
      <summary>
            添加列和操作
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form">
      <summary>
            添加和编辑商品属性使用的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.IsSalesProperty">
      <summary>
            是否销售属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.ControlType">
      <summary>
            控件类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.PropertyValues">
      <summary>
            属性值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.OnBind(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty)">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductPropertyCrudController.Form.OnSubmit(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty)">
      <summary>
            提交表单
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controllers.ProductTagController">
      <summary>
            商品标签
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Controller.ProductImageBrowserController">
      <summary>
            商品图片浏览器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product">
      <summary>
            商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Id">
      <summary>
            商品Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Category">
      <summary>
            商品类目，没有时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Name">
      <summary>
            商品名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Introduction">
      <summary>
            商品介绍，格式是Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Type">
      <summary>
            商品类型，必须是继承IProductType的类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.State">
      <summary>
            商品状态，必须是继承IProductState的状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Seller">
      <summary>
            卖家，可以等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Remark">
      <summary>
            备注，格式是Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Classes">
      <summary>
            关联的分类
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Tags">
      <summary>
            关联的标签
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.MatchedDatas">
      <summary>
            关联的匹配数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.PropertyValues">
      <summary>
            关联的属性值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory">
      <summary>
            商品类目
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.Id">
      <summary>
            类目Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.Name">
      <summary>
            类目名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.Properties">
      <summary>
            类目下的属性，多对多
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            支持描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.ToString">
      <summary>
            显示名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData">
      <summary>
            商品匹配数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Id">
      <summary>
            数据Id
            因为数据在编辑时会删除重建，其他表不能关联这里的Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Product">
      <summary>
            属于的商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Conditions">
      <summary>
            匹配条件
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Affects">
      <summary>
            影响数据
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Price">
      <summary>
            价格，等于null时继续匹配下一项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.PriceCurrency">
      <summary>
            价格的货币，跟随价格匹配
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Weight">
      <summary>
            重量，等于null时继续匹配下一项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Stock">
      <summary>
            库存，等于null时继续匹配下一项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.ItemNo">
      <summary>
            货号，等于null时继续匹配下一项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.BarCode">
      <summary>
            条形码，等于null时继续匹配下一项
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.MatchOrder">
      <summary>
            匹配顺序，从小到大
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Remark">
      <summary>
            备注，纯文本
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty">
      <summary>
            商品属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.Id">
      <summary>
            属性Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.Name">
      <summary>
            属性名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.IsSalesProperty">
      <summary>
            是否销售属性
            销售属性时买家在购买时必须选择该属性的值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.ControlType">
      <summary>
            输入控件类型
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.PropertyValues">
      <summary>
            属性值列表，一对多
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.Deleted">
      <summary>
            是否已删除
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            支持描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.ToString">
      <summary>
            显示名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue">
      <summary>
            商品属性值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.Id">
      <summary>
            属性值Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.Name">
      <summary>
            属性值名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.Property">
      <summary>
            所属的商品属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.DisplayOrder">
      <summary>
            显示顺序，从小到大
            自动分配
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.CreateTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.UpdateTime">
      <summary>
            更新时间
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.Remark">
      <summary>
            备注
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.DotLiquid#ILiquidizable#ToLiquid">
      <summary>
            支持描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.ToString">
      <summary>
            显示名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue">
      <summary>
            商品使用的属性值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue.Id">
      <summary>
            数据Id
            因为数据在编辑时会删除重建，其他表不能关联这里的Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue.Product">
      <summary>
            属于的商品
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue.Property">
      <summary>
            属性
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue.PropertyValue">
      <summary>
            属性值，手工输入时等于null
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue.PropertyValueName">
      <summary>
            属性值名称，允许手动修改
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue.Configure(ZKWeb.Database.IEntityMappingBuilder{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue})">
      <summary>
            配置数据库结构
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductAlbumImageType">
      <summary>
            商品相册的图片类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductAlbumImageType.Normal">
      <summary>
            原图
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductAlbumImageType.Thumbnail">
      <summary>
            缩略图
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductAlbumImageSuffixAttribute">
      <summary>
            商品相册的图片类型的后缀
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductAlbumImageSuffixAttribute.Suffix">
      <summary>
            后缀名
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductPropertyControlType">
      <summary>
            商品属性使用的输入控件类型
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductPropertyControlType.TextBox">
      <summary>
            文本框
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductPropertyControlType.CheckBox">
      <summary>
            多选框
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductPropertyControlType.RadioButton">
      <summary>
            单选按钮
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductPropertyControlType.DropdownList">
      <summary>
            下拉列表
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductPropertyControlType.EditableDropdownList">
      <summary>
            可编辑的下拉列表
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductCategoryExtensions">
      <summary>
            商品类目的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductCategoryExtensions.GetFullName(ZKWebStandard.Utils.ITreeNode{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory},System.String)">
      <summary>
            获取类目完整的显示名称
            格式
            顶级类目 &gt; 上级类目 &gt; 类目
            </summary>
      <param name="category">类目</param>
      <param name="delimiter">分隔符，默认是" &gt; "</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductCategoryExtensions.OrderedProperties(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory)">
      <summary>
            获取经过排序的属性列表
            </summary>
      <param name="category">类目</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductExtensions">
      <summary>
            商品的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductExtensions.GetSummaryHtml(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product,System.Int32)">
      <summary>
            获取商品概述的Html
            一般用于后台商品列表页等表格页面中
            </summary>
      <param name="product">商品</param>
      <param name="truncateSize">商品名称的截取长度</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductExtensions.FindPropertyValuesWhereNameContains(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product,System.String)">
      <summary>
            根据名称查找商品的属性
            属性名包含指定的名称时返回该属性
            </summary>
      <param name="product">商品</param>
      <param name="name">属性名称，可以是翻译之前的</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductExtensions.FindPropertyValuesFromPropertyParameters(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product,System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchParametersExtensions.PropertyParameter})">
      <summary>
            根据属性参数查找商品的属性
            属性在属性参数中时返回该属性
            </summary>
      <param name="product">商品</param>
      <param name="properties">商品属性参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductExtensions.GetProductState(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            获取商品状态
            </summary>
      <param name="product">商品</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductExtensions.GetProductType(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            获取商品类型
            </summary>
      <param name="product">商品</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataConditionsExtensions">
      <summary>
            商品匹配数据的匹配条件的扩展函数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataConditionsExtensions.PropertyCondition">
      <summary>
            商品属性条件
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataConditionsExtensions.GetOrderCountGE(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataConditions)">
      <summary>
            获取订购数量大于或等于指定数量的条件
            </summary>
      <param name="conditions">匹配条件</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataConditionsExtensions.GetProperties(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataConditions)">
      <summary>
            获取商品属性条件
            </summary>
      <param name="conditions">匹配条件</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions">
      <summary>
            商品匹配数据的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions.WhereMatched(System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData},ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            返回匹配的商品匹配数据
            </summary>
      <param name="list">商品匹配数据的列表</param>
      <param name="matchParameters">商品匹配参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions.GetCurrency(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData)">
      <summary>
            获取货币信息
            没有设置时返回默认货币信息
            </summary>
      <param name="data">商品匹配数据</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions.GetPriceString(System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData})">
      <summary>
            从商品匹配数据列表获取价格字符串
            最小价格等于最大价格时返回 最小价格
            不等于时返回 最小价格~最大价格
            </summary>
      <param name="matchedDatas">商品匹配数据列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions.GetTotalStockString(System.Collections.Generic.IEnumerable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData})">
      <summary>
            从商品匹配数据列表获取总库存字符串
            返回所有数据的库存合计
            </summary>
      <param name="matchedDatas">商品匹配数据列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions.ReduceStock(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData,System.Int64)">
      <summary>
            减少匹配数据中的库存
            有可能会减到负数但不会失败
            </summary>
      <param name="matchedData">匹配数据</param>
      <param name="delta">减少值</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions.ToEditList(System.Collections.Generic.ISet{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductMatchedData})">
      <summary>
            转换到编辑使用的列表
            </summary>
      <param name="values">数据库中的商品匹配数据列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchedDataExtensions.ToDatabaseSet(System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataForEdit},ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            转换到数据库使用的集合
            </summary>
      <param name="values">编辑后的商品匹配数据列表</param>
      <param name="product">商品</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchParametersExtensions">
      <summary>
            商品匹配参数的扩展函数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchParametersExtensions.PropertyParameter">
      <summary>
            商品属性参数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchParametersExtensions.GetProperties(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            获取商品属性参数
            </summary>
      <param name="parameters">商品匹配参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchParametersExtensions.GetOrderCount(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            获取订购数量
            </summary>
      <param name="parameters">商品匹配参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductMatchParametersExtensions.SetOrderCount(ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters,System.Int64)">
      <summary>
            设置订购数量
            </summary>
      <param name="parameters">商品匹配参数</param>
      <param name="orderCount">订购数量</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductPropertyExtensions">
      <summary>
            商品属性的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductPropertyExtensions.GetEditHtml(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty,ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductCategory)">
      <summary>
            获取编辑时使用的Html
            </summary>
      <param name="property">商品属性</param>
      <param name="category">商品类目</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductPropertyExtensions.OrderedPropertyValues(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty)">
      <summary>
            获取经过排序的属性值列表
            </summary>
      <param name="property">商品属性</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductPropertyValueExtensions">
      <summary>
            商品属性值的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductPropertyValueExtensions.ToEditList(System.Collections.Generic.ISet{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductPropertyValue})">
      <summary>
            转换到编辑使用的列表
            </summary>
      <param name="values">数据库中的商品属性对应的属性值列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductPropertyValueExtensions.ToDatabaseSet(System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductPropertyValueForEdit},ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductProperty)">
      <summary>
            转换到数据库使用的集合
            </summary>
      <param name="values">编辑后的商品属性对应的属性值列表</param>
      <param name="property">商品属性</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductToPropertyValueExtensions">
      <summary>
            商品属性值的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductToPropertyValueExtensions.ToEditList(System.Collections.Generic.ISet{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.ProductToPropertyValue})">
      <summary>
            转换到编辑使用的列表
            </summary>
      <param name="values">数据库中的商品对应的属性值列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions.ProductToPropertyValueExtensions.ToDatabaseSet(System.Collections.Generic.IList{ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductToPropertyValueForEdit},ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            转换到数据库使用的集合
            </summary>
      <param name="values">编辑后的商品对应的属性值列表</param>
      <param name="product">商品</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Repositories.ProductCategoryRepository">
      <summary>
            商品类目的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Repositories.ProductPropertyRepository">
      <summary>
            商品属性的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Repositories.ProductRepository">
      <summary>
            商品的仓储
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager">
      <summary>
            商品相册管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.DefaultAlbumImagePath">
      <summary>
            默认的商品相册图片的路径
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.AlbumImagePathFormat">
      <summary>
            商品相册图片的路径格式 (Id, 序号, 后缀)
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.AlbumImageExtensions">
      <summary>
            商品相册图片的后缀
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.AlbumImageQuality">
      <summary>
            商品相册图片质量
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.GetAlbumImageStorageFile(System.Guid,System.Nullable{System.Int64},ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductAlbumImageType)">
      <summary>
            获取商品相册图片的储存文件
            </summary>
      <param name="id">商品Id</param>
      <param name="index">图片序号，null时返回主图的路径</param>
      <param name="type">商品相册的图片类型，原图或缩略图等</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.GetAlbumImageWebPath(System.Guid,System.Nullable{System.Int64},ZKWeb.Plugins.Shopping.Product.src.Domain.Enums.ProductAlbumImageType,System.String)">
      <summary>
            获取商品相册图片的网页路径，不存在时返回默认路径
            </summary>
      <param name="id">商品Id</param>
      <param name="index">图片序号，null时返回主图的路径</param>
      <param name="type">商品相册的图片类型，原图或缩略图等</param>
      <param name="defaultPath">不存在时返回的默认路径</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.GetExistAlbumImageWebPaths(System.Guid)">
      <summary>
            获取商品相册图片的网页路径列表
            不存在的图片不会包含在列表中
            </summary>
      <param name="id">商品Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.SaveAlbumImage(System.Guid,System.Int64,System.IO.Stream)">
      <summary>
            保存相册图片
            </summary>
      <param name="id">商品Id</param>
      <param name="index">图片序号</param>
      <param name="imageStream">读取图片的数据流</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.DeleteAlbumImage(System.Guid,System.Nullable{System.Int64})">
      <summary>
            删除相册图片
            </summary>
      <param name="id">商品Id</param>
      <param name="index">图片序号，null时删除主图</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductAlbumManager.SetMainAlbumImage(System.Guid,System.Int64)">
      <summary>
            设置相册主图，返回是否设置成功
            </summary>
      <param name="id">商品Id</param>
      <param name="index">图片序号</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager">
      <summary>
            商品类目管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager.CategoryCacheTime">
      <summary>
            商品类目的缓存时间
            默认180秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager.CategoryCache">
      <summary>
            类目的缓存
            缓存中的类目包含属性和属性值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager.CategoryListCache">
      <summary>
            类目列表的缓存
            缓存中的类目不包含属性和属性值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager.GetWithCache(System.Guid)">
      <summary>
            查找类目，找不到时返回null
            </summary>
      <param name="categoryId">类目Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager.GetManyWithCache">
      <summary>
            获取类目列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductCategoryManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager">
      <summary>
            商品管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.ProductCacheTime">
      <summary>
            商品的缓存时间
            默认是3秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.ProductApiInfoCacheTime">
      <summary>
            商品信息的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.ProductSearchResultCacheTime">
      <summary>
            商品搜索结果的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.ProductCache">
      <summary>
            商品的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.ProductApiInfoCache">
      <summary>
            商品信息的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.ProductSearchResultCache">
      <summary>
            商品搜索结果的缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.GetWithCache(System.Guid)">
      <summary>
            获取商品
            商品不存在时返回null，存在时同时获取关联的数据
            结果会按商品Id缓存一定时间
            </summary>
      <param name="productId">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.GetProductApiInfo(System.Guid)">
      <summary>
            获取商品信息
            商品不存在时返回null，但商品已下架或等待销售时仍然返回信息
            结果会按商品Id和当前登录用户缓存一定时间
            </summary>
      <param name="productId">商品Id</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.GetProductSearchResponseFromHttpRequest">
      <summary>
            根据当前http请求获取搜索结果
            结果会按请求参数和当前登录用户缓存一定时间
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.SelectOneVisibleProductId">
      <summary>
            选择一个可见的商品Id
            返回的Id不固定，也可能返回Guid.Empty
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductPropertyManager">
      <summary>
            商品相册管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductPropertyManager.CategoryCacheTime">
      <summary>
            商品类目的缓存时间
            默认180秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductPropertyManager.PropertyListCache">
      <summary>
            属性列表的缓存
            缓存中的属性不包括属性值
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductPropertyManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductPropertyManager.GetManyWithCache">
      <summary>
            获取属性列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Services.ProductPropertyManager.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData">
      <summary>
            商品图片上传器使用的数据
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.MaxImageCount">
      <summary>
            可上传的商品图片数量
            全局变量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.ImageUrls">
      <summary>
            当前相册的图片列表
            仅绑定时使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.UploadedImages">
      <summary>
            上传的图片列表
            仅提交时使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.DeleteImages">
      <summary>
            要删除的图片列表
            仅提交时使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.MainImageIndex">
      <summary>
            主图序号
            从1开始
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.#ctor(System.Guid)">
      <summary>
            初始化，用于绑定
            </summary>
      <param name="productId">商品Id</param>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductAlbumUploadData.SaveFiles(System.Guid)">
      <summary>
            保存文件
            </summary>
      <param name="productId">商品Id</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataAffects">
      <summary>
            商品匹配数据的影响数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataConditions">
      <summary>
            商品匹配数据的匹配条件
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataForEdit">
      <summary>
            商品关联的匹配数据，用于反序列化客户端传回的值
            编辑商品时使用
            例
            条件								价格		货币		重量		库存		备注		调整
            颜色: 蓝, 大小 M, 订购数量 &gt;= 1	120		默认		继承		100		新版		上下
            默认								100  	默认		500		101
            [
            {
            	Conditions: {
            		Properties: [
            			{ PropertyId: 颜色的Id, PropertyValueId: 蓝色的Id },
            			{ PropertyId: 大小的Id, PropertyValueId: M的Id }
            		],
            		OrderCountGE: 1
            	},
            	Affects: {
            		Price: 120,
            		PriceCurrency: 0,
            		Weight: null,
            		Stock: 100,
            		Remark: "新版"
            	}
            },
            {
            	Conditions: {},
            	Affects: {
            		Price: 100,
            		PriceCurrency: 0,
            		Weight: 500,
            		Stock: 101,
            		Remark: ""
            	}
            }
            ]
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataForEdit.Conditions">
      <summary>
            匹配条件
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataForEdit.Affects">
      <summary>
            影响的数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchedDataForEdit.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters">
      <summary>
            商品匹配参数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductPropertyValueForEdit">
      <summary>
            商品属性关联的属性值数据，用于反序列化客户端传回的值
            编辑商品属性时使用
            </summary>
      <example>
            [
            	{ Id: 0, Name: "红色", Remark: "备注" },
            	{ Id: 10001, Name: "蓝色", Remark: "备注" },
            	{ Id: 10002, Name: "绿色", Remark: "备注" }
            ]
            </example>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductPropertyValueForEdit.Id">
      <summary>
            属性值Id
            新添加的属性Id等于null，修改原有的属性Id等于原值
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductPropertyValueForEdit.Name">
      <summary>
            属性值名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductPropertyValueForEdit.Remark">
      <summary>
            属性值备注
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductToPropertyValueForEdit">
      <summary>
            商品关联的属性值数据，用于反序列化客户端传回的值
            编辑商品时使用
            格式 { propertyId: 属性Id, propertyValueId: 属性值Id, name: 属性值名称 }
            例
            类目 [ 服装 ]
            属性
            年份 [2015] (文本框)
            产地 [广东] (文本框)
            适合季度 [春季] (下拉框)
            规格
            颜色 [✓蓝色] [✓红色] [灰色] (多选框)
            尺码 [✓S] [M] [L] (多选框)
            [
            	{ propertyId: 年份的Id, name: "2015" },
            	{ propertyId: 产地的Id, name: "广东" },
            	{ propertyId: 季度的Id, propertyValueId: 春季的Id, name: "春季" },
            	{ propertyId: 颜色的Id, propertyValueId: 蓝色的Id, name: "蓝色" },
            	{ propertyId: 颜色的Id, propertyValueId: 红色的Id, name: "红色" },
            	{ propertyId: 尺码的Id, propertyValueId: S的Id, name: "S" }
            ]
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductToPropertyValueForEdit.propertyId">
      <summary>
            属性Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductToPropertyValueForEdit.propertyValueId">
      <summary>
            属性值Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductToPropertyValueForEdit.name">
      <summary>
            属性值名称
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductAlbumUploaderAttribute">
      <summary>
            商品相册上传器的属性
            编辑商品时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductAlbumUploaderAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductMatchedDatasEditorAttribute">
      <summary>
            商品匹配数据编辑器的属性
            编辑商品时使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductMatchedDatasEditorAttribute.CategoryFieldName">
      <summary>
            类目Id的字段名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductMatchedDatasEditorAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="categoryFieldName">类目Id的字段名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductPropertyValuesEditorAttribute">
      <summary>
            商品属性值的编辑器的属性
            编辑商品属性时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductPropertyValuesEditorAttribute.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductToProperyValuesEditorAttribute">
      <summary>
            商品关联的属性值的编辑器的属性
            编辑商品时使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductToProperyValuesEditorAttribute.CategoryFieldName">
      <summary>
            类目Id的字段名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes.ProductToProperyValuesEditorAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="name">字段名称</param>
      <param name="categoryFieldName">类目Id的字段名称</param>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductAlbumUploader">
      <summary>
            商品相册上传器
            编辑商品时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductAlbumUploader.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductAlbumUploader.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductMatchedDataEditor">
      <summary>
            商品匹配数据编辑器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductMatchedDataEditor.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductMatchedDataEditor.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductPropertyValuesEditor">
      <summary>
            商品属性值的编辑器
            编辑商品属性时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductPropertyValuesEditor.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductPropertyValuesEditor.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductToProperyValuesEditor">
      <summary>
            商品关联的属性值的编辑器
            编辑商品时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductToProperyValuesEditor.Build(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取表单字段的html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers.ProductToProperyValuesEditor.Parse(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormField,System.Collections.Generic.IList{System.String})">
      <summary>
            解析提交的字段的值
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductCategoryListItemProvider">
      <summary>
            商品类目的选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductCategoryListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductNonSalesPropertyListItemProvider">
      <summary>
            商品非销售属性的选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductNonSalesPropertyListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductSalesPropertyListItemProvider">
      <summary>
            商品销售属性的选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductSalesPropertyListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductStateListItemProvider">
      <summary>
            商品状态的选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductStateListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductTypeListItemProvider">
      <summary>
            商品类型的选项列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders.ProductTypeListItemProvider.GetItems">
      <summary>
            获取选项列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.BarCodeBinder">
      <summary>
            条形码
            值名 BarCode
            格式 字符串
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.BarCodeBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder">
      <summary>
            商品匹配数据的影响数据绑定器
            绑定器只在商品编辑时使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder.Header">
      <summary>
            列头部显示的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder.Contents">
      <summary>
            用于编辑影响数据的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder.Bind">
      <summary>
            绑定数据到Html的函数
            例 function($binder, affects) { $binder.find("input").val(affects.Example) }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder.Collect">
      <summary>
            从Html收集数据的函数
            例 function($binder, affects) { affects.Example = $binder.find("input").val(); }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases.ProductMatchedDataAffectsBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器，返回是否成功
            </summary>
      <param name="categoryId">类目Id</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.ItemNoBinder">
      <summary>
            货号
            值名 ItemNo
            格式 字符串
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.ItemNoBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.PriceBinder">
      <summary>
            价格
            值名 Price
            格式 浮点数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.PriceBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.PriceCurrencyBinder">
      <summary>
            货币
            值名 PriceCurrency
            格式 字符串（Currency类型）
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.PriceCurrencyBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.RemarkBinder">
      <summary>
            备注
            值名 Remark
            格式 字符串
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.RemarkBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.StockBinder">
      <summary>
            库存
            值名 Stock
            格式 整数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.StockBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.WeightBinder">
      <summary>
            重量
            值名 Weight
            格式 小数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.WeightBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder">
      <summary>
            商品匹配数据的条件绑定器
            绑定器只在商品编辑时使用
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder.Contents">
      <summary>
            用于编辑条件的Html
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder.Bind">
      <summary>
            绑定数据到Html的函数
            例 function($binder, conditions) { $binder.find("input").val(conditions.Example) }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder.Collect">
      <summary>
            从Html收集数据的函数
            例 function($binder, conditions) { conditions.Example = $binder.find("input").val(); }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder.Display">
      <summary>
            转换条件到显示字符串的函数
            例 function(conditions) { return "Example: " + conditions.Example; }
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases.ProductMatchedDataConditionBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器，返回是否成功
            </summary>
      <param name="categoryId">类目Id</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.OrderCountGEBinder">
      <summary>
            订购数量
            值名 OrderCountGE
            格式 整数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.OrderCountGEBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.PropertiesBinder">
      <summary>
            规格条件
            值名 Properties
            格式 [ { PropertyId: ..., PropertyValueId: ... }, ... ]
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.PropertiesBinder.Init(System.Nullable{System.Guid})">
      <summary>
            初始化绑定器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.Extensions.ProductExtensions">
      <summary>
            商品的扩展函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.Extensions.ProductExtensions.GetMatchParametersDescription(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            获取商品匹配参数的描述
            </summary>
      <param name="product">商品</param>
      <param name="parameters">商品匹配参数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.Interfaces.IProductMatchParametersDescriptionProvider">
      <summary>
            商品匹配参数描述的提供器
            用于构建商品匹配参数的字符串描述
            可以用于
            - 显示在订单的商品信息中
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.Interfaces.IProductMatchParametersDescriptionProvider.DisplayOrder">
      <summary>
            显示顺序，从小到大
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.Interfaces.IProductMatchParametersDescriptionProvider.GetDescription(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            获取描述，没有时返回null
            </summary>
      <param name="product">商品Id</param>
      <param name="parameters">商品匹配参数</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.ItemNoDescriptionProvider">
      <summary>
            获取货号的描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.ItemNoDescriptionProvider.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.ItemNoDescriptionProvider.GetDescription(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            获取描述，没有时返回null
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.PropertiesDescriptionProvider">
      <summary>
            获取属性值的描述
            例如 "颜色: 红色 尺码: L"
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.PropertiesDescriptionProvider.DisplayOrder">
      <summary>
            显示顺序
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.PropertiesDescriptionProvider.GetDescription(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product,ZKWeb.Plugins.Shopping.Product.src.Domain.Structs.ProductMatchParameters)">
      <summary>
            获取描述，没有时返回null
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.BrandDisplayField">
      <summary>
            品牌
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.BrandDisplayField.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.BrandDisplayField.GetDisplayHtml(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            获取显示的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.Interfaces.IProductSalesInfoDisplayField">
      <summary>
            商品销售信息的显示字段
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.Interfaces.IProductSalesInfoDisplayField.Name">
      <summary>
            字段名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.Interfaces.IProductSalesInfoDisplayField.GetDisplayHtml(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            获取显示的Html
            不显示时可返回空或null
            </summary>
      <param name="product">商品</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.ModelNumberDisplayField">
      <summary>
            货号
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.ModelNumberDisplayField.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.ModelNumberDisplayField.GetDisplayHtml(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            获取显示的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.SellerDisplayField">
      <summary>
            卖家
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.SellerDisplayField.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.SellerDisplayField.GetDisplayHtml(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            获取显示的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.WeightDisplayField">
      <summary>
            重量
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.WeightDisplayField.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.WeightDisplayField.GetDisplayHtml(ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product)">
      <summary>
            获取显示的Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Shopping.Product.src.UIComponents.StaticTableHandlers.ProductTableHandler">
      <summary>
            前台商品列表使用的商品表格的回调
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.StaticTableHandlers.ProductTableHandler.OnQuery(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product}@)">
      <summary>
            过滤数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.StaticTableHandlers.ProductTableHandler.OnSort(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Linq.IQueryable{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product}@)">
      <summary>
            排序数据
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Shopping.Product.src.UIComponents.StaticTableHandlers.ProductTableHandler.OnSelect(ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.StaticTableSearchRequest,System.Collections.Generic.IList{ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.EntityToTableRow{ZKWeb.Plugins.Shopping.Product.src.Domain.Entities.Product}})">
      <summary>
            选择数据
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler">
      <summary>
            在网页中运行单元测试使用的事件处理器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnAllTestStarting(ZKWebStandard.Testing.Events.AllTestStartingInfo)">
      <summary>
            程序集测试开始
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnAllTestCompleted(ZKWebStandard.Testing.Events.AllTestCompletedInfo)">
      <summary>
            程序集测试完毕
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnDebugMessage(ZKWebStandard.Testing.Events.DebugMessageInfo)">
      <summary>
            收到除错信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnErrorMessage(ZKWebStandard.Testing.Events.ErrorMessageInfo)">
      <summary>
            收到错误信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnTestFailed(ZKWebStandard.Testing.Events.TestFailedInfo)">
      <summary>
            单项测试失败时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnTestPassed(ZKWebStandard.Testing.Events.TestPassedInfo)">
      <summary>
            单项测试通过时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnTestSkipped(ZKWebStandard.Testing.Events.TestSkippedInfo)">
      <summary>
            单项测试跳过时
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers.TestWebEventHandler.OnTestStarting(ZKWebStandard.Testing.Events.TestStartingInfo)">
      <summary>
            单项测试开始时
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo">
      <summary>
            程序集的测试信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.AssemblyName">
      <summary>
            程序集名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.State">
      <summary>
            测试状态
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.StateName">
      <summary>
            状态名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.Counter">
      <summary>
            测试结果的计数器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.SkippedMessage">
      <summary>
            跳过时输出的信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.FailedMessage">
      <summary>
            失败时输出的信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.ErrorMessage">
      <summary>
            错误信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.DebugMessage">
      <summary>
            除错信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.UpdateTime">
      <summary>
            更新时间 (Ticks)
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.#ctor">
      <summary>
            初始化，反序列化时使用
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.#ctor(System.Reflection.Assembly)">
      <summary>
            初始化
            </summary>
      <param name="assembly">程序集</param>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.Updated">
      <summary>
            设置更新时间
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.Resetable">
      <summary>
            判断信息是否可重置
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.Reset">
      <summary>
            重置信息，仅运行完毕后可以执行这个函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo.TryWaitingToRun">
      <summary>
            尝试等待开始运行
            返回是否成功设置了状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.Enums.AssemblyTestState">
      <summary>
            程序集的测试状态
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.Enums.AssemblyTestState.NotRunning">
      <summary>
            未运行
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.Enums.AssemblyTestState.WaitingToRun">
      <summary>
            等待运行
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.Enums.AssemblyTestState.Running">
      <summary>
            运行中
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.Enums.AssemblyTestState.FinishedRunning">
      <summary>
            运行完毕
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Controllers.WebTesterController">
      <summary>
            网页上运行单元测试
            功能：
            - 显示测试表格
            - 定时向服务器抓取测试信息
              ?action=fetch
            - 重置测试结果
              ?action=reset_all
            - 运行指定项或全部项
              ?action=start＆assembly=name
              ?action=start_all
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Controllers.WebTesterController.PostAction">
      <summary>
            处理POST请求
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Controllers.WebTesterController.Action">
      <summary>
            处理请求
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager">
      <summary>
            网页上运行单元测试使用的管理器
            
            单元测试运行流程
            - 检查单元测试线程是否已启动，未启动时启动
            - 把需要测试的程序标记为等待运行
            - 单元测试线程运行等待运行的测试，并设置测试信息
              测试信息以程序集为单位
            
            单元测试的信息全局共享并可以随时获取
            单元测试的信息可手动重置，仅限于状态是"运行完毕"
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.Informations">
      <summary>
            测试信息列表
            全局唯一，创建后不应该进行更改
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.InformationsLock">
      <summary>
            测试信息列表使用的线程锁
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.RunningThread">
      <summary>
            测试线程
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.RunningThreadLock">
      <summary>
            测试线程使用的锁
            优先级大于InformationsLock
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.EnsureRunningThread">
      <summary>
            检查测试线程是否已运行，未运行时运行
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.RunningThreadBody">
      <summary>
            测试线程的运行函数
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.GetInformations">
      <summary>
            获取当前的测试信息
            返回的列表是克隆后的内容
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.GetInformations(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>
            获取当前的测试信息，只获取差异部分
            返回的列表是克隆后的内容
            </summary>
      <param name="updateTimes">{ 程序集: 更新时间 }</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.ResetInformations">
      <summary>
            重置所有测试信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.UpdateInformation(System.String,System.Action{ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.AssemblyTestInfo})">
      <summary>
            更新指定的测试信息
            </summary>
      <param name="assemblyName">程序集名称</param>
      <param name="action">更新函数</param>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.RunAssemblyTestBackground(System.String)">
      <summary>
            后台运行指定的测试
            </summary>
      <param name="assemblyName">程序集名称</param>
    </member>
    <member name="M:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services.WebTesterManager.RunAllAssemblyTestBackground">
      <summary>
            后台运行所有测试
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Mobile.Frame.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Mobile.Frame.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Mobile.Frame.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Mobile.Frame.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Mobile.Frame.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.Mobile.Frame.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.ExtraConfigKeys.VisualEditorExtraConfigKeys">
      <summary>
            网站附加配置中使用的键
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.ExtraConfigKeys.VisualEditorExtraConfigKeys.EditablePagesCacheTime">
      <summary>
            可编辑的页面缓存时间，单位是秒
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.ExtraConfigKeys.VisualEditorExtraConfigKeys.WidgetsCacheTime">
      <summary>
            模块信息的缓存时间，单位是秒
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.ExtraConfigKeys.VisualEditorExtraConfigKeys.FileUploadDirectory">
      <summary>
            文件上传目录名称
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpContextWrappers.VisualEditorHttpContext">
      <summary>
            可视化编辑使用的Http上下文
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpContextWrappers.VisualEditorHttpContext.#ctor(ZKWebStandard.Web.IHttpContext,System.String)">
      <summary>
            初始化
            </summary>
      <param name="originalContext">原始的Http上下文</param>
      <param name="path">原始的请求路径</param>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpContextWrappers.VisualEditorHttpRequest">
      <summary>
            可视化编辑使用的Http请求
            用于重载路径相关的成员
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpContextWrappers.VisualEditorHttpRequest.#ctor(ZKWebStandard.Web.IHttpRequest,System.String)">
      <summary>
            初始化
            </summary>
      <param name="originalRequest">原始的http请求</param>
      <param name="path">原始的请求路径</param>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpContextWrappers.VisualEditorHttpResponse">
      <summary>
            可视化编辑使用的Http回应
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpContextWrappers.VisualEditorHttpResponse.#ctor(ZKWebStandard.Web.IHttpResponse,ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpContextWrappers.VisualEditorHttpContext)">
      <summary>
            初始化
            </summary>
      <param name="originalResponse">原始的回应</param>
      <param name="parentContext">所属的Http上下文</param>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpRequestHandlers.VisualEditorHandlerWrapper">
      <summary>
            可视化编辑器处理器
            路径规则
            /visual_editor/{路径}?参数
            显示原页面并注入可视化编辑器的脚本和样式文件
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpRequestHandlers.VisualEditorHandlerWrapper.Prefix">
      <summary>
            路径前缀
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpRequestHandlers.VisualEditorHandlerWrapper.OverridedContextKey">
      <summary>
            重载Http上下文的对象保存在Http上下文数据的键
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpRequestHandlers.VisualEditorHandlerWrapper.WrapHandlerAction(System.Action)">
      <summary>
            包装请求函数
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.PrivilegeProviders.VisualEditorPrivilegesProvider">
      <summary>
            提供可视化编辑权限
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.PrivilegeProviders.VisualEditorPrivilegesProvider.GetPrivileges">
      <summary>
            获取权限列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers.VisualWidgetRenderer">
      <summary>
            可视化编辑使用的模板模块渲染器
            支持自定义内嵌样式和前后Html
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers.VisualWidgetRenderer.CssClassKey">
      <summary>
            Css类的参数名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers.VisualWidgetRenderer.InlineCssKey">
      <summary>
            内嵌Css的参数名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers.VisualWidgetRenderer.BeforeHtmlKey">
      <summary>
            前置Html的参数名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers.VisualWidgetRenderer.AfterHtmlKey">
      <summary>
            后置Html的参数名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers.VisualWidgetRenderer.GetBeforeHtml(DotLiquid.Context,ZKWeb.Templating.DynamicContents.TemplateWidget)">
      <summary>
            获取前Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers.VisualWidgetRenderer.GetAfterHtml(DotLiquid.Context,ZKWeb.Templating.DynamicContents.TemplateWidget)">
      <summary>
            获取后Html
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.Translates.en_US">
      <summary>
            英文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.Translates.ja_JP">
      <summary>
            日本语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.Translates.ko_KR">
      <summary>
            韩语翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.Translates.zh_TW">
      <summary>
            繁体中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.DefaultVisualEditablePagesProvider">
      <summary>
            获取可视化编辑中可以编辑的页面
            获取流程:
            - 遍历所有插件
            - 查找所有非abstract的控制器类型
            - 查找控制器类型中带Action和Description属性, 且Action属性的Method是GET的函数
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.DefaultVisualEditablePagesProvider.EditablePagesSet">
      <summary>
            可编辑的页面Url集合
            调用GetEditablePages后自动更新
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.DefaultVisualEditablePagesProvider.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.DefaultVisualEditablePagesProvider.GetEditablePages">
      <summary>
            获取可编辑的页面列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.DefaultVisualEditablePagesProvider.IsPageEditable(System.String)">
      <summary>
            判断页面是否可以编辑
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.DefaultVisualEditablePagesProvider.ClearCache">
      <summary>
            清理缓存
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.Interfaces.IVisualEditablePagesProvider">
      <summary>
            获取可以在可视化编辑器中编辑的页面的接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.Interfaces.IVisualEditablePagesProvider.GetEditablePages">
      <summary>
            获取可编辑的页面列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.Interfaces.IVisualEditablePagesProvider.IsPageEditable(System.String)">
      <summary>
            判断页面是否可以编辑
            </summary>
      <param name="url">页面Url</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetFormBuilders.DefaultVisualWidgetFormBuilder">
      <summary>
            可视化编辑器中编辑模块的表单的构建器
            只支持Common.Base中的表单字段类型
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetFormBuilders.DefaultVisualWidgetFormBuilder.AddFormField(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder,ZKWeb.Templating.DynamicContents.TemplateWidget,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            根据单个模块参数添加表单字段
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetFormBuilders.Interfaces.IVisualWidgetFormBuilder">
      <summary>
            可视化编辑器中编辑模块的表单的构建器接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetFormBuilders.Interfaces.IVisualWidgetFormBuilder.AddFormField(ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.FormBuilder,ZKWeb.Templating.DynamicContents.TemplateWidget,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            根据单个模块参数添加表单字段
            </summary>
      <param name="form">表单构建器</param>
      <param name="widget">模板模块对象</param>
      <param name="argument">单个模块参数</param>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetsProviders.DefaultVisualWidgetsProvider">
      <summary>
            获取可以在可视化编辑中使用的模块
            获取流程:
            - 遍历App_Data\templates，查找widget文件
            - 相反顺序遍历插件，遍历插件\templates，查找widget文件
            不遍历设备专用的模板目录，
            原因是设备专用的模块文件只应用于重载修改样式，同时减少处理的复杂度
            同样的自定义文件储存中的模块也不遍历，如果有需要请另外编写提供器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetsProviders.DefaultVisualWidgetsProvider.GetWidgetPath(System.String,System.String)">
      <summary>
            获取模块的路径
            替换\到/并去除.widget后缀名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetsProviders.DefaultVisualWidgetsProvider.GetWidgets">
      <summary>
            获取可以在可视化编辑中使用的模块列表
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetsProviders.Interfaces.IVisualWidgetsProvider">
      <summary>
            获取可以在可视化编辑中使用的模块的接口
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetsProviders.Interfaces.IVisualWidgetsProvider.GetWidgets">
      <summary>
            获取可以在可视化编辑中使用的模块列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController">
      <summary>
            可视化编辑使用的Api控制器
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.GetTopBar">
      <summary>
            获取顶部栏的Html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.GetManageThemeForm">
      <summary>
            获取管理主题的表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.GetSwitchPages">
      <summary>
            获取切换页面弹出框的Html
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.DownloadTheme(System.String)">
      <summary>
            下载主题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.DownloadBackupTheme(System.String)">
      <summary>
            下载备份主题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.ApplyTheme(System.String)">
      <summary>
            应用主题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.ApplyBackupTheme(System.String)">
      <summary>
            应用备份主题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.DeleteTheme(System.String)">
      <summary>
            删除主题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.CreateTheme">
      <summary>
            创建主题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.UploadTheme">
      <summary>
            上传主题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.GetWidgetEditForm(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            获取编辑模块的表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.SubmitWidgetEditForm(System.String)">
      <summary>
            提交编辑模块的表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.GetWidgetHtml(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            获取模块的Html
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers.VisualEditorApiController.SaveChanges(ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult)">
      <summary>
            保存可视化编辑的修改
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualPageManager">
      <summary>
            可视化编辑页面管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualPageManager.EditablePagesCacheTime">
      <summary>
            可编辑的页面缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualPageManager.EditablePagesCache">
      <summary>
            可编辑的页面缓存
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualPageManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualPageManager.GetEditablePages">
      <summary>
            获取可编辑的页面列表
            以分组形式返回
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualPageManager.GetPageResult(System.String)">
      <summary>
            获取页面返回的模板结果对象
            如果页面不存在则返回null
            </summary>
      <param name="pathAndQuery">页面的Url</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager">
      <summary>
            可视化编辑主题管理器
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.KeepBackups">
      <summary>
            最多保留100份备份
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.ThemeDirectoryName">
      <summary>
            主题文件夹的名称
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.BackupThemeDirectoryName">
      <summary>
            备份主题文件夹的名称
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.ThemeInforFilename">
      <summary>
            主题信息的文件名
            </summary>
    </member>
    <member name="F:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.PreviewFilename">
      <summary>
            预览图片的文件名
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.ExportThemeToStream(ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo,System.IO.Stream)">
      <summary>
            导出当前主题到数据流
            包括以下文件
            	theme.json 主题信息
            	App_Data\areas下的文件
            不包括以下文件
            	App_Data\static下的文件
            	App_Data\templates下的文件
            	这些文件可以手动添加到包里面
            </summary>
      <param name="info">主题信息</param>
      <param name="stream">数据流</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.ImportThemeFromStream(System.IO.Stream)">
      <summary>
            从数据流导入主题覆盖当前的主题
            </summary>
      <param name="stream">数据流</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.ReadThemeInfoFromStream(System.IO.Stream)">
      <summary>
            从数据流获取主题信息
            </summary>
      <param name="stream">数据流</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.BackupUsingTheme">
      <summary>
            备份当前主题
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.GetThemesFromDirectory(System.String)">
      <summary>
            从指定文件夹读取主题列表
            </summary>
      <param name="directoryName">文件夹名称</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.GetThemes">
      <summary>
            获取主题列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.GetBackupThemes">
      <summary>
            获取备份的主题列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.GetThemeStream(System.String)">
      <summary>
            获取主题的数据流
            </summary>
      <param name="filename">文件名</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.GetBackupThemeStream(System.String)">
      <summary>
            获取备份主题的数据流
            </summary>
      <param name="filename">文件名</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.ApplyTheme(System.String)">
      <summary>
            应用主题
            </summary>
      <param name="filename">文件名</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.ApplyBackupTheme(System.String)">
      <summary>
            应用备份主题
            </summary>
      <param name="filename">文件名</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.DeleteTheme(System.String)">
      <summary>
            删除主题
            </summary>
      <param name="filename">文件名</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.UploadTheme(System.String,System.IO.Stream)">
      <summary>
            上传主题
            </summary>
      <param name="filename">文件名</param>
      <param name="stream">数据流</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.CreateTheme(ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo)">
      <summary>
            创建主题
            根据当前使用的主题创建
            </summary>
      <param name="info">主题信息</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualThemeManager.SaveEditResult(ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult)">
      <summary>
            保存可视化编辑的结果
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager">
      <summary>
            可视化编辑模块管理器
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager.WidgetsCacheTime">
      <summary>
            模块信息的缓存时间
            默认是15秒，可通过网站配置指定
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager.WidgetsCache">
      <summary>
            模块信息的缓存
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager.FileUploadDirectory">
      <summary>
            文件上传目录名称
            默认是 "theme.visualeditor.files"
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager.GetWidgets">
      <summary>
            获取模块信息列表
            以分组形式返回
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager.GetWidgetHtml(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            获取模块的Html
            </summary>
      <param name="url">模块所在的Url地址</param>
      <param name="path">模块的路径</param>
      <param name="args">模块的参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services.VisualWidgetManager.GetWidgetEditForm(ZKWeb.Templating.DynamicContents.TemplateWidgetInfo)">
      <summary>
            获取模块的编辑表单
            </summary>
      <param name="widgetInfo">模块信息</param>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageGroup">
      <summary>
            可编辑的页面分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageGroup.Group">
      <summary>
            分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageGroup.Pages">
      <summary>
            页面列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageGroup.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageGroup.#ctor(System.String,System.Collections.Generic.IList{ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo})">
      <summary>
            初始化
            </summary>
      <param name="group">分组</param>
      <param name="pages">页面列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageGroup.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo">
      <summary>
            可以在可视化编辑中编辑的页面信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo.Group">
      <summary>
            分组，可以是翻译前的文本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo.Name">
      <summary>
            名称，可以是翻译前的文本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo.Url">
      <summary>
            页面的Url
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo.#ctor(System.String,System.String,System.String)">
      <summary>
            初始化
            </summary>
      <param name="group">分组，可以是翻译前的文本</param>
      <param name="name">名称，可以是翻译前的文本</param>
      <param name="url">页面的Url</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditablePageInfo.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult">
      <summary>
            可视化编辑结果
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult.Areas">
      <summary>
            区域的编辑结果列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult.AreaEditResult">
      <summary>
            单个区域的编辑结果
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult.AreaEditResult.AreaId">
      <summary>
            区域Id
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult.AreaEditResult.Widgets">
      <summary>
            模块列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualEditResult.AreaEditResult.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo">
      <summary>
            可视化主题信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.Name">
      <summary>
            主题名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.Description">
      <summary>
            主题描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.Author">
      <summary>
            主题作者
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.Version">
      <summary>
            主题版本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.Filename">
      <summary>
            主题文件名
            读取时设置
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.PreviewImageBase64">
      <summary>
            预览图的Base64
            读取时设置
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualThemeInfo.SetPreviewImage(System.DrawingCore.Image)">
      <summary>
            设置预览图
            </summary>
      <param name="image">预览图</param>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetGroup">
      <summary>
            可以在可视化编辑中使用的模块分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetGroup.Group">
      <summary>
            分组
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetGroup.Widgets">
      <summary>
            模块列表
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetGroup.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetGroup.#ctor(System.String,System.Collections.Generic.IList{ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetInfo})">
      <summary>
            初始化
            </summary>
      <param name="group">分组</param>
      <param name="widgets">模块列表</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetGroup.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetInfo">
      <summary>
            可以在可视化编辑中使用的模块信息
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetInfo.Group">
      <summary>
            分组名称，可以是翻译前的文本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetInfo.WidgetInfo">
      <summary>
            模板模块信息
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetInfo.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetInfo.#ctor(System.String,ZKWeb.Templating.DynamicContents.TemplateWidgetInfo)">
      <summary>
            初始化
            </summary>
      <param name="group">分组名称，可以是翻译前的文本</param>
      <param name="widgetInfo">模板模块信息</param>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs.VisualWidgetInfo.ToLiquid">
      <summary>
            允许描画到模板
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.Plugin">
      <summary>
            载入插件时的处理
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.Plugin.#ctor">
      <summary>
            初始化
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm">
      <summary>
            创建主题的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.ThemeName">
      <summary>
            主题名称
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.ThemeFilename">
      <summary>
            主题文件名
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.ThemeDescription">
      <summary>
            主题描述
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.ThemeAuthor">
      <summary>
            主题作者
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.ThemeVersion">
      <summary>
            主题版本
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.ThemePreviewImage">
      <summary>
            主题预览图
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.CreateThemeForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.UploadThemeForm">
      <summary>
            上传主题的表单
            </summary>
    </member>
    <member name="P:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.UploadThemeForm.ThemeFile">
      <summary>
            主题文件
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.UploadThemeForm.OnBind">
      <summary>
            绑定表单
            </summary>
    </member>
    <member name="M:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms.UploadThemeForm.OnSubmit">
      <summary>
            提交表单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Widgets.Base.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Widgets.Base.src.Controllers.TemplateWidgetImageBrowserController">
      <summary>
            模板模块图片浏览器
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Widgets.Product.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:ZKWeb.Plugins.Theme.Widgets.Slideshow.src.Components.Translates.zh_CN">
      <summary>
            中文翻译
            </summary>
    </member>
    <member name="T:WxPayAPI.WxPayApi">
      <summary>
            微信支付Api包装类
            </summary>
    </member>
    <member name="M:WxPayAPI.WxPayApi.Micropay(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            提交被扫支付API
            收银员使用扫码设备读取微信用户刷卡授权码以后，二维码或条码信息传送至商户收银台，
            由商户收银台或者商户后台调用该接口发起支付。
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给被扫支付API的参数</param>
      <param name="timeOut">超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.OrderQuery(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            查询订单
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给查询订单API的参数</param>
      <param name="timeOut">超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.Reverse(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            撤销订单API接口
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给撤销订单API接口的参数，out_trade_no和transaction_id必填一个</param>
      <param name="timeOut">接口超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.Refund(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            申请退款
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给申请退款API的参数</param>
      <param name="timeOut">超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.RefundQuery(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            查询退款
            提交退款申请后，通过该接口查询退款状态。退款有一定延时
            用零钱支付的退款20分钟内到账，银行卡支付的退款3个工作日后重新查询退款状态
            out_refund_no、out_trade_no、transaction_id、refund_id四个参数必填一个
            </summary>
      <param name="config">微信支付接口</param>
      <param name="inputObj">提交给查询退款API的参数</param>
      <param name="timeOut">接口超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.DownloadBill(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            下载对账单
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给下载对账单API的参数</param>
      <param name="timeOut">接口超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.ShortUrl(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            转换短链接
            该接口主要用于扫码原生支付模式一中的二维码链接转成短链接(weixin://wxpay/s/XXXXXX)，
            减小二维码数据量，提升扫描速度和精确度。
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给转换短连接API的参数</param>
      <param name="timeOut">接口超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.UnifiedOrder(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            统一下单
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给统一下单API的参数</param>
      <param name="timeOut">超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.CloseOrder(WxPayAPI.WxPayConfig,WxPayAPI.WxPayData,System.Int32)">
      <summary>
            关闭订单
            </summary>
      <param name="config">微信支付设置</param>
      <param name="inputObj">提交给关闭订单API的参数</param>
      <param name="timeOut">接口超时时间</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.GenerateOutTradeNo(WxPayAPI.WxPayConfig)">
      <summary>
            根据当前系统时间加随机序列来生成订单号
            </summary>
      <param name="config">微信支付设置</param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.GenerateTimeStamp">
      <summary>
            生成时间戳，标准北京时间，时区为东八区，自1970年1月1日 0点0分0秒以来的秒数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayApi.GenerateNonceStr">
      <summary>
            生成随机串，随机串包含字母或数字
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:WxPayAPI.WxPayConfig">
      <summary>
            微信支付设置
            </summary>
    </member>
    <member name="F:WxPayAPI.WxPayConfig.WeChatQRCodePayNotifyUrl">
      <summary>
            微信扫码支付的异步通知Url
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.APPID">
      <summary>
            绑定支付的APPID（必须配置）
            例如 wx2428e34e0e7dc6ef
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.MCHID">
      <summary>
            商户号（必须配置）
            例如 1233410002
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.KEY">
      <summary>
            商户支付密钥，参考开户邮件设置（必须配置）
            例如 e10adc3849ba56abbe56e056f20f883e
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.APPSECRET">
      <summary>
            公众帐号secert（仅JSAPI支付的时候需要配置）
            例如 51c56b886b5be869567dd389b3e5d1d6
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.SSLCERT_PATH">
      <summary>
            证书路径
            应该是APP_Data下的路径
            例如 cert/apiclient_cert.p12
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.SSLCERT_PASSWORD">
      <summary>
            证书密码
            例如 1233410002
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.NOTIFY_URL">
      <summary>
            支付结果通知回调url，用于商户接收支付结果
            例如 http://paysdk.weixin.qq.com/example/ResultNotifyPage.aspx
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayConfig.IP">
      <summary>
            APP和网页支付提交用户端ip，Native支付填调用微信支付API的机器IP
            </summary>
    </member>
    <member name="M:WxPayAPI.WxPayConfig.#ctor(ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers.WechatApiHandler.ApiData)">
      <summary>
            初始化
            </summary>
      <param name="apiData">接口数据</param>
    </member>
    <member name="T:WxPayAPI.WxPayData">
      <summary>
            微信支付协议接口数据类，所有的API接口通信都依赖这个数据结构，
            在调用接口之前先填充各个字段的值，然后进行接口通信，
            这样设计的好处是可扩展性强，用户可随意对协议进行更改而不用重新设计数据结构，
            还可以随意组合出不同的协议数据包，不用为每个协议设计一个数据包结构
            </summary>
    </member>
    <member name="F:WxPayAPI.WxPayData.m_values">
      <summary>
            采用排序的Dictionary的好处是方便对数据包进行签名，不用再签名之前再做一次排序
            </summary>
    </member>
    <member name="M:WxPayAPI.WxPayData.SetValue(System.String,System.Object)">
      <summary>
            设置某个字段的值
            </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:WxPayAPI.WxPayData.GetValue(System.String)">
      <summary>
            根据字段名获取某个字段的值
            </summary>
      <param name="key">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.IsSet(System.String)">
      <summary>
            判断某个字段是否已设置
            </summary>
      <param name="key">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.ToXml">
      <summary>
            将Dictionary转成xml
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.FromXmlWithoutCheckSign(System.String)">
      <summary>
            将xml转为WxPayData对象并返回对象内部的数据
            不检查签名
            </summary>
      <param name="xml">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.FromXml(WxPayAPI.WxPayConfig,System.String)">
      <summary>
            将xml转为WxPayData对象并返回对象内部的数据
            </summary>
      <param name="config">
      </param>
      <param name="xml">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.ToUrl">
      <summary>
            Dictionary格式转化成url参数格式
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.ToJson">
      <summary>
            Dictionary格式化成Json
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.ToPrintStr">
      <summary>
            values格式化成能在Web页面上显示的结果（因为web页面上不能直接输出xml格式的字符串）
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.MakeSign(WxPayAPI.WxPayConfig)">
      <summary>
            生成签名，详见签名生成算法
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.CheckSign(WxPayAPI.WxPayConfig)">
      <summary>
            检测签名是否正确
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayData.GetValues">
      <summary>
            获取Dictionary
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:WxPayAPI.WxPayData.IsError">
      <summary>
            是否错误
            </summary>
    </member>
    <member name="P:WxPayAPI.WxPayData.ErrMsg">
      <summary>
            错误信息
            </summary>
    </member>
    <member name="T:WxPayAPI.WxPayException">
      <summary>
            微信支付抛出的例外
            </summary>
    </member>
    <member name="M:WxPayAPI.WxPayException.#ctor(System.String)">
      <summary>
            初始化
            </summary>
      <param name="msg">消息</param>
    </member>
    <member name="T:WxPayAPI.WxPayHttpService">
      <summary>
            http连接基础类，负责底层的http通信
            </summary>
    </member>
    <member name="M:WxPayAPI.WxPayHttpService.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
      <summary>
            不检查https证书
            微信原本的代码就要求这样，可能他们的证书有问题
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayHttpService.Post(WxPayAPI.WxPayConfig,System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            提交xml到指定地址
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:WxPayAPI.WxPayHttpService.Get(System.String)">
      <summary>
            处理http GET请求，返回数据
            </summary>
      <param name="url">请求的url地址</param>
      <returns>http GET成功后返回的数据，失败抛WebException异常</returns>
    </member>
    <member name="T:WxPayAPI.WxPayNotify">
      <summary>
            回调处理基类
            主要负责接收微信支付后台发送过来的数据，对数据进行签名验证
            子类在此类基础上进行派生并重写自己的回调处理过程
            </summary>
    </member>
    <member name="M:WxPayAPI.WxPayNotify.GetNotifyData(WxPayAPI.WxPayConfig,System.String)">
      <summary>
            接收从微信支付后台发送过来的数据
            </summary>
      <param name="config">微信支付设置</param>
      <param name="xml">微信发来的xml内容</param>
      <returns>微信支付后台返回的数据</returns>
    </member>
    <member name="N:WxPayAPI">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.Article.src.UIComponents.StaticTableHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.CKEditor.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.CKEditor.src.UIComponents.FormFieldHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.ImageBrowser.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.ImageBrowser.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.CMS.ImageBrowser.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.ActionFilters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.EntityOperationHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeTranslators">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.PrivilegeTranslators.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.ScaffoldAttributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Components.UserLoginHandlers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Controllers.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Controllers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.TypeTraits">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Entities.UserTypes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Filters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.UIComponents.AjaxTable.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.UIComponents.Forms">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.UIComponents.HtmlItems.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Admin.src.UIComponents.MenuItems.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.AdminSettings.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.AdminSettings.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.AdminSettings.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.AdminSettings.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.AdminSettings.src.UIComponents.MenuPages.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.CacheIsolationPolicies">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.CsrfTokenStore.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.DatabaseInitializeHandler">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.Exceptions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.GenericConfigs.Attributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.HttpRequestHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.Languages">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.Mscorlib.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.Mscorlib.Utils">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.ScheduledTasks.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.SessionIdSources">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.SessionIdStore.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Components.UrlFilters.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Controllers.ActionResults">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Controllers.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Entities.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Entities.TypeTraits">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Filters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Filters.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Repositories.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Services.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Services.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Uow">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Domain.Uow.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.Tests.UIComponents.Form.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.AjaxTable.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.BaseTable.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Enums.Attributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Attributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Handlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.Forms.Validators">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.HtmlItems.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.ListItems.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.MenuItems.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.ScriptStrings">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTable.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.StaticTableExporters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateFilters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Base.src.UIComponents.TemplateTags">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Captcha.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Captcha.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Captcha.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Captcha.src.Managers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Form.Attributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Captcha.src.UIComponents.Handlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.CodeEditor.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldAttributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.CodeEditor.src.UIComponents.FormFieldHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.AdminSettingsPages">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.Components.Currencies">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.Components.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.Domain.Service">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Currency.src.UIComponents.TemplateFilters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.CustomTranslate.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.CustomTranslate.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.CustomTranslate.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Datepicker.src.Components.Datepicker">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Datepicker.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldAttributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Datepicker.src.UIComponents.FormFieldHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.CodeEditor.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.CodeEditor.src.Components.UIComponents.DynamicFormFieldFactories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.DatePicker.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.DatePicker.src.Components.UIComponents.DynamicFormFieldFactories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldFactories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.FieldValidatorFactories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.DynamicForm.src.UIComponents.DynamicForm.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericClass.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericRecord.src.Components.ScheduledTasks">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericRecord.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericRecord.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.GenericTag.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.LanguageSwitcher.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.LanguageSwitcher.src.AdminSettingsPages">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.LanguageSwitcher.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.LanguageSwitcher.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.MenuPage.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.MenuPage.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuItems.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.MenuPage.src.UIComponents.MenuPages.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.PesudoStatic.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.PesudoStatic.src.Components.HttpRequestHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.PesudoStatic.src.Components.PesudoStatic.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.PesudoStatic.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.PesudoStatic.src.Components.UrlFilters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.PesudoStatic.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Components.Countries">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Components.Countries.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Components.Regions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldAttributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.UIComponents.FormFieldHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.Region.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.SerialGenerate.src.Components.SerialGenerate">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.SerialGenerate.src.Components.SerialGenerateHandlers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.SerialGenerate.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.Components.AjaxTableHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.Components.EntityOperationHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.DataEditFormCallbacks">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserContact.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserPanel.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserPanel.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserPanel.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserPanel.src.Controllers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserPanel.src.MenuPages.UIComponents.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Common.UserPanel.src.UIComponents.UserPanelMenuProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.PaymentApiHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Alipay.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Alipay.src.Controller">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Alipay.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.PaymentApiHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Controller">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.AlipayMobile.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Cash.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.OnArrive.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.PaymentApiHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Pingpp.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.Forms">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Pingpp.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.EntityOperationHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentApiHandlers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionChecker.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionCheckers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.PaymentTransactionHandlers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Components.Utils">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Domain.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Domain.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.PaymentTransactionHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.UIComponents.Forms">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.src.UIComponents.HtmlProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.PaymentApiHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Tenpay.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.Wechat.src.Components.PaymentApiHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.WeChat.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.WeChat.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Finance.Payment.WeChat.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.AfterSales.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Components.LogisticsTypes.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldAttributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.FormFieldHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Logistics.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCheckers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderCreators.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderHandlers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderLogisticsProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderLogisticsProviders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPaymentApiProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPaymentApiProviders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPriceCalculators">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderPriceCalculators.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderProductUnitPriceCalaculators">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderProductUnitPriceCalaculators.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderShippingAddressProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.OrderShippingAddressProviders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.PaymentTransactionHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.ScheduledTasks">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Components.UserLoginHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Domain.Entities.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Domain.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Domain.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.Forms">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.HtmlItems.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.OrderDisplayInfoProviders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.TemplateFilters">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UIComponents.ViewModels.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Order.src.UserPanelPages">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.GenericConfigs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchedDataMatchers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchParametersComparers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductMatchParametersComparers.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductStates.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.ProductTypes.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Controller">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Domain.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Domain.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldAttributes">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.FormFieldHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ListItemProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataAffectsBinders.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchedDataConditionBinders.Bases">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.Extensions">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductMatchParametersDescriptionProviders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.ProductSalesInfoDisplayFields.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.Product.src.UIComponents.StaticTableHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductBookmark.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductBookmark.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductBookmark.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductBookmark.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Entities">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Repositories">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.AjaxTableHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.EntityFormExtraHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Shopping.ProductRating.src.UIComponents.OrderDisplayInfoProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Testing.WebTester.src.Components.TestEventHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Testing.WebTester.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Testing.WebTester.src.Components.WebTester.Enums">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Testing.WebTester.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Testing.WebTester.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.Mobile.Frame.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.Mobile.Frame.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.ExtraConfigKeys">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.HttpRequestHandlers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.PrivilegeProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.TemplateWidgetRenderers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualEditablePagesProviders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetFormBuilders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetFormBuilders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetsProviders">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Components.VisualWidgetsProviders.Interfaces">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Services">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.Domain.Structs">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.VisualEditor.src.UIComponents.Forms">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.Widgets.Base.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.Widgets.Base.src.Controllers">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.Widgets.Product.src.Components.Translates">
      <summary />
    </member>
    <member name="N:ZKWeb.Plugins.Theme.Widgets.Slideshow.src.Components.Translates">
      <summary />
    </member>
    <member name="G:ZKWeb.Plugins">
      <summary />
    </member>
  </members>
</doc>